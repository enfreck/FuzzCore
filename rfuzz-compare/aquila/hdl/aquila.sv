/* Generated by Yosys 0.30+1 (git sha1 57241f9fa, clang 14.0.0-1ubuntu1.1 -fPIC -Os) */

(* dynports =  1  *)
(* hdlname = "\\bpu" *)
(* src = "./core/bpu.v:60.1-367.10" *)
module \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu (clk_i, rst_i, stall_i, pc_i, is_jal_i, is_cond_branch_i, dec_pc_i, exe_is_branch_i, branch_taken_i, branch_misprediction_i, branch_target_addr_i, branch_hit_o, branch_decision_o, branch_target_addr_o, \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcdistri_ram-bpu_pc_history___MUX_procmux8501__WIRE_we_i , \__MUX_ternary/core/bpuv127835__WIRE_eq/core/bpuv127833_Y , __MUX_procmux4936__WIRE_rst_i, __MUX_procmux3865__WIRE_stall_i, __MUX_procmux3691__WIRE_we, __MUX_procmux3490__WIRE_exe_is_branch_i, __MUX_procmux3156__WIRE_procmux3157_CMP
, __MUX_procmux3154__WIRE_branch_taken_i, __MUX_procmux3006__WIRE_procmux3007_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9795__WIRE_procmux2938_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9785__WIRE_autortlilcc2430Or9784, __MUX_autopmuxtreecc65recursive_mux_generator9781__WIRE_procmux3080_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9777__WIRE_autortlilcc2403ReduceOr9776, __MUX_autopmuxtreecc65recursive_mux_generator9773__WIRE_autortlilcc2403ReduceOr9772, __MUX_autopmuxtreecc65recursive_mux_generator9769__WIRE_autortlilcc2403ReduceOr9768, __MUX_autopmuxtreecc65recursive_mux_generator9765__WIRE_autortlilcc2403ReduceOr9764, __MUX_autopmuxtreecc65recursive_mux_generator9761__WIRE_autortlilcc2430Or9760, __MUX_autopmuxtreecc65recursive_mux_generator9757__WIRE_procmux6847_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9755__WIRE_procmux6845_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9511__WIRE_procmux6890_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9509__WIRE_autortlilcc2403ReduceOr9508, __MUX_autopmuxtreecc65recursive_mux_generator9505__WIRE_autortlilcc2430Or9504, __MUX_autopmuxtreecc65recursive_mux_generator9501__WIRE_procmux6888_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9499__WIRE_procmux6886_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9497__WIRE_autortlilcc2430Or9496, __MUX_autopmuxtreecc65recursive_mux_generator9493__WIRE_procmux6884_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9491__WIRE_procmux6882_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9489__WIRE_autortlilcc2403ReduceOr9488
, __MUX_autopmuxtreecc65recursive_mux_generator9485__WIRE_autortlilcc2403ReduceOr9484, __MUX_autopmuxtreecc65recursive_mux_generator9481__WIRE_autortlilcc2403ReduceOr9480, __MUX_autopmuxtreecc65recursive_mux_generator9477__WIRE_autortlilcc2430Or9476, __MUX_autopmuxtreecc65recursive_mux_generator9473__WIRE_procmux6880_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9471__WIRE_procmux6878_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9469__WIRE_autortlilcc2430Or9468, __MUX_autopmuxtreecc65recursive_mux_generator9465__WIRE_procmux6876_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9463__WIRE_procmux6874_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9461__WIRE_autortlilcc2403ReduceOr9460, __MUX_autopmuxtreecc65recursive_mux_generator9457__WIRE_autortlilcc2430Or9456, __MUX_autopmuxtreecc65recursive_mux_generator9453__WIRE_procmux6872_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9451__WIRE_procmux6870_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9449__WIRE_autortlilcc2430Or9448, __MUX_autopmuxtreecc65recursive_mux_generator9445__WIRE_procmux6868_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9443__WIRE_procmux6866_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9441__WIRE_autortlilcc2403ReduceOr9440, __MUX_autopmuxtreecc65recursive_mux_generator9437__WIRE_autortlilcc2403ReduceOr9436, __MUX_autopmuxtreecc65recursive_mux_generator9433__WIRE_autortlilcc2430Or9432, __MUX_autopmuxtreecc65recursive_mux_generator9429__WIRE_procmux6864_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9427__WIRE_procmux6862_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9425__WIRE_autortlilcc2430Or9424
, __MUX_autopmuxtreecc65recursive_mux_generator9421__WIRE_procmux6860_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9419__WIRE_procmux6858_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9417__WIRE_autortlilcc2403ReduceOr9416, __MUX_autopmuxtreecc65recursive_mux_generator9413__WIRE_autortlilcc2430Or9412, __MUX_autopmuxtreecc65recursive_mux_generator9409__WIRE_procmux6856_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9407__WIRE_procmux6854_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9405__WIRE_autortlilcc2430Or9404, __MUX_autopmuxtreecc65recursive_mux_generator9401__WIRE_procmux6852_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9399__WIRE_procmux6850_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9753__WIRE_autortlilcc2430Or9752, __MUX_autopmuxtreecc65recursive_mux_generator9749__WIRE_procmux6843_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9747__WIRE_procmux6841_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9745__WIRE_autortlilcc2403ReduceOr9744, __MUX_autopmuxtreecc65recursive_mux_generator9741__WIRE_autortlilcc2430Or9740, __MUX_autopmuxtreecc65recursive_mux_generator9737__WIRE_procmux6839_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9735__WIRE_procmux6837_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9733__WIRE_autortlilcc2430Or9732, __MUX_autopmuxtreecc65recursive_mux_generator9729__WIRE_procmux6835_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9727__WIRE_procmux6833_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9725__WIRE_autortlilcc2403ReduceOr9724, __MUX_autopmuxtreecc65recursive_mux_generator9721__WIRE_autortlilcc2403ReduceOr9720
, __MUX_autopmuxtreecc65recursive_mux_generator9717__WIRE_autortlilcc2430Or9716, __MUX_autopmuxtreecc65recursive_mux_generator9713__WIRE_procmux6831_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9711__WIRE_procmux6829_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9709__WIRE_autortlilcc2430Or9708, __MUX_autopmuxtreecc65recursive_mux_generator9705__WIRE_procmux6827_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9703__WIRE_procmux6825_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9701__WIRE_autortlilcc2403ReduceOr9700, __MUX_autopmuxtreecc65recursive_mux_generator9697__WIRE_autortlilcc2430Or9696, __MUX_autopmuxtreecc65recursive_mux_generator9693__WIRE_procmux6823_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9691__WIRE_procmux6821_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9689__WIRE_autortlilcc2430Or9688, __MUX_autopmuxtreecc65recursive_mux_generator9685__WIRE_procmux6819_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9683__WIRE_procmux6817_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9681__WIRE_autortlilcc2403ReduceOr9680, __MUX_autopmuxtreecc65recursive_mux_generator9677__WIRE_autortlilcc2403ReduceOr9676, __MUX_autopmuxtreecc65recursive_mux_generator9673__WIRE_autortlilcc2403ReduceOr9672, __MUX_autopmuxtreecc65recursive_mux_generator9669__WIRE_autortlilcc2430Or9668, __MUX_autopmuxtreecc65recursive_mux_generator9665__WIRE_procmux6815_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9663__WIRE_procmux6813_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9661__WIRE_autortlilcc2430Or9660, __MUX_autopmuxtreecc65recursive_mux_generator9657__WIRE_procmux6811_CMP
, __MUX_autopmuxtreecc65recursive_mux_generator9655__WIRE_procmux6809_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9653__WIRE_autortlilcc2403ReduceOr9652, __MUX_autopmuxtreecc65recursive_mux_generator9649__WIRE_autortlilcc2430Or9648, __MUX_autopmuxtreecc65recursive_mux_generator9645__WIRE_procmux6807_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9643__WIRE_procmux6805_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9641__WIRE_autortlilcc2430Or9640, __MUX_autopmuxtreecc65recursive_mux_generator9637__WIRE_procmux6803_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9635__WIRE_procmux6801_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9633__WIRE_autortlilcc2403ReduceOr9632, __MUX_autopmuxtreecc65recursive_mux_generator9629__WIRE_autortlilcc2403ReduceOr9628, __MUX_autopmuxtreecc65recursive_mux_generator9625__WIRE_autortlilcc2430Or9624, __MUX_autopmuxtreecc65recursive_mux_generator9621__WIRE_procmux6799_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9619__WIRE_procmux6797_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9617__WIRE_autortlilcc2430Or9616, __MUX_autopmuxtreecc65recursive_mux_generator9613__WIRE_procmux6795_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9611__WIRE_procmux6793_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9609__WIRE_autortlilcc2403ReduceOr9608, __MUX_autopmuxtreecc65recursive_mux_generator9605__WIRE_autortlilcc2430Or9604, __MUX_autopmuxtreecc65recursive_mux_generator9601__WIRE_procmux6791_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9599__WIRE_procmux6789_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9597__WIRE_autortlilcc2430Or9596
, __MUX_autopmuxtreecc65recursive_mux_generator9593__WIRE_procmux6787_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9591__WIRE_procmux6785_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9585__WIRE_autortlilcc2403ReduceOr9584, __MUX_autopmuxtreecc65recursive_mux_generator9581__WIRE_autortlilcc2403ReduceOr9580, __MUX_autopmuxtreecc65recursive_mux_generator9577__WIRE_autortlilcc2403ReduceOr9576, __MUX_autopmuxtreecc65recursive_mux_generator9573__WIRE_autortlilcc2403ReduceOr9572, __MUX_autopmuxtreecc65recursive_mux_generator9569__WIRE_autortlilcc2430Or9568, __MUX_autopmuxtreecc65recursive_mux_generator9565__WIRE_procmux6912_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9563__WIRE_procmux6910_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9561__WIRE_autortlilcc2430Or9560, __MUX_autopmuxtreecc65recursive_mux_generator9557__WIRE_procmux6908_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9555__WIRE_procmux6906_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9553__WIRE_autortlilcc2403ReduceOr9552, __MUX_autopmuxtreecc65recursive_mux_generator9549__WIRE_autortlilcc2430Or9548, __MUX_autopmuxtreecc65recursive_mux_generator9545__WIRE_procmux6904_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9543__WIRE_procmux6902_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9541__WIRE_autortlilcc2430Or9540, __MUX_autopmuxtreecc65recursive_mux_generator9537__WIRE_procmux6900_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9535__WIRE_procmux6898_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9519__WIRE_procmux6894_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9517__WIRE_autortlilcc2430Or9516
, __MUX_autopmuxtreecc65recursive_mux_generator9513__WIRE_procmux6892_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9533__WIRE_autortlilcc2403ReduceOr9532, __MUX_autopmuxtreecc65recursive_mux_generator9529__WIRE_autortlilcc2403ReduceOr9528, __MUX_autopmuxtreecc65recursive_mux_generator9525__WIRE_autortlilcc2430Or9524, __MUX_autopmuxtreecc65recursive_mux_generator9521__WIRE_procmux6896_CMP, metaReset_paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu);
  (* src = "./core/bpu.v:0.0-0.0" *)
  (* unused_bits = "0" *)
  wire [1:0] _0000_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0001_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0002_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0003_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0004_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0005_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0006_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0007_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0008_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0009_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0010_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0011_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0012_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0013_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0014_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0015_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0016_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0017_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0018_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0019_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0020_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0021_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0022_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0023_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0024_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0025_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0026_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0027_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0028_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0029_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0030_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0031_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0032_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0033_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0034_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0035_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0036_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0037_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0038_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0039_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0040_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0041_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0042_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0043_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0044_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0045_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0046_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0047_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0048_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0049_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0050_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0051_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0052_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0053_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0054_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0055_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0056_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0057_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0058_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0059_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0060_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0061_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0062_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0063_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0064_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0065_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0066_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0067_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0068_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0069_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0070_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0071_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0072_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0073_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0074_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0075_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0076_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0077_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0078_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0079_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0080_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0081_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0082_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0083_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0084_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0085_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0086_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0087_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0088_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0089_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0090_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0091_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0092_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0093_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0094_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0095_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0096_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0097_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0098_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0099_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0100_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0101_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0102_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0103_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0104_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0105_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0106_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0107_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0108_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0109_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0110_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0111_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0112_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0113_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0114_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0115_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0116_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0117_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0118_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0119_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0120_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0121_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0122_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0123_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0124_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0125_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0126_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0127_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0128_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0129_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0130_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0131_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0132_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0133_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0134_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0135_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0136_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0137_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0138_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0139_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0140_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0141_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0142_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0143_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0144_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0145_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0146_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0147_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0148_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0149_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0150_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0151_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0152_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0153_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0154_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0155_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0156_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0157_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0158_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0159_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0160_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0161_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0162_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0163_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0164_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0165_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0166_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0167_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0168_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0169_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0170_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0171_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0172_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0173_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0174_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0175_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0176_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0177_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0178_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0179_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0180_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0181_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0182_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0183_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0184_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0185_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0186_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0187_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0188_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0189_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0190_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0191_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0192_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0193_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0194_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0195_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0196_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0197_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0198_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0199_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0200_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0201_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0202_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0203_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0204_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0205_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0206_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0207_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0208_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0209_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0210_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0211_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0212_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0213_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0214_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0215_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0216_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0217_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0218_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0219_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0220_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0221_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0222_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0223_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0224_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0225_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0226_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0227_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0228_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0229_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0230_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0231_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0232_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0233_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0234_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0235_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0236_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0237_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0238_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0239_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0240_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0241_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0242_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0243_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0244_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0245_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0246_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0247_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0248_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0249_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0250_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0251_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0252_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0253_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0254_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0255_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0256_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0257_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0258_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0259_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0260_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0261_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0262_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0263_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0264_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0265_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0266_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0267_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0268_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0269_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0270_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0271_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0272_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0273_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0274_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0275_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0276_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0277_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0278_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0279_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0280_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0281_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0282_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0283_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0284_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0285_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0286_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0287_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0288_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0289_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0290_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0291_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0292_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0293_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0294_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0295_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0296_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0297_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0298_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0299_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0300_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0301_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0302_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0303_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0304_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0305_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0306_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0307_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0308_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0309_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0310_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0311_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0312_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0313_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0314_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0315_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0316_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0317_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0318_;
  (* src = "./core/bpu.v:283.1-299.4" *)
  wire [31:0] _0319_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0320_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0321_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0322_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0323_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0324_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0325_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0326_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0327_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0328_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0329_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0330_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0331_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0332_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0333_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0334_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0335_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0336_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0337_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0338_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0339_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0340_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0341_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0342_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0343_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0344_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0345_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0346_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0347_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0348_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0349_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0350_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0351_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0352_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0353_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [5:0] _0354_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0355_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0356_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0357_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0358_;
  (* src = "./core/bpu.v:301.1-345.4" *)
  wire [1:0] _0359_;
  (* src = "./core/bpu.v:127.61-127.75" *)
  wire [31:0] _0360_;
  (* src = "./core/bpu.v:104.13-104.53" *)
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire [5:0] _0364_;
  wire [5:0] _0365_;
  wire [5:0] _0366_;
  wire [5:0] _0367_;
  wire [5:0] _0368_;
  wire [5:0] _0369_;
  wire [5:0] _0370_;
  wire [5:0] _0371_;
  wire [5:0] _0372_;
  wire [5:0] _0373_;
  wire [5:0] _0374_;
  wire [5:0] _0375_;
  wire [5:0] _0376_;
  wire [5:0] _0377_;
  wire [5:0] _0378_;
  wire [5:0] _0379_;
  wire [5:0] _0380_;
  wire [5:0] _0381_;
  wire [5:0] _0382_;
  wire [5:0] _0383_;
  wire [5:0] _0384_;
  wire [5:0] _0385_;
  wire [5:0] _0386_;
  wire [5:0] _0387_;
  wire [5:0] _0388_;
  wire [5:0] _0389_;
  wire [5:0] _0390_;
  wire [5:0] _0391_;
  wire [5:0] _0392_;
  wire [5:0] _0393_;
  wire [5:0] _0394_;
  wire [5:0] _0395_;
  wire [5:0] _0396_;
  wire [5:0] _0397_;
  wire [5:0] _0398_;
  wire [5:0] _0399_;
  wire [5:0] _0400_;
  wire [5:0] _0401_;
  wire [5:0] _0402_;
  wire [5:0] _0403_;
  wire [5:0] _0404_;
  wire [5:0] _0405_;
  wire [5:0] _0406_;
  wire [5:0] _0407_;
  wire [5:0] _0408_;
  wire [5:0] _0409_;
  wire [5:0] _0410_;
  wire [5:0] _0411_;
  wire [5:0] _0412_;
  wire [5:0] _0413_;
  wire [5:0] _0414_;
  wire [5:0] _0415_;
  wire [5:0] _0416_;
  wire [5:0] _0417_;
  wire [5:0] _0418_;
  wire [5:0] _0419_;
  wire [5:0] _0420_;
  wire [5:0] _0421_;
  wire [5:0] _0422_;
  wire [5:0] _0423_;
  wire [5:0] _0424_;
  wire [5:0] _0425_;
  wire [5:0] _0426_;
  wire [5:0] _0427_;
  wire [5:0] _0428_;
  wire [5:0] _0429_;
  wire [5:0] _0430_;
  wire [5:0] _0431_;
  wire [5:0] _0432_;
  wire [5:0] _0433_;
  wire [5:0] _0434_;
  wire [5:0] _0435_;
  wire [5:0] _0436_;
  wire [5:0] _0437_;
  wire [5:0] _0438_;
  wire [5:0] _0439_;
  wire [5:0] _0440_;
  wire [5:0] _0441_;
  wire [5:0] _0442_;
  wire [5:0] _0443_;
  wire [5:0] _0444_;
  wire [5:0] _0445_;
  wire [5:0] _0446_;
  wire [5:0] _0447_;
  wire [5:0] _0448_;
  wire [5:0] _0449_;
  wire [5:0] _0450_;
  wire [5:0] _0451_;
  wire [5:0] _0452_;
  wire [5:0] _0453_;
  wire [5:0] _0454_;
  wire [5:0] _0455_;
  wire [5:0] _0456_;
  wire [5:0] _0457_;
  wire [5:0] _0458_;
  wire [5:0] _0459_;
  wire [5:0] _0460_;
  wire [5:0] _0461_;
  wire [5:0] _0462_;
  wire [5:0] _0463_;
  wire [5:0] _0464_;
  wire [5:0] _0465_;
  wire [5:0] _0466_;
  wire [5:0] _0467_;
  wire [5:0] _0468_;
  wire [5:0] _0469_;
  wire [5:0] _0470_;
  wire [5:0] _0471_;
  wire [5:0] _0472_;
  wire [5:0] _0473_;
  wire [5:0] _0474_;
  wire [5:0] _0475_;
  wire [5:0] _0476_;
  wire [5:0] _0477_;
  wire [5:0] _0478_;
  wire [5:0] _0479_;
  wire [5:0] _0480_;
  wire [5:0] _0481_;
  wire [5:0] _0482_;
  wire [5:0] _0483_;
  wire [5:0] _0484_;
  wire [5:0] _0485_;
  wire [5:0] _0486_;
  wire [5:0] _0487_;
  wire [1:0] _0488_;
  wire [1:0] _0489_;
  wire [1:0] _0490_;
  wire [1:0] _0491_;
  wire [1:0] _0492_;
  wire [1:0] _0493_;
  wire [1:0] _0494_;
  wire [1:0] _0495_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0496_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0497_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0498_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0499_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0500_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0501_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0502_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0503_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0504_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0505_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0506_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0507_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0508_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0509_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0510_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0511_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0512_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0513_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0514_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0515_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0516_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0517_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0518_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0519_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0520_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0521_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0522_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0523_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0524_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0525_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0526_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0527_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0528_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0529_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0530_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0531_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0532_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0533_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0534_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0535_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0536_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0537_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0538_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0539_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0540_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0541_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0542_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0543_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0544_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0545_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0546_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0547_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0548_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0549_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0550_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0551_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0552_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0553_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0554_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0555_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0556_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0557_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0558_;
  (* src = "./core/bpu.v:311.39-311.56" *)
  wire [1:0] _0559_;
  (* src = "./core/bpu.v:321.19-321.36" *)
  wire [1:0] _0560_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0561_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0562_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0563_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0564_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0565_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0566_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0567_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0568_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0569_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0570_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0571_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0572_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0573_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0574_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0575_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0576_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0577_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0578_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0579_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0580_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0581_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0582_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0583_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0584_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0585_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0586_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0587_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0588_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0589_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0590_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0591_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0592_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0593_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0594_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0595_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0596_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0597_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0598_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0599_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0600_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0601_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0602_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0603_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0604_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0605_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0606_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0607_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0608_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0609_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0610_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0611_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0612_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0613_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0614_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0615_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0616_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0617_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0618_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0619_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0620_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0621_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0622_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0623_;
  (* src = "./core/bpu.v:110.35-110.50" *)
  wire [31:0] _0624_;
  (* src = "./core/bpu.v:104.56-104.72" *)
  wire _0625_;
  (* src = "./core/bpu.v:104.25-104.52" *)
  wire _0626_;
  wire _0627_;
  wire _0628_;
  wire _0629_;
  wire _0630_;
  wire _0631_;
  wire _0632_;
  wire _0633_;
  wire _0634_;
  wire _0635_;
  wire _0636_;
  wire _0637_;
  wire _0638_;
  wire _0639_;
  wire _0640_;
  wire _0641_;
  wire _0642_;
  wire _0643_;
  wire _0644_;
  wire _0645_;
  wire _0646_;
  wire _0647_;
  wire _0648_;
  wire _0649_;
  wire _0650_;
  wire _0651_;
  wire _0652_;
  wire _0653_;
  wire _0654_;
  wire _0655_;
  wire _0656_;
  wire _0657_;
  wire _0658_;
  wire _0659_;
  wire _0660_;
  wire _0661_;
  wire _0662_;
  wire _0663_;
  wire _0664_;
  wire _0665_;
  wire _0666_;
  wire _0667_;
  wire _0668_;
  wire _0669_;
  wire _0670_;
  wire _0671_;
  wire _0672_;
  wire _0673_;
  wire _0674_;
  wire _0675_;
  wire _0676_;
  wire _0677_;
  wire _0678_;
  wire _0679_;
  wire _0680_;
  wire _0681_;
  wire _0682_;
  wire _0683_;
  wire _0684_;
  wire _0685_;
  wire _0686_;
  wire _0687_;
  wire _0688_;
  (* src = "./core/bpu.v:104.58-104.71" *)
  wire _0689_;
  (* src = "./core/bpu.v:363.25-363.39" *)
  wire _0690_;
  (* src = "./core/bpu.v:363.45-363.51" *)
  wire _0691_;
  (* src = "./core/bpu.v:127.23-127.75" *)
  (* unused_bits = "6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _0692_;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9399__WIRE_procmux6850_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9399__WIRE_procmux6850_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9401__WIRE_procmux6852_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9401__WIRE_procmux6852_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9405__WIRE_autortlilcc2430Or9404;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9405__WIRE_autortlilcc2430Or9404;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9407__WIRE_procmux6854_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9407__WIRE_procmux6854_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9409__WIRE_procmux6856_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9409__WIRE_procmux6856_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9413__WIRE_autortlilcc2430Or9412;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9413__WIRE_autortlilcc2430Or9412;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9417__WIRE_autortlilcc2403ReduceOr9416;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9417__WIRE_autortlilcc2403ReduceOr9416;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9419__WIRE_procmux6858_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9419__WIRE_procmux6858_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9421__WIRE_procmux6860_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9421__WIRE_procmux6860_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9425__WIRE_autortlilcc2430Or9424;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9425__WIRE_autortlilcc2430Or9424;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9427__WIRE_procmux6862_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9427__WIRE_procmux6862_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9429__WIRE_procmux6864_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9429__WIRE_procmux6864_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9433__WIRE_autortlilcc2430Or9432;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9433__WIRE_autortlilcc2430Or9432;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9437__WIRE_autortlilcc2403ReduceOr9436;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9437__WIRE_autortlilcc2403ReduceOr9436;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9441__WIRE_autortlilcc2403ReduceOr9440;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9441__WIRE_autortlilcc2403ReduceOr9440;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9443__WIRE_procmux6866_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9443__WIRE_procmux6866_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9445__WIRE_procmux6868_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9445__WIRE_procmux6868_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9449__WIRE_autortlilcc2430Or9448;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9449__WIRE_autortlilcc2430Or9448;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9451__WIRE_procmux6870_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9451__WIRE_procmux6870_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9453__WIRE_procmux6872_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9453__WIRE_procmux6872_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9457__WIRE_autortlilcc2430Or9456;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9457__WIRE_autortlilcc2430Or9456;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9461__WIRE_autortlilcc2403ReduceOr9460;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9461__WIRE_autortlilcc2403ReduceOr9460;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9463__WIRE_procmux6874_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9463__WIRE_procmux6874_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9465__WIRE_procmux6876_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9465__WIRE_procmux6876_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9469__WIRE_autortlilcc2430Or9468;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9469__WIRE_autortlilcc2430Or9468;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9471__WIRE_procmux6878_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9471__WIRE_procmux6878_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9473__WIRE_procmux6880_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9473__WIRE_procmux6880_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9477__WIRE_autortlilcc2430Or9476;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9477__WIRE_autortlilcc2430Or9476;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9481__WIRE_autortlilcc2403ReduceOr9480;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9481__WIRE_autortlilcc2403ReduceOr9480;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9485__WIRE_autortlilcc2403ReduceOr9484;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9485__WIRE_autortlilcc2403ReduceOr9484;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9489__WIRE_autortlilcc2403ReduceOr9488;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9489__WIRE_autortlilcc2403ReduceOr9488;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9491__WIRE_procmux6882_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9491__WIRE_procmux6882_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9493__WIRE_procmux6884_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9493__WIRE_procmux6884_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9497__WIRE_autortlilcc2430Or9496;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9497__WIRE_autortlilcc2430Or9496;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9499__WIRE_procmux6886_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9499__WIRE_procmux6886_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9501__WIRE_procmux6888_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9501__WIRE_procmux6888_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9505__WIRE_autortlilcc2430Or9504;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9505__WIRE_autortlilcc2430Or9504;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9509__WIRE_autortlilcc2403ReduceOr9508;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9509__WIRE_autortlilcc2403ReduceOr9508;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9511__WIRE_procmux6890_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9511__WIRE_procmux6890_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9513__WIRE_procmux6892_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9513__WIRE_procmux6892_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9517__WIRE_autortlilcc2430Or9516;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9517__WIRE_autortlilcc2430Or9516;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9519__WIRE_procmux6894_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9519__WIRE_procmux6894_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9521__WIRE_procmux6896_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9521__WIRE_procmux6896_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9525__WIRE_autortlilcc2430Or9524;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9525__WIRE_autortlilcc2430Or9524;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9529__WIRE_autortlilcc2403ReduceOr9528;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9529__WIRE_autortlilcc2403ReduceOr9528;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9533__WIRE_autortlilcc2403ReduceOr9532;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9533__WIRE_autortlilcc2403ReduceOr9532;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9535__WIRE_procmux6898_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9535__WIRE_procmux6898_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9537__WIRE_procmux6900_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9537__WIRE_procmux6900_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9541__WIRE_autortlilcc2430Or9540;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9541__WIRE_autortlilcc2430Or9540;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9543__WIRE_procmux6902_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9543__WIRE_procmux6902_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9545__WIRE_procmux6904_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9545__WIRE_procmux6904_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9549__WIRE_autortlilcc2430Or9548;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9549__WIRE_autortlilcc2430Or9548;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9553__WIRE_autortlilcc2403ReduceOr9552;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9553__WIRE_autortlilcc2403ReduceOr9552;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9555__WIRE_procmux6906_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9555__WIRE_procmux6906_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9557__WIRE_procmux6908_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9557__WIRE_procmux6908_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9561__WIRE_autortlilcc2430Or9560;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9561__WIRE_autortlilcc2430Or9560;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9563__WIRE_procmux6910_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9563__WIRE_procmux6910_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9565__WIRE_procmux6912_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9565__WIRE_procmux6912_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9569__WIRE_autortlilcc2430Or9568;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9569__WIRE_autortlilcc2430Or9568;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9573__WIRE_autortlilcc2403ReduceOr9572;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9573__WIRE_autortlilcc2403ReduceOr9572;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9577__WIRE_autortlilcc2403ReduceOr9576;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9577__WIRE_autortlilcc2403ReduceOr9576;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9581__WIRE_autortlilcc2403ReduceOr9580;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9581__WIRE_autortlilcc2403ReduceOr9580;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9585__WIRE_autortlilcc2403ReduceOr9584;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9585__WIRE_autortlilcc2403ReduceOr9584;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9591__WIRE_procmux6785_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9591__WIRE_procmux6785_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9593__WIRE_procmux6787_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9593__WIRE_procmux6787_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9597__WIRE_autortlilcc2430Or9596;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9597__WIRE_autortlilcc2430Or9596;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9599__WIRE_procmux6789_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9599__WIRE_procmux6789_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9601__WIRE_procmux6791_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9601__WIRE_procmux6791_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9605__WIRE_autortlilcc2430Or9604;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9605__WIRE_autortlilcc2430Or9604;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9609__WIRE_autortlilcc2403ReduceOr9608;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9609__WIRE_autortlilcc2403ReduceOr9608;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9611__WIRE_procmux6793_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9611__WIRE_procmux6793_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9613__WIRE_procmux6795_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9613__WIRE_procmux6795_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9617__WIRE_autortlilcc2430Or9616;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9617__WIRE_autortlilcc2430Or9616;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9619__WIRE_procmux6797_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9619__WIRE_procmux6797_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9621__WIRE_procmux6799_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9621__WIRE_procmux6799_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9625__WIRE_autortlilcc2430Or9624;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9625__WIRE_autortlilcc2430Or9624;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9629__WIRE_autortlilcc2403ReduceOr9628;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9629__WIRE_autortlilcc2403ReduceOr9628;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9633__WIRE_autortlilcc2403ReduceOr9632;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9633__WIRE_autortlilcc2403ReduceOr9632;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9635__WIRE_procmux6801_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9635__WIRE_procmux6801_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9637__WIRE_procmux6803_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9637__WIRE_procmux6803_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9641__WIRE_autortlilcc2430Or9640;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9641__WIRE_autortlilcc2430Or9640;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9643__WIRE_procmux6805_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9643__WIRE_procmux6805_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9645__WIRE_procmux6807_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9645__WIRE_procmux6807_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9649__WIRE_autortlilcc2430Or9648;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9649__WIRE_autortlilcc2430Or9648;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9653__WIRE_autortlilcc2403ReduceOr9652;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9653__WIRE_autortlilcc2403ReduceOr9652;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9655__WIRE_procmux6809_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9655__WIRE_procmux6809_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9657__WIRE_procmux6811_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9657__WIRE_procmux6811_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9661__WIRE_autortlilcc2430Or9660;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9661__WIRE_autortlilcc2430Or9660;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9663__WIRE_procmux6813_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9663__WIRE_procmux6813_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9665__WIRE_procmux6815_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9665__WIRE_procmux6815_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9669__WIRE_autortlilcc2430Or9668;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9669__WIRE_autortlilcc2430Or9668;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9673__WIRE_autortlilcc2403ReduceOr9672;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9673__WIRE_autortlilcc2403ReduceOr9672;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9677__WIRE_autortlilcc2403ReduceOr9676;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9677__WIRE_autortlilcc2403ReduceOr9676;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9681__WIRE_autortlilcc2403ReduceOr9680;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9681__WIRE_autortlilcc2403ReduceOr9680;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9683__WIRE_procmux6817_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9683__WIRE_procmux6817_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9685__WIRE_procmux6819_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9685__WIRE_procmux6819_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9689__WIRE_autortlilcc2430Or9688;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9689__WIRE_autortlilcc2430Or9688;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9691__WIRE_procmux6821_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9691__WIRE_procmux6821_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9693__WIRE_procmux6823_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9693__WIRE_procmux6823_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9697__WIRE_autortlilcc2430Or9696;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9697__WIRE_autortlilcc2430Or9696;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9701__WIRE_autortlilcc2403ReduceOr9700;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9701__WIRE_autortlilcc2403ReduceOr9700;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9703__WIRE_procmux6825_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9703__WIRE_procmux6825_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9705__WIRE_procmux6827_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9705__WIRE_procmux6827_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9709__WIRE_autortlilcc2430Or9708;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9709__WIRE_autortlilcc2430Or9708;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9711__WIRE_procmux6829_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9711__WIRE_procmux6829_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9713__WIRE_procmux6831_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9713__WIRE_procmux6831_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9717__WIRE_autortlilcc2430Or9716;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9717__WIRE_autortlilcc2430Or9716;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9721__WIRE_autortlilcc2403ReduceOr9720;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9721__WIRE_autortlilcc2403ReduceOr9720;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9725__WIRE_autortlilcc2403ReduceOr9724;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9725__WIRE_autortlilcc2403ReduceOr9724;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9727__WIRE_procmux6833_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9727__WIRE_procmux6833_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9729__WIRE_procmux6835_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9729__WIRE_procmux6835_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9733__WIRE_autortlilcc2430Or9732;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9733__WIRE_autortlilcc2430Or9732;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9735__WIRE_procmux6837_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9735__WIRE_procmux6837_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9737__WIRE_procmux6839_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9737__WIRE_procmux6839_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9741__WIRE_autortlilcc2430Or9740;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9741__WIRE_autortlilcc2430Or9740;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9745__WIRE_autortlilcc2403ReduceOr9744;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9745__WIRE_autortlilcc2403ReduceOr9744;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9747__WIRE_procmux6841_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9747__WIRE_procmux6841_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9749__WIRE_procmux6843_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9749__WIRE_procmux6843_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9753__WIRE_autortlilcc2430Or9752;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9753__WIRE_autortlilcc2430Or9752;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9755__WIRE_procmux6845_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9755__WIRE_procmux6845_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9757__WIRE_procmux6847_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9757__WIRE_procmux6847_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9761__WIRE_autortlilcc2430Or9760;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9761__WIRE_autortlilcc2430Or9760;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9765__WIRE_autortlilcc2403ReduceOr9764;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9765__WIRE_autortlilcc2403ReduceOr9764;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9769__WIRE_autortlilcc2403ReduceOr9768;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9769__WIRE_autortlilcc2403ReduceOr9768;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9773__WIRE_autortlilcc2403ReduceOr9772;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9773__WIRE_autortlilcc2403ReduceOr9772;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9777__WIRE_autortlilcc2403ReduceOr9776;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9777__WIRE_autortlilcc2403ReduceOr9776;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9781__WIRE_procmux3080_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9781__WIRE_procmux3080_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9785__WIRE_autortlilcc2430Or9784;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9785__WIRE_autortlilcc2430Or9784;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9795__WIRE_procmux2938_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9795__WIRE_procmux2938_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux3006__WIRE_procmux3007_CMP;
  wire __MUX_procmux3006__WIRE_procmux3007_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux3154__WIRE_branch_taken_i;
  wire __MUX_procmux3154__WIRE_branch_taken_i;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux3156__WIRE_procmux3157_CMP;
  wire __MUX_procmux3156__WIRE_procmux3157_CMP;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux3490__WIRE_exe_is_branch_i;
  wire __MUX_procmux3490__WIRE_exe_is_branch_i;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux3691__WIRE_we;
  wire __MUX_procmux3691__WIRE_we;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux3865__WIRE_stall_i;
  wire __MUX_procmux3865__WIRE_stall_i;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux4936__WIRE_rst_i;
  wire __MUX_procmux4936__WIRE_rst_i;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/bpuv127835__WIRE_eq/core/bpuv127833_Y ;
  wire \__MUX_ternary/core/bpuv127835__WIRE_eq/core/bpuv127833_Y ;
  (* src = "./core/bpu.v:93.24-93.36" *)
  wire [63:0] addr_hit_DEC;
  (* src = "./core/bpu.v:92.24-92.36" *)
  wire [63:0] addr_hit_PCU;
  (* src = "./core/bpu.v:83.25-83.42" *)
  output branch_decision_o;
  wire branch_decision_o;
  (* src = "./core/bpu.v:82.25-82.37" *)
  output branch_hit_o;
  wire branch_hit_o;
  (* src = "./core/bpu.v:78.25-78.47" *)
  input branch_misprediction_i;
  wire branch_misprediction_i;
  (* src = "./core/bpu.v:77.25-77.39" *)
  input branch_taken_i;
  wire branch_taken_i;
  (* src = "./core/bpu.v:79.25-79.45" *)
  input [31:0] branch_target_addr_i;
  wire [31:0] branch_target_addr_i;
  (* src = "./core/bpu.v:84.25-84.45" *)
  output [31:0] branch_target_addr_o;
  wire [31:0] branch_target_addr_o;
  (* src = "./core/bpu.v:63.25-63.30" *)
  input clk_i;
  wire clk_i;
  (* src = "./core/bpu.v:73.25-73.33" *)
  input [31:0] dec_pc_i;
  wire [31:0] dec_pc_i;
  (* src = "./core/bpu.v:76.25-76.40" *)
  input exe_is_branch_i;
  wire exe_is_branch_i;
  (* src = "./core/bpu.v:72.25-72.41" *)
  input is_cond_branch_i;
  wire is_cond_branch_i;
  (* src = "./core/bpu.v:71.25-71.33" *)
  input is_jal_i;
  wire is_jal_i;
  (* meta_reset = 32'd1 *)
  input metaReset_paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu;
  wire metaReset_paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\distri_ram  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcdistri_ram-bpu_pc_history___MUX_procmux8501__WIRE_we_i ;
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcdistri_ram-bpu_pc_history___MUX_procmux8501__WIRE_we_i ;
  (* src = "./core/bpu.v:68.25-68.29" *)
  input [31:0] pc_i;
  wire [31:0] pc_i;
  (* src = "./core/bpu.v:91.24-91.36" *)
  wire [31:0] predicted_pc;
  (* src = "./core/bpu.v:94.24-94.33" *)
  wire [5:0] read_addr;
  (* src = "./core/bpu.v:64.25-64.30" *)
  input rst_i;
  wire rst_i;
  (* src = "./core/bpu.v:65.25-65.32" *)
  input stall_i;
  wire stall_i;
  (* src = "./core/bpu.v:96.24-96.35" *)
  wire [5:0] update_addr;
  (* src = "./core/bpu.v:90.24-90.26" *)
  wire we;
  (* src = "./core/bpu.v:95.24-95.34" *)
  reg [5:0] write_addr;
  (* src = "./core/bpu.v:99.24-99.41" *)
  reg [1:0] branch_likelihood [63:0];
  always_ff @(posedge clk_i) begin
    if (_0001_[1])
      branch_likelihood[32'd0] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd1] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd2] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd3] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd4] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd5] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd6] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd7] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd8] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd9] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd10] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd11] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd12] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd13] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd14] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd15] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd16] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd17] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd18] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd19] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd20] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd21] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd22] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd23] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd24] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd25] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd26] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd27] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd28] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd29] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd30] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd31] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd32] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd33] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd34] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd35] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd36] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd37] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd38] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd39] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd40] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd41] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd42] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd43] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd44] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd45] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd46] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd47] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd48] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd49] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd50] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd51] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd52] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd53] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd54] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd55] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd56] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd57] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd58] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd59] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd60] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd61] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd62] <= 2'h0;
    if (_0001_[1])
      branch_likelihood[32'd63] <= 2'h0;
  end
  always_ff @(posedge clk_i) begin
    if (_0003_[1])
      branch_likelihood[32'd0] <= _0002_;
    if (_0003_[1])
      branch_likelihood[32'd1] <= _0004_;
    if (_0003_[1])
      branch_likelihood[32'd2] <= _0005_;
    if (_0003_[1])
      branch_likelihood[32'd3] <= _0006_;
    if (_0003_[1])
      branch_likelihood[32'd4] <= _0007_;
    if (_0003_[1])
      branch_likelihood[32'd5] <= _0008_;
    if (_0003_[1])
      branch_likelihood[32'd6] <= _0009_;
    if (_0003_[1])
      branch_likelihood[32'd7] <= _0010_;
    if (_0003_[1])
      branch_likelihood[32'd8] <= _0011_;
    if (_0003_[1])
      branch_likelihood[32'd9] <= _0012_;
    if (_0003_[1])
      branch_likelihood[32'd10] <= _0013_;
    if (_0003_[1])
      branch_likelihood[32'd11] <= _0014_;
    if (_0003_[1])
      branch_likelihood[32'd12] <= _0015_;
    if (_0003_[1])
      branch_likelihood[32'd13] <= _0016_;
    if (_0003_[1])
      branch_likelihood[32'd14] <= _0017_;
    if (_0003_[1])
      branch_likelihood[32'd15] <= _0018_;
    if (_0003_[1])
      branch_likelihood[32'd16] <= _0019_;
    if (_0003_[1])
      branch_likelihood[32'd17] <= _0020_;
    if (_0003_[1])
      branch_likelihood[32'd18] <= _0021_;
    if (_0003_[1])
      branch_likelihood[32'd19] <= _0022_;
    if (_0003_[1])
      branch_likelihood[32'd20] <= _0023_;
    if (_0003_[1])
      branch_likelihood[32'd21] <= _0024_;
    if (_0003_[1])
      branch_likelihood[32'd22] <= _0025_;
    if (_0003_[1])
      branch_likelihood[32'd23] <= _0026_;
    if (_0003_[1])
      branch_likelihood[32'd24] <= _0027_;
    if (_0003_[1])
      branch_likelihood[32'd25] <= _0028_;
    if (_0003_[1])
      branch_likelihood[32'd26] <= _0029_;
    if (_0003_[1])
      branch_likelihood[32'd27] <= _0030_;
    if (_0003_[1])
      branch_likelihood[32'd28] <= _0031_;
    if (_0003_[1])
      branch_likelihood[32'd29] <= _0032_;
    if (_0003_[1])
      branch_likelihood[32'd30] <= _0033_;
    if (_0003_[1])
      branch_likelihood[32'd31] <= _0034_;
    if (_0003_[1])
      branch_likelihood[32'd32] <= _0035_;
    if (_0003_[1])
      branch_likelihood[32'd33] <= _0036_;
    if (_0003_[1])
      branch_likelihood[32'd34] <= _0037_;
    if (_0003_[1])
      branch_likelihood[32'd35] <= _0038_;
    if (_0003_[1])
      branch_likelihood[32'd36] <= _0039_;
    if (_0003_[1])
      branch_likelihood[32'd37] <= _0040_;
    if (_0003_[1])
      branch_likelihood[32'd38] <= _0041_;
    if (_0003_[1])
      branch_likelihood[32'd39] <= _0042_;
    if (_0003_[1])
      branch_likelihood[32'd40] <= _0043_;
    if (_0003_[1])
      branch_likelihood[32'd41] <= _0044_;
    if (_0003_[1])
      branch_likelihood[32'd42] <= _0045_;
    if (_0003_[1])
      branch_likelihood[32'd43] <= _0046_;
    if (_0003_[1])
      branch_likelihood[32'd44] <= _0047_;
    if (_0003_[1])
      branch_likelihood[32'd45] <= _0048_;
    if (_0003_[1])
      branch_likelihood[32'd46] <= _0049_;
    if (_0003_[1])
      branch_likelihood[32'd47] <= _0050_;
    if (_0003_[1])
      branch_likelihood[32'd48] <= _0051_;
    if (_0003_[1])
      branch_likelihood[32'd49] <= _0052_;
    if (_0003_[1])
      branch_likelihood[32'd50] <= _0053_;
    if (_0003_[1])
      branch_likelihood[32'd51] <= _0054_;
    if (_0003_[1])
      branch_likelihood[32'd52] <= _0055_;
    if (_0003_[1])
      branch_likelihood[32'd53] <= _0056_;
    if (_0003_[1])
      branch_likelihood[32'd54] <= _0057_;
    if (_0003_[1])
      branch_likelihood[32'd55] <= _0058_;
    if (_0003_[1])
      branch_likelihood[32'd56] <= _0059_;
    if (_0003_[1])
      branch_likelihood[32'd57] <= _0060_;
    if (_0003_[1])
      branch_likelihood[32'd58] <= _0061_;
    if (_0003_[1])
      branch_likelihood[32'd59] <= _0062_;
    if (_0003_[1])
      branch_likelihood[32'd60] <= _0063_;
    if (_0003_[1])
      branch_likelihood[32'd61] <= _0064_;
    if (_0003_[1])
      branch_likelihood[32'd62] <= _0065_;
    if (_0003_[1])
      branch_likelihood[32'd63] <= _0066_;
  end
  always_ff @(posedge clk_i) begin
    if (_0069_[1])
      branch_likelihood[_0067_] <= _0068_;
  end
  always_ff @(posedge clk_i) begin
    if (_0071_[1])
      branch_likelihood[_0070_] <= 2'h1;
  end
  always_ff @(posedge clk_i) begin
    if (_0073_[1])
      branch_likelihood[_0072_] <= 2'h0;
  end
  always_ff @(posedge clk_i) begin
    if (_0075_[1])
      branch_likelihood[_0074_] <= 2'h3;
  end
  always_ff @(posedge clk_i) begin
    if (_0077_[1])
      branch_likelihood[_0076_] <= 2'h0;
  end
  always_ff @(posedge clk_i) begin
    if (_0079_[1])
      branch_likelihood[_0078_] <= 2'h3;
  end
  always_ff @(posedge clk_i) begin
    if (_0081_[1])
      branch_likelihood[_0080_] <= 2'h0;
  end
  always_ff @(posedge clk_i) begin
    if (_0083_[1])
      branch_likelihood[_0082_] <= 2'h3;
  end
  always_ff @(posedge clk_i) begin
    if (_0085_[1])
      branch_likelihood[_0084_] <= 2'h2;
  end
  assign { branch_decision_o, _0000_[0] } = branch_likelihood[read_addr];
  assign _0560_ = branch_likelihood[update_addr];
  assign _0559_ = branch_likelihood[32'd63];
  assign _0558_ = branch_likelihood[32'd62];
  assign _0557_ = branch_likelihood[32'd61];
  assign _0556_ = branch_likelihood[32'd60];
  assign _0555_ = branch_likelihood[32'd59];
  assign _0554_ = branch_likelihood[32'd58];
  assign _0553_ = branch_likelihood[32'd57];
  assign _0552_ = branch_likelihood[32'd56];
  assign _0551_ = branch_likelihood[32'd55];
  assign _0550_ = branch_likelihood[32'd54];
  assign _0549_ = branch_likelihood[32'd53];
  assign _0548_ = branch_likelihood[32'd52];
  assign _0547_ = branch_likelihood[32'd51];
  assign _0546_ = branch_likelihood[32'd50];
  assign _0545_ = branch_likelihood[32'd49];
  assign _0544_ = branch_likelihood[32'd48];
  assign _0543_ = branch_likelihood[32'd47];
  assign _0542_ = branch_likelihood[32'd46];
  assign _0541_ = branch_likelihood[32'd45];
  assign _0540_ = branch_likelihood[32'd44];
  assign _0539_ = branch_likelihood[32'd43];
  assign _0538_ = branch_likelihood[32'd42];
  assign _0537_ = branch_likelihood[32'd41];
  assign _0536_ = branch_likelihood[32'd40];
  assign _0535_ = branch_likelihood[32'd39];
  assign _0534_ = branch_likelihood[32'd38];
  assign _0533_ = branch_likelihood[32'd37];
  assign _0532_ = branch_likelihood[32'd36];
  assign _0531_ = branch_likelihood[32'd35];
  assign _0530_ = branch_likelihood[32'd34];
  assign _0529_ = branch_likelihood[32'd33];
  assign _0528_ = branch_likelihood[32'd32];
  assign _0527_ = branch_likelihood[32'd31];
  assign _0526_ = branch_likelihood[32'd30];
  assign _0525_ = branch_likelihood[32'd29];
  assign _0524_ = branch_likelihood[32'd28];
  assign _0523_ = branch_likelihood[32'd27];
  assign _0522_ = branch_likelihood[32'd26];
  assign _0521_ = branch_likelihood[32'd25];
  assign _0520_ = branch_likelihood[32'd24];
  assign _0519_ = branch_likelihood[32'd23];
  assign _0518_ = branch_likelihood[32'd22];
  assign _0517_ = branch_likelihood[32'd21];
  assign _0516_ = branch_likelihood[32'd20];
  assign _0515_ = branch_likelihood[32'd19];
  assign _0514_ = branch_likelihood[32'd18];
  assign _0513_ = branch_likelihood[32'd17];
  assign _0512_ = branch_likelihood[32'd16];
  assign _0511_ = branch_likelihood[32'd15];
  assign _0510_ = branch_likelihood[32'd14];
  assign _0509_ = branch_likelihood[32'd13];
  assign _0508_ = branch_likelihood[32'd12];
  assign _0507_ = branch_likelihood[32'd11];
  assign _0506_ = branch_likelihood[32'd10];
  assign _0505_ = branch_likelihood[32'd9];
  assign _0504_ = branch_likelihood[32'd8];
  assign _0503_ = branch_likelihood[32'd7];
  assign _0502_ = branch_likelihood[32'd6];
  assign _0501_ = branch_likelihood[32'd5];
  assign _0500_ = branch_likelihood[32'd4];
  assign _0499_ = branch_likelihood[32'd3];
  assign _0498_ = branch_likelihood[32'd2];
  assign _0497_ = branch_likelihood[32'd1];
  assign _0496_ = branch_likelihood[32'd0];
  (* src = "./core/bpu.v:89.24-89.39" *)
  reg [31:0] branch_pc_table [63:0];
  always_ff @(posedge clk_i) begin
    if (_0001_[1])
      branch_pc_table[32'd0] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd1] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd2] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd3] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd4] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd5] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd6] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd7] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd8] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd9] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd10] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd11] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd12] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd13] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd14] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd15] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd16] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd17] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd18] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd19] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd20] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd21] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd22] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd23] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd24] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd25] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd26] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd27] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd28] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd29] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd30] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd31] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd32] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd33] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd34] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd35] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd36] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd37] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd38] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd39] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd40] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd41] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd42] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd43] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd44] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd45] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd46] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd47] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd48] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd49] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd50] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd51] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd52] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd53] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd54] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd55] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd56] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd57] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd58] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd59] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd60] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd61] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd62] <= 32'd0;
    if (_0001_[1])
      branch_pc_table[32'd63] <= 32'd0;
  end
  always_ff @(posedge clk_i) begin
    if (_0003_[1])
      branch_pc_table[32'd0] <= _0086_;
    if (_0003_[1])
      branch_pc_table[32'd1] <= _0087_;
    if (_0003_[1])
      branch_pc_table[32'd2] <= _0088_;
    if (_0003_[1])
      branch_pc_table[32'd3] <= _0089_;
    if (_0003_[1])
      branch_pc_table[32'd4] <= _0090_;
    if (_0003_[1])
      branch_pc_table[32'd5] <= _0091_;
    if (_0003_[1])
      branch_pc_table[32'd6] <= _0092_;
    if (_0003_[1])
      branch_pc_table[32'd7] <= _0093_;
    if (_0003_[1])
      branch_pc_table[32'd8] <= _0094_;
    if (_0003_[1])
      branch_pc_table[32'd9] <= _0095_;
    if (_0003_[1])
      branch_pc_table[32'd10] <= _0096_;
    if (_0003_[1])
      branch_pc_table[32'd11] <= _0097_;
    if (_0003_[1])
      branch_pc_table[32'd12] <= _0098_;
    if (_0003_[1])
      branch_pc_table[32'd13] <= _0099_;
    if (_0003_[1])
      branch_pc_table[32'd14] <= _0100_;
    if (_0003_[1])
      branch_pc_table[32'd15] <= _0101_;
    if (_0003_[1])
      branch_pc_table[32'd16] <= _0102_;
    if (_0003_[1])
      branch_pc_table[32'd17] <= _0103_;
    if (_0003_[1])
      branch_pc_table[32'd18] <= _0104_;
    if (_0003_[1])
      branch_pc_table[32'd19] <= _0105_;
    if (_0003_[1])
      branch_pc_table[32'd20] <= _0106_;
    if (_0003_[1])
      branch_pc_table[32'd21] <= _0107_;
    if (_0003_[1])
      branch_pc_table[32'd22] <= _0108_;
    if (_0003_[1])
      branch_pc_table[32'd23] <= _0109_;
    if (_0003_[1])
      branch_pc_table[32'd24] <= _0110_;
    if (_0003_[1])
      branch_pc_table[32'd25] <= _0111_;
    if (_0003_[1])
      branch_pc_table[32'd26] <= _0112_;
    if (_0003_[1])
      branch_pc_table[32'd27] <= _0113_;
    if (_0003_[1])
      branch_pc_table[32'd28] <= _0114_;
    if (_0003_[1])
      branch_pc_table[32'd29] <= _0115_;
    if (_0003_[1])
      branch_pc_table[32'd30] <= _0116_;
    if (_0003_[1])
      branch_pc_table[32'd31] <= _0117_;
    if (_0003_[1])
      branch_pc_table[32'd32] <= _0118_;
    if (_0003_[1])
      branch_pc_table[32'd33] <= _0119_;
    if (_0003_[1])
      branch_pc_table[32'd34] <= _0120_;
    if (_0003_[1])
      branch_pc_table[32'd35] <= _0121_;
    if (_0003_[1])
      branch_pc_table[32'd36] <= _0122_;
    if (_0003_[1])
      branch_pc_table[32'd37] <= _0123_;
    if (_0003_[1])
      branch_pc_table[32'd38] <= _0124_;
    if (_0003_[1])
      branch_pc_table[32'd39] <= _0125_;
    if (_0003_[1])
      branch_pc_table[32'd40] <= _0126_;
    if (_0003_[1])
      branch_pc_table[32'd41] <= _0127_;
    if (_0003_[1])
      branch_pc_table[32'd42] <= _0128_;
    if (_0003_[1])
      branch_pc_table[32'd43] <= _0129_;
    if (_0003_[1])
      branch_pc_table[32'd44] <= _0130_;
    if (_0003_[1])
      branch_pc_table[32'd45] <= _0131_;
    if (_0003_[1])
      branch_pc_table[32'd46] <= _0132_;
    if (_0003_[1])
      branch_pc_table[32'd47] <= _0133_;
    if (_0003_[1])
      branch_pc_table[32'd48] <= _0134_;
    if (_0003_[1])
      branch_pc_table[32'd49] <= _0135_;
    if (_0003_[1])
      branch_pc_table[32'd50] <= _0136_;
    if (_0003_[1])
      branch_pc_table[32'd51] <= _0137_;
    if (_0003_[1])
      branch_pc_table[32'd52] <= _0138_;
    if (_0003_[1])
      branch_pc_table[32'd53] <= _0139_;
    if (_0003_[1])
      branch_pc_table[32'd54] <= _0140_;
    if (_0003_[1])
      branch_pc_table[32'd55] <= _0141_;
    if (_0003_[1])
      branch_pc_table[32'd56] <= _0142_;
    if (_0003_[1])
      branch_pc_table[32'd57] <= _0143_;
    if (_0003_[1])
      branch_pc_table[32'd58] <= _0144_;
    if (_0003_[1])
      branch_pc_table[32'd59] <= _0145_;
    if (_0003_[1])
      branch_pc_table[32'd60] <= _0146_;
    if (_0003_[1])
      branch_pc_table[32'd61] <= _0147_;
    if (_0003_[1])
      branch_pc_table[32'd62] <= _0148_;
    if (_0003_[1])
      branch_pc_table[32'd63] <= _0149_;
  end
  always_ff @(posedge clk_i) begin
    if (_0069_[1])
      branch_pc_table[_0067_] <= _0150_;
  end
  assign _0624_ = branch_pc_table[32'd63];
  assign _0623_ = branch_pc_table[32'd62];
  assign _0622_ = branch_pc_table[32'd61];
  assign _0621_ = branch_pc_table[32'd60];
  assign _0620_ = branch_pc_table[32'd59];
  assign _0619_ = branch_pc_table[32'd58];
  assign _0618_ = branch_pc_table[32'd57];
  assign _0617_ = branch_pc_table[32'd56];
  assign _0616_ = branch_pc_table[32'd55];
  assign _0615_ = branch_pc_table[32'd54];
  assign _0614_ = branch_pc_table[32'd53];
  assign _0613_ = branch_pc_table[32'd52];
  assign _0612_ = branch_pc_table[32'd51];
  assign _0611_ = branch_pc_table[32'd50];
  assign _0610_ = branch_pc_table[32'd49];
  assign _0609_ = branch_pc_table[32'd48];
  assign _0608_ = branch_pc_table[32'd47];
  assign _0607_ = branch_pc_table[32'd46];
  assign _0606_ = branch_pc_table[32'd45];
  assign _0605_ = branch_pc_table[32'd44];
  assign _0604_ = branch_pc_table[32'd43];
  assign _0603_ = branch_pc_table[32'd42];
  assign _0602_ = branch_pc_table[32'd41];
  assign _0601_ = branch_pc_table[32'd40];
  assign _0600_ = branch_pc_table[32'd39];
  assign _0599_ = branch_pc_table[32'd38];
  assign _0598_ = branch_pc_table[32'd37];
  assign _0597_ = branch_pc_table[32'd36];
  assign _0596_ = branch_pc_table[32'd35];
  assign _0595_ = branch_pc_table[32'd34];
  assign _0594_ = branch_pc_table[32'd33];
  assign _0593_ = branch_pc_table[32'd32];
  assign _0592_ = branch_pc_table[32'd31];
  assign _0591_ = branch_pc_table[32'd30];
  assign _0590_ = branch_pc_table[32'd29];
  assign _0589_ = branch_pc_table[32'd28];
  assign _0588_ = branch_pc_table[32'd27];
  assign _0587_ = branch_pc_table[32'd26];
  assign _0586_ = branch_pc_table[32'd25];
  assign _0585_ = branch_pc_table[32'd24];
  assign _0584_ = branch_pc_table[32'd23];
  assign _0583_ = branch_pc_table[32'd22];
  assign _0582_ = branch_pc_table[32'd21];
  assign _0581_ = branch_pc_table[32'd20];
  assign _0580_ = branch_pc_table[32'd19];
  assign _0579_ = branch_pc_table[32'd18];
  assign _0578_ = branch_pc_table[32'd17];
  assign _0577_ = branch_pc_table[32'd16];
  assign _0576_ = branch_pc_table[32'd15];
  assign _0575_ = branch_pc_table[32'd14];
  assign _0574_ = branch_pc_table[32'd13];
  assign _0573_ = branch_pc_table[32'd12];
  assign _0572_ = branch_pc_table[32'd11];
  assign _0571_ = branch_pc_table[32'd10];
  assign _0570_ = branch_pc_table[32'd9];
  assign _0569_ = branch_pc_table[32'd8];
  assign _0568_ = branch_pc_table[32'd7];
  assign _0567_ = branch_pc_table[32'd6];
  assign _0566_ = branch_pc_table[32'd5];
  assign _0565_ = branch_pc_table[32'd4];
  assign _0564_ = branch_pc_table[32'd3];
  assign _0563_ = branch_pc_table[32'd2];
  assign _0562_ = branch_pc_table[32'd1];
  assign _0561_ = branch_pc_table[32'd0];
  assign _0360_ = write_addr + (* src = "./core/bpu.v:127.61-127.75" *) 32'd1;
  assign _0361_ = _0363_ & (* src = "./core/bpu.v:104.13-104.53" *) _0626_;
  assign we = _0361_ & (* src = "./core/bpu.v:104.13-104.72" *) _0625_;
  assign branch_hit_o = _0690_ & (* src = "./core/bpu.v:363.23-363.52" *) _0691_;
  assign branch_target_addr_o = { _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_, _0690_ } & (* src = "./core/bpu.v:364.31-364.69" *) predicted_pc;
  (* src = "./core/bpu.v:115.1-129.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) write_addr <= 6'h00;
    else if (_0362_) write_addr <= _0692_[5:0];
  assign _0363_ = ~ stall_i;
  assign _0362_ = & { _0363_, we };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9405__WIRE_autortlilcc2430Or9404 = _0658_ | __MUX_autopmuxtreecc65recursive_mux_generator9399__WIRE_procmux6850_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9413__WIRE_autortlilcc2430Or9412 = _0660_ | __MUX_autopmuxtreecc65recursive_mux_generator9407__WIRE_procmux6854_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9425__WIRE_autortlilcc2430Or9424 = _0662_ | __MUX_autopmuxtreecc65recursive_mux_generator9419__WIRE_procmux6858_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9433__WIRE_autortlilcc2430Or9432 = _0664_ | __MUX_autopmuxtreecc65recursive_mux_generator9427__WIRE_procmux6862_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9449__WIRE_autortlilcc2430Or9448 = _0666_ | __MUX_autopmuxtreecc65recursive_mux_generator9443__WIRE_procmux6866_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9457__WIRE_autortlilcc2430Or9456 = _0668_ | __MUX_autopmuxtreecc65recursive_mux_generator9451__WIRE_procmux6870_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9469__WIRE_autortlilcc2430Or9468 = _0670_ | __MUX_autopmuxtreecc65recursive_mux_generator9463__WIRE_procmux6874_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9477__WIRE_autortlilcc2430Or9476 = _0672_ | __MUX_autopmuxtreecc65recursive_mux_generator9471__WIRE_procmux6878_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9497__WIRE_autortlilcc2430Or9496 = _0674_ | __MUX_autopmuxtreecc65recursive_mux_generator9491__WIRE_procmux6882_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9505__WIRE_autortlilcc2430Or9504 = _0676_ | __MUX_autopmuxtreecc65recursive_mux_generator9499__WIRE_procmux6886_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9517__WIRE_autortlilcc2430Or9516 = _0678_ | __MUX_autopmuxtreecc65recursive_mux_generator9511__WIRE_procmux6890_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9525__WIRE_autortlilcc2430Or9524 = _0680_ | __MUX_autopmuxtreecc65recursive_mux_generator9519__WIRE_procmux6894_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9541__WIRE_autortlilcc2430Or9540 = _0682_ | __MUX_autopmuxtreecc65recursive_mux_generator9535__WIRE_procmux6898_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9549__WIRE_autortlilcc2430Or9548 = _0684_ | __MUX_autopmuxtreecc65recursive_mux_generator9543__WIRE_procmux6902_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9561__WIRE_autortlilcc2430Or9560 = _0686_ | __MUX_autopmuxtreecc65recursive_mux_generator9555__WIRE_procmux6906_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9569__WIRE_autortlilcc2430Or9568 = _0688_ | __MUX_autopmuxtreecc65recursive_mux_generator9563__WIRE_procmux6910_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9597__WIRE_autortlilcc2430Or9596 = _0627_ | __MUX_autopmuxtreecc65recursive_mux_generator9591__WIRE_procmux6785_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9605__WIRE_autortlilcc2430Or9604 = _0629_ | __MUX_autopmuxtreecc65recursive_mux_generator9599__WIRE_procmux6789_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9617__WIRE_autortlilcc2430Or9616 = _0631_ | __MUX_autopmuxtreecc65recursive_mux_generator9611__WIRE_procmux6793_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9625__WIRE_autortlilcc2430Or9624 = _0633_ | __MUX_autopmuxtreecc65recursive_mux_generator9619__WIRE_procmux6797_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9641__WIRE_autortlilcc2430Or9640 = _0635_ | __MUX_autopmuxtreecc65recursive_mux_generator9635__WIRE_procmux6801_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9649__WIRE_autortlilcc2430Or9648 = _0637_ | __MUX_autopmuxtreecc65recursive_mux_generator9643__WIRE_procmux6805_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9661__WIRE_autortlilcc2430Or9660 = _0639_ | __MUX_autopmuxtreecc65recursive_mux_generator9655__WIRE_procmux6809_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9669__WIRE_autortlilcc2430Or9668 = _0641_ | __MUX_autopmuxtreecc65recursive_mux_generator9663__WIRE_procmux6813_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9689__WIRE_autortlilcc2430Or9688 = _0643_ | __MUX_autopmuxtreecc65recursive_mux_generator9683__WIRE_procmux6817_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9697__WIRE_autortlilcc2430Or9696 = _0645_ | __MUX_autopmuxtreecc65recursive_mux_generator9691__WIRE_procmux6821_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9709__WIRE_autortlilcc2430Or9708 = _0647_ | __MUX_autopmuxtreecc65recursive_mux_generator9703__WIRE_procmux6825_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9717__WIRE_autortlilcc2430Or9716 = _0649_ | __MUX_autopmuxtreecc65recursive_mux_generator9711__WIRE_procmux6829_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9733__WIRE_autortlilcc2430Or9732 = _0651_ | __MUX_autopmuxtreecc65recursive_mux_generator9727__WIRE_procmux6833_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9741__WIRE_autortlilcc2430Or9740 = _0653_ | __MUX_autopmuxtreecc65recursive_mux_generator9735__WIRE_procmux6837_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9753__WIRE_autortlilcc2430Or9752 = _0655_ | __MUX_autopmuxtreecc65recursive_mux_generator9747__WIRE_procmux6841_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9761__WIRE_autortlilcc2430Or9760 = _0657_ | __MUX_autopmuxtreecc65recursive_mux_generator9755__WIRE_procmux6845_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9785__WIRE_autortlilcc2430Or9784 = __MUX_procmux3006__WIRE_procmux3007_CMP | __MUX_autopmuxtreecc65recursive_mux_generator9795__WIRE_procmux2938_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9417__WIRE_autortlilcc2403ReduceOr9416 = | { _0659_, __MUX_autopmuxtreecc65recursive_mux_generator9401__WIRE_procmux6852_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9405__WIRE_autortlilcc2430Or9404 };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9437__WIRE_autortlilcc2403ReduceOr9436 = | { _0663_, __MUX_autopmuxtreecc65recursive_mux_generator9421__WIRE_procmux6860_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9425__WIRE_autortlilcc2430Or9424 };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9441__WIRE_autortlilcc2403ReduceOr9440 = | { _0661_, __MUX_autopmuxtreecc65recursive_mux_generator9409__WIRE_procmux6856_CMP, _0659_, __MUX_autopmuxtreecc65recursive_mux_generator9401__WIRE_procmux6852_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9413__WIRE_autortlilcc2430Or9412, __MUX_autopmuxtreecc65recursive_mux_generator9405__WIRE_autortlilcc2430Or9404 };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9461__WIRE_autortlilcc2403ReduceOr9460 = | { _0667_, __MUX_autopmuxtreecc65recursive_mux_generator9445__WIRE_procmux6868_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9449__WIRE_autortlilcc2430Or9448 };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9481__WIRE_autortlilcc2403ReduceOr9480 = | { __MUX_autopmuxtreecc65recursive_mux_generator9469__WIRE_autortlilcc2430Or9468, _0671_, __MUX_autopmuxtreecc65recursive_mux_generator9465__WIRE_procmux6876_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9485__WIRE_autortlilcc2403ReduceOr9484 = | { _0669_, __MUX_autopmuxtreecc65recursive_mux_generator9453__WIRE_procmux6872_CMP, _0667_, __MUX_autopmuxtreecc65recursive_mux_generator9445__WIRE_procmux6868_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9457__WIRE_autortlilcc2430Or9456, __MUX_autopmuxtreecc65recursive_mux_generator9449__WIRE_autortlilcc2430Or9448 };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9489__WIRE_autortlilcc2403ReduceOr9488 = | { _0665_, __MUX_autopmuxtreecc65recursive_mux_generator9429__WIRE_procmux6864_CMP, _0663_, __MUX_autopmuxtreecc65recursive_mux_generator9421__WIRE_procmux6860_CMP, _0661_, __MUX_autopmuxtreecc65recursive_mux_generator9409__WIRE_procmux6856_CMP, _0659_, __MUX_autopmuxtreecc65recursive_mux_generator9401__WIRE_procmux6852_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9433__WIRE_autortlilcc2430Or9432, __MUX_autopmuxtreecc65recursive_mux_generator9425__WIRE_autortlilcc2430Or9424, __MUX_autopmuxtreecc65recursive_mux_generator9413__WIRE_autortlilcc2430Or9412, __MUX_autopmuxtreecc65recursive_mux_generator9405__WIRE_autortlilcc2430Or9404 };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9509__WIRE_autortlilcc2403ReduceOr9508 = | { __MUX_autopmuxtreecc65recursive_mux_generator9497__WIRE_autortlilcc2430Or9496, _0675_, __MUX_autopmuxtreecc65recursive_mux_generator9493__WIRE_procmux6884_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9529__WIRE_autortlilcc2403ReduceOr9528 = | { __MUX_autopmuxtreecc65recursive_mux_generator9517__WIRE_autortlilcc2430Or9516, _0679_, __MUX_autopmuxtreecc65recursive_mux_generator9513__WIRE_procmux6892_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9533__WIRE_autortlilcc2403ReduceOr9532 = | { __MUX_autopmuxtreecc65recursive_mux_generator9505__WIRE_autortlilcc2430Or9504, __MUX_autopmuxtreecc65recursive_mux_generator9497__WIRE_autortlilcc2430Or9496, _0677_, __MUX_autopmuxtreecc65recursive_mux_generator9501__WIRE_procmux6888_CMP, _0675_, __MUX_autopmuxtreecc65recursive_mux_generator9493__WIRE_procmux6884_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9553__WIRE_autortlilcc2403ReduceOr9552 = | { __MUX_autopmuxtreecc65recursive_mux_generator9541__WIRE_autortlilcc2430Or9540, _0683_, __MUX_autopmuxtreecc65recursive_mux_generator9537__WIRE_procmux6900_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9573__WIRE_autortlilcc2403ReduceOr9572 = | { __MUX_autopmuxtreecc65recursive_mux_generator9561__WIRE_autortlilcc2430Or9560, _0687_, __MUX_autopmuxtreecc65recursive_mux_generator9557__WIRE_procmux6908_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9577__WIRE_autortlilcc2403ReduceOr9576 = | { __MUX_autopmuxtreecc65recursive_mux_generator9549__WIRE_autortlilcc2430Or9548, __MUX_autopmuxtreecc65recursive_mux_generator9541__WIRE_autortlilcc2430Or9540, _0685_, __MUX_autopmuxtreecc65recursive_mux_generator9545__WIRE_procmux6904_CMP, _0683_, __MUX_autopmuxtreecc65recursive_mux_generator9537__WIRE_procmux6900_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9581__WIRE_autortlilcc2403ReduceOr9580 = | { __MUX_autopmuxtreecc65recursive_mux_generator9525__WIRE_autortlilcc2430Or9524, __MUX_autopmuxtreecc65recursive_mux_generator9517__WIRE_autortlilcc2430Or9516, __MUX_autopmuxtreecc65recursive_mux_generator9505__WIRE_autortlilcc2430Or9504, __MUX_autopmuxtreecc65recursive_mux_generator9497__WIRE_autortlilcc2430Or9496, _0681_, __MUX_autopmuxtreecc65recursive_mux_generator9521__WIRE_procmux6896_CMP, _0679_, __MUX_autopmuxtreecc65recursive_mux_generator9513__WIRE_procmux6892_CMP, _0677_, __MUX_autopmuxtreecc65recursive_mux_generator9501__WIRE_procmux6888_CMP, _0675_, __MUX_autopmuxtreecc65recursive_mux_generator9493__WIRE_procmux6884_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9585__WIRE_autortlilcc2403ReduceOr9584 = | { __MUX_autopmuxtreecc65recursive_mux_generator9477__WIRE_autortlilcc2430Or9476, __MUX_autopmuxtreecc65recursive_mux_generator9469__WIRE_autortlilcc2430Or9468, _0673_, __MUX_autopmuxtreecc65recursive_mux_generator9473__WIRE_procmux6880_CMP, _0671_, __MUX_autopmuxtreecc65recursive_mux_generator9465__WIRE_procmux6876_CMP, _0669_, __MUX_autopmuxtreecc65recursive_mux_generator9453__WIRE_procmux6872_CMP, _0667_, __MUX_autopmuxtreecc65recursive_mux_generator9445__WIRE_procmux6868_CMP, _0665_, __MUX_autopmuxtreecc65recursive_mux_generator9429__WIRE_procmux6864_CMP, _0663_, __MUX_autopmuxtreecc65recursive_mux_generator9421__WIRE_procmux6860_CMP, _0661_, __MUX_autopmuxtreecc65recursive_mux_generator9409__WIRE_procmux6856_CMP, _0659_, __MUX_autopmuxtreecc65recursive_mux_generator9401__WIRE_procmux6852_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9457__WIRE_autortlilcc2430Or9456, __MUX_autopmuxtreecc65recursive_mux_generator9449__WIRE_autortlilcc2430Or9448, __MUX_autopmuxtreecc65recursive_mux_generator9433__WIRE_autortlilcc2430Or9432, __MUX_autopmuxtreecc65recursive_mux_generator9425__WIRE_autortlilcc2430Or9424, __MUX_autopmuxtreecc65recursive_mux_generator9413__WIRE_autortlilcc2430Or9412, __MUX_autopmuxtreecc65recursive_mux_generator9405__WIRE_autortlilcc2430Or9404 };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9609__WIRE_autortlilcc2403ReduceOr9608 = | { __MUX_autopmuxtreecc65recursive_mux_generator9597__WIRE_autortlilcc2430Or9596, _0628_, __MUX_autopmuxtreecc65recursive_mux_generator9593__WIRE_procmux6787_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9629__WIRE_autortlilcc2403ReduceOr9628 = | { __MUX_autopmuxtreecc65recursive_mux_generator9617__WIRE_autortlilcc2430Or9616, _0632_, __MUX_autopmuxtreecc65recursive_mux_generator9613__WIRE_procmux6795_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9633__WIRE_autortlilcc2403ReduceOr9632 = | { __MUX_autopmuxtreecc65recursive_mux_generator9605__WIRE_autortlilcc2430Or9604, __MUX_autopmuxtreecc65recursive_mux_generator9597__WIRE_autortlilcc2430Or9596, _0630_, __MUX_autopmuxtreecc65recursive_mux_generator9601__WIRE_procmux6791_CMP, _0628_, __MUX_autopmuxtreecc65recursive_mux_generator9593__WIRE_procmux6787_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9653__WIRE_autortlilcc2403ReduceOr9652 = | { __MUX_autopmuxtreecc65recursive_mux_generator9641__WIRE_autortlilcc2430Or9640, _0636_, __MUX_autopmuxtreecc65recursive_mux_generator9637__WIRE_procmux6803_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9673__WIRE_autortlilcc2403ReduceOr9672 = | { __MUX_autopmuxtreecc65recursive_mux_generator9661__WIRE_autortlilcc2430Or9660, _0640_, __MUX_autopmuxtreecc65recursive_mux_generator9657__WIRE_procmux6811_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9677__WIRE_autortlilcc2403ReduceOr9676 = | { __MUX_autopmuxtreecc65recursive_mux_generator9649__WIRE_autortlilcc2430Or9648, __MUX_autopmuxtreecc65recursive_mux_generator9641__WIRE_autortlilcc2430Or9640, _0638_, __MUX_autopmuxtreecc65recursive_mux_generator9645__WIRE_procmux6807_CMP, _0636_, __MUX_autopmuxtreecc65recursive_mux_generator9637__WIRE_procmux6803_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9681__WIRE_autortlilcc2403ReduceOr9680 = | { __MUX_autopmuxtreecc65recursive_mux_generator9625__WIRE_autortlilcc2430Or9624, __MUX_autopmuxtreecc65recursive_mux_generator9617__WIRE_autortlilcc2430Or9616, __MUX_autopmuxtreecc65recursive_mux_generator9605__WIRE_autortlilcc2430Or9604, __MUX_autopmuxtreecc65recursive_mux_generator9597__WIRE_autortlilcc2430Or9596, _0634_, __MUX_autopmuxtreecc65recursive_mux_generator9621__WIRE_procmux6799_CMP, _0632_, __MUX_autopmuxtreecc65recursive_mux_generator9613__WIRE_procmux6795_CMP, _0630_, __MUX_autopmuxtreecc65recursive_mux_generator9601__WIRE_procmux6791_CMP, _0628_, __MUX_autopmuxtreecc65recursive_mux_generator9593__WIRE_procmux6787_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9701__WIRE_autortlilcc2403ReduceOr9700 = | { __MUX_autopmuxtreecc65recursive_mux_generator9689__WIRE_autortlilcc2430Or9688, _0644_, __MUX_autopmuxtreecc65recursive_mux_generator9685__WIRE_procmux6819_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9721__WIRE_autortlilcc2403ReduceOr9720 = | { __MUX_autopmuxtreecc65recursive_mux_generator9709__WIRE_autortlilcc2430Or9708, _0648_, __MUX_autopmuxtreecc65recursive_mux_generator9705__WIRE_procmux6827_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9725__WIRE_autortlilcc2403ReduceOr9724 = | { __MUX_autopmuxtreecc65recursive_mux_generator9697__WIRE_autortlilcc2430Or9696, __MUX_autopmuxtreecc65recursive_mux_generator9689__WIRE_autortlilcc2430Or9688, _0646_, __MUX_autopmuxtreecc65recursive_mux_generator9693__WIRE_procmux6823_CMP, _0644_, __MUX_autopmuxtreecc65recursive_mux_generator9685__WIRE_procmux6819_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9745__WIRE_autortlilcc2403ReduceOr9744 = | { __MUX_autopmuxtreecc65recursive_mux_generator9733__WIRE_autortlilcc2430Or9732, _0652_, __MUX_autopmuxtreecc65recursive_mux_generator9729__WIRE_procmux6835_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9765__WIRE_autortlilcc2403ReduceOr9764 = | { __MUX_autopmuxtreecc65recursive_mux_generator9753__WIRE_autortlilcc2430Or9752, _0656_, __MUX_autopmuxtreecc65recursive_mux_generator9749__WIRE_procmux6843_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9769__WIRE_autortlilcc2403ReduceOr9768 = | { __MUX_autopmuxtreecc65recursive_mux_generator9741__WIRE_autortlilcc2430Or9740, __MUX_autopmuxtreecc65recursive_mux_generator9733__WIRE_autortlilcc2430Or9732, _0654_, __MUX_autopmuxtreecc65recursive_mux_generator9737__WIRE_procmux6839_CMP, _0652_, __MUX_autopmuxtreecc65recursive_mux_generator9729__WIRE_procmux6835_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9773__WIRE_autortlilcc2403ReduceOr9772 = | { __MUX_autopmuxtreecc65recursive_mux_generator9717__WIRE_autortlilcc2430Or9716, __MUX_autopmuxtreecc65recursive_mux_generator9709__WIRE_autortlilcc2430Or9708, __MUX_autopmuxtreecc65recursive_mux_generator9697__WIRE_autortlilcc2430Or9696, __MUX_autopmuxtreecc65recursive_mux_generator9689__WIRE_autortlilcc2430Or9688, _0650_, __MUX_autopmuxtreecc65recursive_mux_generator9713__WIRE_procmux6831_CMP, _0648_, __MUX_autopmuxtreecc65recursive_mux_generator9705__WIRE_procmux6827_CMP, _0646_, __MUX_autopmuxtreecc65recursive_mux_generator9693__WIRE_procmux6823_CMP, _0644_, __MUX_autopmuxtreecc65recursive_mux_generator9685__WIRE_procmux6819_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9777__WIRE_autortlilcc2403ReduceOr9776 = | { __MUX_autopmuxtreecc65recursive_mux_generator9669__WIRE_autortlilcc2430Or9668, __MUX_autopmuxtreecc65recursive_mux_generator9661__WIRE_autortlilcc2430Or9660, __MUX_autopmuxtreecc65recursive_mux_generator9649__WIRE_autortlilcc2430Or9648, __MUX_autopmuxtreecc65recursive_mux_generator9641__WIRE_autortlilcc2430Or9640, __MUX_autopmuxtreecc65recursive_mux_generator9625__WIRE_autortlilcc2430Or9624, __MUX_autopmuxtreecc65recursive_mux_generator9617__WIRE_autortlilcc2430Or9616, __MUX_autopmuxtreecc65recursive_mux_generator9605__WIRE_autortlilcc2430Or9604, __MUX_autopmuxtreecc65recursive_mux_generator9597__WIRE_autortlilcc2430Or9596, _0642_, __MUX_autopmuxtreecc65recursive_mux_generator9665__WIRE_procmux6815_CMP, _0640_, __MUX_autopmuxtreecc65recursive_mux_generator9657__WIRE_procmux6811_CMP, _0638_, __MUX_autopmuxtreecc65recursive_mux_generator9645__WIRE_procmux6807_CMP, _0636_, __MUX_autopmuxtreecc65recursive_mux_generator9637__WIRE_procmux6803_CMP, _0634_, __MUX_autopmuxtreecc65recursive_mux_generator9621__WIRE_procmux6799_CMP, _0632_, __MUX_autopmuxtreecc65recursive_mux_generator9613__WIRE_procmux6795_CMP, _0630_, __MUX_autopmuxtreecc65recursive_mux_generator9601__WIRE_procmux6791_CMP, _0628_, __MUX_autopmuxtreecc65recursive_mux_generator9593__WIRE_procmux6787_CMP };
  assign _0364_ = __MUX_autopmuxtreecc65recursive_mux_generator9399__WIRE_procmux6850_CMP ? 6'h3f : 6'h3e;
  assign _0365_ = __MUX_autopmuxtreecc65recursive_mux_generator9401__WIRE_procmux6852_CMP ? 6'h3d : 6'h3c;
  assign _0366_ = __MUX_autopmuxtreecc65recursive_mux_generator9405__WIRE_autortlilcc2430Or9404 ? _0364_ : _0365_;
  assign _0367_ = __MUX_autopmuxtreecc65recursive_mux_generator9407__WIRE_procmux6854_CMP ? 6'h3b : 6'h3a;
  assign _0368_ = __MUX_autopmuxtreecc65recursive_mux_generator9409__WIRE_procmux6856_CMP ? 6'h39 : 6'h38;
  assign _0369_ = __MUX_autopmuxtreecc65recursive_mux_generator9413__WIRE_autortlilcc2430Or9412 ? _0367_ : _0368_;
  assign _0370_ = __MUX_autopmuxtreecc65recursive_mux_generator9417__WIRE_autortlilcc2403ReduceOr9416 ? _0366_ : _0369_;
  assign _0371_ = __MUX_autopmuxtreecc65recursive_mux_generator9419__WIRE_procmux6858_CMP ? 6'h37 : 6'h36;
  assign _0372_ = __MUX_autopmuxtreecc65recursive_mux_generator9421__WIRE_procmux6860_CMP ? 6'h35 : 6'h34;
  assign _0373_ = __MUX_autopmuxtreecc65recursive_mux_generator9425__WIRE_autortlilcc2430Or9424 ? _0371_ : _0372_;
  assign _0374_ = __MUX_autopmuxtreecc65recursive_mux_generator9427__WIRE_procmux6862_CMP ? 6'h33 : 6'h32;
  assign _0375_ = __MUX_autopmuxtreecc65recursive_mux_generator9429__WIRE_procmux6864_CMP ? 6'h31 : 6'h30;
  assign _0376_ = __MUX_autopmuxtreecc65recursive_mux_generator9433__WIRE_autortlilcc2430Or9432 ? _0374_ : _0375_;
  assign _0377_ = __MUX_autopmuxtreecc65recursive_mux_generator9437__WIRE_autortlilcc2403ReduceOr9436 ? _0373_ : _0376_;
  assign _0378_ = __MUX_autopmuxtreecc65recursive_mux_generator9441__WIRE_autortlilcc2403ReduceOr9440 ? _0370_ : _0377_;
  assign _0379_ = __MUX_autopmuxtreecc65recursive_mux_generator9443__WIRE_procmux6866_CMP ? 6'h2f : 6'h2e;
  assign _0380_ = __MUX_autopmuxtreecc65recursive_mux_generator9445__WIRE_procmux6868_CMP ? 6'h2d : 6'h2c;
  assign _0381_ = __MUX_autopmuxtreecc65recursive_mux_generator9449__WIRE_autortlilcc2430Or9448 ? _0379_ : _0380_;
  assign _0382_ = __MUX_autopmuxtreecc65recursive_mux_generator9451__WIRE_procmux6870_CMP ? 6'h2b : 6'h2a;
  assign _0383_ = __MUX_autopmuxtreecc65recursive_mux_generator9453__WIRE_procmux6872_CMP ? 6'h29 : 6'h28;
  assign _0384_ = __MUX_autopmuxtreecc65recursive_mux_generator9457__WIRE_autortlilcc2430Or9456 ? _0382_ : _0383_;
  assign _0385_ = __MUX_autopmuxtreecc65recursive_mux_generator9461__WIRE_autortlilcc2403ReduceOr9460 ? _0381_ : _0384_;
  assign _0386_ = __MUX_autopmuxtreecc65recursive_mux_generator9463__WIRE_procmux6874_CMP ? 6'h27 : 6'h26;
  assign _0387_ = __MUX_autopmuxtreecc65recursive_mux_generator9465__WIRE_procmux6876_CMP ? 6'h25 : 6'h24;
  assign _0388_ = __MUX_autopmuxtreecc65recursive_mux_generator9469__WIRE_autortlilcc2430Or9468 ? _0386_ : _0387_;
  assign _0389_ = __MUX_autopmuxtreecc65recursive_mux_generator9471__WIRE_procmux6878_CMP ? 6'h23 : 6'h22;
  assign _0390_ = __MUX_autopmuxtreecc65recursive_mux_generator9473__WIRE_procmux6880_CMP ? 6'h21 : 6'h20;
  assign _0391_ = __MUX_autopmuxtreecc65recursive_mux_generator9477__WIRE_autortlilcc2430Or9476 ? _0389_ : _0390_;
  assign _0392_ = __MUX_autopmuxtreecc65recursive_mux_generator9481__WIRE_autortlilcc2403ReduceOr9480 ? _0388_ : _0391_;
  assign _0393_ = __MUX_autopmuxtreecc65recursive_mux_generator9485__WIRE_autortlilcc2403ReduceOr9484 ? _0385_ : _0392_;
  assign _0394_ = __MUX_autopmuxtreecc65recursive_mux_generator9489__WIRE_autortlilcc2403ReduceOr9488 ? _0378_ : _0393_;
  assign _0395_ = __MUX_autopmuxtreecc65recursive_mux_generator9491__WIRE_procmux6882_CMP ? 6'h1f : 6'h1e;
  assign _0396_ = __MUX_autopmuxtreecc65recursive_mux_generator9493__WIRE_procmux6884_CMP ? 6'h1d : 6'h1c;
  assign _0397_ = __MUX_autopmuxtreecc65recursive_mux_generator9497__WIRE_autortlilcc2430Or9496 ? _0395_ : _0396_;
  assign _0398_ = __MUX_autopmuxtreecc65recursive_mux_generator9499__WIRE_procmux6886_CMP ? 6'h1b : 6'h1a;
  assign _0399_ = __MUX_autopmuxtreecc65recursive_mux_generator9501__WIRE_procmux6888_CMP ? 6'h19 : 6'h18;
  assign _0400_ = __MUX_autopmuxtreecc65recursive_mux_generator9505__WIRE_autortlilcc2430Or9504 ? _0398_ : _0399_;
  assign _0401_ = __MUX_autopmuxtreecc65recursive_mux_generator9509__WIRE_autortlilcc2403ReduceOr9508 ? _0397_ : _0400_;
  assign _0402_ = __MUX_autopmuxtreecc65recursive_mux_generator9511__WIRE_procmux6890_CMP ? 6'h17 : 6'h16;
  assign _0403_ = __MUX_autopmuxtreecc65recursive_mux_generator9513__WIRE_procmux6892_CMP ? 6'h15 : 6'h14;
  assign _0404_ = __MUX_autopmuxtreecc65recursive_mux_generator9517__WIRE_autortlilcc2430Or9516 ? _0402_ : _0403_;
  assign _0405_ = __MUX_autopmuxtreecc65recursive_mux_generator9519__WIRE_procmux6894_CMP ? 6'h13 : 6'h12;
  assign _0406_ = __MUX_autopmuxtreecc65recursive_mux_generator9521__WIRE_procmux6896_CMP ? 6'h11 : 6'h10;
  assign _0407_ = __MUX_autopmuxtreecc65recursive_mux_generator9525__WIRE_autortlilcc2430Or9524 ? _0405_ : _0406_;
  assign _0408_ = __MUX_autopmuxtreecc65recursive_mux_generator9529__WIRE_autortlilcc2403ReduceOr9528 ? _0404_ : _0407_;
  assign _0409_ = __MUX_autopmuxtreecc65recursive_mux_generator9533__WIRE_autortlilcc2403ReduceOr9532 ? _0401_ : _0408_;
  assign _0410_ = __MUX_autopmuxtreecc65recursive_mux_generator9535__WIRE_procmux6898_CMP ? 6'h0f : 6'h0e;
  assign _0411_ = __MUX_autopmuxtreecc65recursive_mux_generator9537__WIRE_procmux6900_CMP ? 6'h0d : 6'h0c;
  assign _0412_ = __MUX_autopmuxtreecc65recursive_mux_generator9541__WIRE_autortlilcc2430Or9540 ? _0410_ : _0411_;
  assign _0413_ = __MUX_autopmuxtreecc65recursive_mux_generator9543__WIRE_procmux6902_CMP ? 6'h0b : 6'h0a;
  assign _0414_ = __MUX_autopmuxtreecc65recursive_mux_generator9545__WIRE_procmux6904_CMP ? 6'h09 : 6'h08;
  assign _0415_ = __MUX_autopmuxtreecc65recursive_mux_generator9549__WIRE_autortlilcc2430Or9548 ? _0413_ : _0414_;
  assign _0416_ = __MUX_autopmuxtreecc65recursive_mux_generator9553__WIRE_autortlilcc2403ReduceOr9552 ? _0412_ : _0415_;
  assign _0417_ = __MUX_autopmuxtreecc65recursive_mux_generator9555__WIRE_procmux6906_CMP ? 6'h07 : 6'h06;
  assign _0418_ = __MUX_autopmuxtreecc65recursive_mux_generator9557__WIRE_procmux6908_CMP ? 6'h05 : 6'h04;
  assign _0419_ = __MUX_autopmuxtreecc65recursive_mux_generator9561__WIRE_autortlilcc2430Or9560 ? _0417_ : _0418_;
  assign _0420_ = __MUX_autopmuxtreecc65recursive_mux_generator9563__WIRE_procmux6910_CMP ? 6'h03 : 6'h02;
  assign _0421_ = __MUX_autopmuxtreecc65recursive_mux_generator9565__WIRE_procmux6912_CMP ? 6'h01 : 6'h00;
  assign _0422_ = __MUX_autopmuxtreecc65recursive_mux_generator9569__WIRE_autortlilcc2430Or9568 ? _0420_ : _0421_;
  assign _0423_ = __MUX_autopmuxtreecc65recursive_mux_generator9573__WIRE_autortlilcc2403ReduceOr9572 ? _0419_ : _0422_;
  assign _0424_ = __MUX_autopmuxtreecc65recursive_mux_generator9577__WIRE_autortlilcc2403ReduceOr9576 ? _0416_ : _0423_;
  assign _0425_ = __MUX_autopmuxtreecc65recursive_mux_generator9581__WIRE_autortlilcc2403ReduceOr9580 ? _0409_ : _0424_;
  assign read_addr = __MUX_autopmuxtreecc65recursive_mux_generator9585__WIRE_autortlilcc2403ReduceOr9584 ? _0394_ : _0425_;
  assign _0426_ = __MUX_autopmuxtreecc65recursive_mux_generator9591__WIRE_procmux6785_CMP ? 6'h3f : 6'h3e;
  assign _0427_ = __MUX_autopmuxtreecc65recursive_mux_generator9593__WIRE_procmux6787_CMP ? 6'h3d : 6'h3c;
  assign _0428_ = __MUX_autopmuxtreecc65recursive_mux_generator9597__WIRE_autortlilcc2430Or9596 ? _0426_ : _0427_;
  assign _0429_ = __MUX_autopmuxtreecc65recursive_mux_generator9599__WIRE_procmux6789_CMP ? 6'h3b : 6'h3a;
  assign _0430_ = __MUX_autopmuxtreecc65recursive_mux_generator9601__WIRE_procmux6791_CMP ? 6'h39 : 6'h38;
  assign _0431_ = __MUX_autopmuxtreecc65recursive_mux_generator9605__WIRE_autortlilcc2430Or9604 ? _0429_ : _0430_;
  assign _0432_ = __MUX_autopmuxtreecc65recursive_mux_generator9609__WIRE_autortlilcc2403ReduceOr9608 ? _0428_ : _0431_;
  assign _0433_ = __MUX_autopmuxtreecc65recursive_mux_generator9611__WIRE_procmux6793_CMP ? 6'h37 : 6'h36;
  assign _0434_ = __MUX_autopmuxtreecc65recursive_mux_generator9613__WIRE_procmux6795_CMP ? 6'h35 : 6'h34;
  assign _0435_ = __MUX_autopmuxtreecc65recursive_mux_generator9617__WIRE_autortlilcc2430Or9616 ? _0433_ : _0434_;
  assign _0436_ = __MUX_autopmuxtreecc65recursive_mux_generator9619__WIRE_procmux6797_CMP ? 6'h33 : 6'h32;
  assign _0437_ = __MUX_autopmuxtreecc65recursive_mux_generator9621__WIRE_procmux6799_CMP ? 6'h31 : 6'h30;
  assign _0438_ = __MUX_autopmuxtreecc65recursive_mux_generator9625__WIRE_autortlilcc2430Or9624 ? _0436_ : _0437_;
  assign _0439_ = __MUX_autopmuxtreecc65recursive_mux_generator9629__WIRE_autortlilcc2403ReduceOr9628 ? _0435_ : _0438_;
  assign _0440_ = __MUX_autopmuxtreecc65recursive_mux_generator9633__WIRE_autortlilcc2403ReduceOr9632 ? _0432_ : _0439_;
  assign _0441_ = __MUX_autopmuxtreecc65recursive_mux_generator9635__WIRE_procmux6801_CMP ? 6'h2f : 6'h2e;
  assign _0442_ = __MUX_autopmuxtreecc65recursive_mux_generator9637__WIRE_procmux6803_CMP ? 6'h2d : 6'h2c;
  assign _0443_ = __MUX_autopmuxtreecc65recursive_mux_generator9641__WIRE_autortlilcc2430Or9640 ? _0441_ : _0442_;
  assign _0444_ = __MUX_autopmuxtreecc65recursive_mux_generator9643__WIRE_procmux6805_CMP ? 6'h2b : 6'h2a;
  assign _0445_ = __MUX_autopmuxtreecc65recursive_mux_generator9645__WIRE_procmux6807_CMP ? 6'h29 : 6'h28;
  assign _0446_ = __MUX_autopmuxtreecc65recursive_mux_generator9649__WIRE_autortlilcc2430Or9648 ? _0444_ : _0445_;
  assign _0447_ = __MUX_autopmuxtreecc65recursive_mux_generator9653__WIRE_autortlilcc2403ReduceOr9652 ? _0443_ : _0446_;
  assign _0448_ = __MUX_autopmuxtreecc65recursive_mux_generator9655__WIRE_procmux6809_CMP ? 6'h27 : 6'h26;
  assign _0449_ = __MUX_autopmuxtreecc65recursive_mux_generator9657__WIRE_procmux6811_CMP ? 6'h25 : 6'h24;
  assign _0450_ = __MUX_autopmuxtreecc65recursive_mux_generator9661__WIRE_autortlilcc2430Or9660 ? _0448_ : _0449_;
  assign _0451_ = __MUX_autopmuxtreecc65recursive_mux_generator9663__WIRE_procmux6813_CMP ? 6'h23 : 6'h22;
  assign _0452_ = __MUX_autopmuxtreecc65recursive_mux_generator9665__WIRE_procmux6815_CMP ? 6'h21 : 6'h20;
  assign _0453_ = __MUX_autopmuxtreecc65recursive_mux_generator9669__WIRE_autortlilcc2430Or9668 ? _0451_ : _0452_;
  assign _0454_ = __MUX_autopmuxtreecc65recursive_mux_generator9673__WIRE_autortlilcc2403ReduceOr9672 ? _0450_ : _0453_;
  assign _0455_ = __MUX_autopmuxtreecc65recursive_mux_generator9677__WIRE_autortlilcc2403ReduceOr9676 ? _0447_ : _0454_;
  assign _0456_ = __MUX_autopmuxtreecc65recursive_mux_generator9681__WIRE_autortlilcc2403ReduceOr9680 ? _0440_ : _0455_;
  assign _0457_ = __MUX_autopmuxtreecc65recursive_mux_generator9683__WIRE_procmux6817_CMP ? 6'h1f : 6'h1e;
  assign _0458_ = __MUX_autopmuxtreecc65recursive_mux_generator9685__WIRE_procmux6819_CMP ? 6'h1d : 6'h1c;
  assign _0459_ = __MUX_autopmuxtreecc65recursive_mux_generator9689__WIRE_autortlilcc2430Or9688 ? _0457_ : _0458_;
  assign _0460_ = __MUX_autopmuxtreecc65recursive_mux_generator9691__WIRE_procmux6821_CMP ? 6'h1b : 6'h1a;
  assign _0461_ = __MUX_autopmuxtreecc65recursive_mux_generator9693__WIRE_procmux6823_CMP ? 6'h19 : 6'h18;
  assign _0462_ = __MUX_autopmuxtreecc65recursive_mux_generator9697__WIRE_autortlilcc2430Or9696 ? _0460_ : _0461_;
  assign _0463_ = __MUX_autopmuxtreecc65recursive_mux_generator9701__WIRE_autortlilcc2403ReduceOr9700 ? _0459_ : _0462_;
  assign _0464_ = __MUX_autopmuxtreecc65recursive_mux_generator9703__WIRE_procmux6825_CMP ? 6'h17 : 6'h16;
  assign _0465_ = __MUX_autopmuxtreecc65recursive_mux_generator9705__WIRE_procmux6827_CMP ? 6'h15 : 6'h14;
  assign _0466_ = __MUX_autopmuxtreecc65recursive_mux_generator9709__WIRE_autortlilcc2430Or9708 ? _0464_ : _0465_;
  assign _0467_ = __MUX_autopmuxtreecc65recursive_mux_generator9711__WIRE_procmux6829_CMP ? 6'h13 : 6'h12;
  assign _0468_ = __MUX_autopmuxtreecc65recursive_mux_generator9713__WIRE_procmux6831_CMP ? 6'h11 : 6'h10;
  assign _0469_ = __MUX_autopmuxtreecc65recursive_mux_generator9717__WIRE_autortlilcc2430Or9716 ? _0467_ : _0468_;
  assign _0470_ = __MUX_autopmuxtreecc65recursive_mux_generator9721__WIRE_autortlilcc2403ReduceOr9720 ? _0466_ : _0469_;
  assign _0471_ = __MUX_autopmuxtreecc65recursive_mux_generator9725__WIRE_autortlilcc2403ReduceOr9724 ? _0463_ : _0470_;
  assign _0472_ = __MUX_autopmuxtreecc65recursive_mux_generator9727__WIRE_procmux6833_CMP ? 6'h0f : 6'h0e;
  assign _0473_ = __MUX_autopmuxtreecc65recursive_mux_generator9729__WIRE_procmux6835_CMP ? 6'h0d : 6'h0c;
  assign _0474_ = __MUX_autopmuxtreecc65recursive_mux_generator9733__WIRE_autortlilcc2430Or9732 ? _0472_ : _0473_;
  assign _0475_ = __MUX_autopmuxtreecc65recursive_mux_generator9735__WIRE_procmux6837_CMP ? 6'h0b : 6'h0a;
  assign _0476_ = __MUX_autopmuxtreecc65recursive_mux_generator9737__WIRE_procmux6839_CMP ? 6'h09 : 6'h08;
  assign _0477_ = __MUX_autopmuxtreecc65recursive_mux_generator9741__WIRE_autortlilcc2430Or9740 ? _0475_ : _0476_;
  assign _0478_ = __MUX_autopmuxtreecc65recursive_mux_generator9745__WIRE_autortlilcc2403ReduceOr9744 ? _0474_ : _0477_;
  assign _0479_ = __MUX_autopmuxtreecc65recursive_mux_generator9747__WIRE_procmux6841_CMP ? 6'h07 : 6'h06;
  assign _0480_ = __MUX_autopmuxtreecc65recursive_mux_generator9749__WIRE_procmux6843_CMP ? 6'h05 : 6'h04;
  assign _0481_ = __MUX_autopmuxtreecc65recursive_mux_generator9753__WIRE_autortlilcc2430Or9752 ? _0479_ : _0480_;
  assign _0482_ = __MUX_autopmuxtreecc65recursive_mux_generator9755__WIRE_procmux6845_CMP ? 6'h03 : 6'h02;
  assign _0483_ = __MUX_autopmuxtreecc65recursive_mux_generator9757__WIRE_procmux6847_CMP ? 6'h01 : 6'h00;
  assign _0484_ = __MUX_autopmuxtreecc65recursive_mux_generator9761__WIRE_autortlilcc2430Or9760 ? _0482_ : _0483_;
  assign _0485_ = __MUX_autopmuxtreecc65recursive_mux_generator9765__WIRE_autortlilcc2403ReduceOr9764 ? _0481_ : _0484_;
  assign _0486_ = __MUX_autopmuxtreecc65recursive_mux_generator9769__WIRE_autortlilcc2403ReduceOr9768 ? _0478_ : _0485_;
  assign _0487_ = __MUX_autopmuxtreecc65recursive_mux_generator9773__WIRE_autortlilcc2403ReduceOr9772 ? _0471_ : _0486_;
  assign update_addr = __MUX_autopmuxtreecc65recursive_mux_generator9777__WIRE_autortlilcc2403ReduceOr9776 ? _0456_ : _0487_;
  assign _0488_[1] = __MUX_autopmuxtreecc65recursive_mux_generator9781__WIRE_procmux3080_CMP ? _0356_[1] : 1'h0;
  assign _0341_[1] = __MUX_autopmuxtreecc65recursive_mux_generator9785__WIRE_autortlilcc2430Or9784 ? 1'h0 : _0488_[1];
  assign _0489_[1] = __MUX_autopmuxtreecc65recursive_mux_generator9781__WIRE_procmux3080_CMP ? _0357_[1] : 1'h0;
  assign _0343_[1] = __MUX_autopmuxtreecc65recursive_mux_generator9785__WIRE_autortlilcc2430Or9784 ? 1'h0 : _0489_[1];
  assign _0490_[1] = __MUX_autopmuxtreecc65recursive_mux_generator9795__WIRE_procmux2938_CMP ? 1'h0 : _0358_[1];
  assign _0345_[1] = __MUX_autopmuxtreecc65recursive_mux_generator9785__WIRE_autortlilcc2430Or9784 ? _0490_[1] : 1'h0;
  assign _0491_[1] = __MUX_autopmuxtreecc65recursive_mux_generator9795__WIRE_procmux2938_CMP ? 1'h0 : _0359_[1];
  assign _0347_[1] = __MUX_autopmuxtreecc65recursive_mux_generator9785__WIRE_autortlilcc2430Or9784 ? _0491_[1] : 1'h0;
  assign _0492_[1] = __MUX_autopmuxtreecc65recursive_mux_generator9795__WIRE_procmux2938_CMP ? _0356_[1] : 1'h0;
  assign _0349_[1] = __MUX_autopmuxtreecc65recursive_mux_generator9785__WIRE_autortlilcc2430Or9784 ? _0492_[1] : 1'h0;
  assign _0493_[1] = __MUX_autopmuxtreecc65recursive_mux_generator9795__WIRE_procmux2938_CMP ? _0357_[1] : 1'h0;
  assign _0351_[1] = __MUX_autopmuxtreecc65recursive_mux_generator9785__WIRE_autortlilcc2430Or9784 ? _0493_[1] : 1'h0;
  assign _0494_[1] = __MUX_autopmuxtreecc65recursive_mux_generator9781__WIRE_procmux3080_CMP ? 1'h0 : _0353_[1];
  assign _0337_[1] = __MUX_autopmuxtreecc65recursive_mux_generator9785__WIRE_autortlilcc2430Or9784 ? 1'h0 : _0494_[1];
  assign _0495_[1] = __MUX_autopmuxtreecc65recursive_mux_generator9781__WIRE_procmux3080_CMP ? 1'h0 : _0355_[1];
  assign _0339_[1] = __MUX_autopmuxtreecc65recursive_mux_generator9785__WIRE_autortlilcc2430Or9784 ? 1'h0 : _0495_[1];
  assign addr_hit_PCU[0] = _0561_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[1] = _0562_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[2] = _0563_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[3] = _0564_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[4] = _0565_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[5] = _0566_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[6] = _0567_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[7] = _0568_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[8] = _0569_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[9] = _0570_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[10] = _0571_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[11] = _0572_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[12] = _0573_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[13] = _0574_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[14] = _0575_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[15] = _0576_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[16] = _0577_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[17] = _0578_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[18] = _0579_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[19] = _0580_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[20] = _0581_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[21] = _0582_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[22] = _0583_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[23] = _0584_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[24] = _0585_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[25] = _0586_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[26] = _0587_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[27] = _0588_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[28] = _0589_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[29] = _0590_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[30] = _0591_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[31] = _0592_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[32] = _0593_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[33] = _0594_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[34] = _0595_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[35] = _0596_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[36] = _0597_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[37] = _0598_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[38] = _0599_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[39] = _0600_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[40] = _0601_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[41] = _0602_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[42] = _0603_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[43] = _0604_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[44] = _0605_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[45] = _0606_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[46] = _0607_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[47] = _0608_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[48] = _0609_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[49] = _0610_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[50] = _0611_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[51] = _0612_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[52] = _0613_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[53] = _0614_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[54] = _0615_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[55] = _0616_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[56] = _0617_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[57] = _0618_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[58] = _0619_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[59] = _0620_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[60] = _0621_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[61] = _0622_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[62] = _0623_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_PCU[63] = _0624_ == (* src = "./core/bpu.v:110.35-110.61" *) pc_i;
  assign addr_hit_DEC[0] = _0561_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[1] = _0562_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[2] = _0563_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[3] = _0564_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[4] = _0565_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[5] = _0566_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[6] = _0567_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[7] = _0568_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[8] = _0569_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[9] = _0570_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[10] = _0571_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[11] = _0572_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[12] = _0573_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[13] = _0574_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[14] = _0575_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[15] = _0576_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[16] = _0577_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[17] = _0578_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[18] = _0579_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[19] = _0580_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[20] = _0581_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[21] = _0582_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[22] = _0583_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[23] = _0584_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[24] = _0585_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[25] = _0586_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[26] = _0587_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[27] = _0588_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[28] = _0589_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[29] = _0590_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[30] = _0591_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[31] = _0592_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[32] = _0593_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[33] = _0594_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[34] = _0595_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[35] = _0596_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[36] = _0597_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[37] = _0598_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[38] = _0599_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[39] = _0600_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[40] = _0601_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[41] = _0602_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[42] = _0603_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[43] = _0604_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[44] = _0605_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[45] = _0606_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[46] = _0607_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[47] = _0608_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[48] = _0609_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[49] = _0610_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[50] = _0611_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[51] = _0612_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[52] = _0613_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[53] = _0614_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[54] = _0615_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[55] = _0616_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[56] = _0617_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[57] = _0618_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[58] = _0619_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[59] = _0620_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[60] = _0621_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[61] = _0622_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[62] = _0623_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign addr_hit_DEC[63] = _0624_ == (* src = "./core/bpu.v:111.35-111.65" *) dec_pc_i;
  assign \__MUX_ternary/core/bpuv127835__WIRE_eq/core/bpuv127833_Y  = write_addr == (* src = "./core/bpu.v:127.24-127.53" *) 6'h3f;
  assign _0625_ = ~ (* src = "./core/bpu.v:104.56-104.72" *) _0689_;
  assign _0626_ = is_cond_branch_i | (* src = "./core/bpu.v:104.25-104.52" *) is_jal_i;
  assign _0358_[1] = __MUX_procmux3006__WIRE_procmux3007_CMP ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:321.13-342.20" *) _0356_[1] : 1'hx;
  assign _0359_[1] = __MUX_procmux3006__WIRE_procmux3007_CMP ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:321.13-342.20" *) _0357_[1] : 1'hx;
  assign _0356_[1] = branch_taken_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:323.25-323.39|./core/bpu.v:323.21-326.65" *) 1'h1 : 1'h0;
  assign _0353_[1] = __MUX_procmux3156__WIRE_procmux3157_CMP ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:321.13-342.20" *) _0356_[1] : 1'hx;
  assign _0352_ = branch_taken_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:323.25-323.39|./core/bpu.v:323.21-326.65" *) update_addr : 6'hxx;
  assign _0357_[1] = branch_taken_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:323.25-323.39|./core/bpu.v:323.21-326.65" *) 1'h0 : 1'h1;
  assign _0355_[1] = __MUX_procmux3156__WIRE_procmux3157_CMP ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:321.13-342.20" *) _0357_[1] : 1'hx;
  assign _0354_ = branch_taken_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:323.25-323.39|./core/bpu.v:323.21-326.65" *) 6'hxx : update_addr;
  assign _0338_ = __MUX_procmux3156__WIRE_procmux3157_CMP ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:321.13-342.20" *) _0354_ : 6'hxx;
  assign _0336_ = __MUX_procmux3156__WIRE_procmux3157_CMP ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:321.13-342.20" *) _0352_ : 6'hxx;
  assign _0350_ = __MUX_autopmuxtreecc65recursive_mux_generator9795__WIRE_procmux2938_CMP ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:321.13-342.20" *) _0354_ : 6'hxx;
  assign _0348_ = __MUX_autopmuxtreecc65recursive_mux_generator9795__WIRE_procmux2938_CMP ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:321.13-342.20" *) _0352_ : 6'hxx;
  assign _0346_ = __MUX_procmux3006__WIRE_procmux3007_CMP ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:321.13-342.20" *) _0354_ : 6'hxx;
  assign _0344_ = __MUX_procmux3006__WIRE_procmux3007_CMP ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:321.13-342.20" *) _0352_ : 6'hxx;
  assign _0342_ = __MUX_autopmuxtreecc65recursive_mux_generator9781__WIRE_procmux3080_CMP ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:321.13-342.20" *) _0354_ : 6'hxx;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9795__WIRE_procmux2938_CMP = _0560_ == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:321.13-342.20" *) 2'h3;
  assign __MUX_procmux3006__WIRE_procmux3007_CMP = _0560_ == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:321.13-342.20" *) 2'h2;
  assign __MUX_procmux3156__WIRE_procmux3157_CMP = ! (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:321.13-342.20" *) _0560_;
  assign _0340_ = __MUX_autopmuxtreecc65recursive_mux_generator9781__WIRE_procmux3080_CMP ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:321.13-342.20" *) _0352_ : 6'hxx;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9781__WIRE_procmux3080_CMP = _0560_ == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:321.13-342.20" *) 2'h1;
  assign _0335_[1] = exe_is_branch_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:319.18-319.33|./core/bpu.v:319.14-343.12" *) _0351_[1] : 1'h0;
  assign _0334_ = exe_is_branch_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:319.18-319.33|./core/bpu.v:319.14-343.12" *) _0350_ : 6'hxx;
  assign _0333_[1] = exe_is_branch_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:319.18-319.33|./core/bpu.v:319.14-343.12" *) _0349_[1] : 1'h0;
  assign _0332_ = exe_is_branch_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:319.18-319.33|./core/bpu.v:319.14-343.12" *) _0348_ : 6'hxx;
  assign _0331_[1] = exe_is_branch_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:319.18-319.33|./core/bpu.v:319.14-343.12" *) _0347_[1] : 1'h0;
  assign _0330_ = exe_is_branch_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:319.18-319.33|./core/bpu.v:319.14-343.12" *) _0346_ : 6'hxx;
  assign _0329_[1] = exe_is_branch_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:319.18-319.33|./core/bpu.v:319.14-343.12" *) _0345_[1] : 1'h0;
  assign _0328_ = exe_is_branch_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:319.18-319.33|./core/bpu.v:319.14-343.12" *) _0344_ : 6'hxx;
  assign _0327_[1] = exe_is_branch_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:319.18-319.33|./core/bpu.v:319.14-343.12" *) _0343_[1] : 1'h0;
  assign _0326_ = exe_is_branch_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:319.18-319.33|./core/bpu.v:319.14-343.12" *) _0342_ : 6'hxx;
  assign _0325_[1] = exe_is_branch_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:319.18-319.33|./core/bpu.v:319.14-343.12" *) _0341_[1] : 1'h0;
  assign _0324_ = exe_is_branch_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:319.18-319.33|./core/bpu.v:319.14-343.12" *) _0340_ : 6'hxx;
  assign _0323_[1] = exe_is_branch_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:319.18-319.33|./core/bpu.v:319.14-343.12" *) _0339_[1] : 1'h0;
  assign _0322_ = exe_is_branch_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:319.18-319.33|./core/bpu.v:319.14-343.12" *) _0338_ : 6'hxx;
  assign _0321_[1] = exe_is_branch_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:319.18-319.33|./core/bpu.v:319.14-343.12" *) _0337_[1] : 1'h0;
  assign _0320_ = exe_is_branch_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:319.18-319.33|./core/bpu.v:319.14-343.12" *) _0336_ : 6'hxx;
  assign _0301_ = we ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:315.13-315.15|./core/bpu.v:315.9-343.12" *) { branch_taken_i, branch_taken_i } : 2'hx;
  assign _0318_[1] = we ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:315.13-315.15|./core/bpu.v:315.9-343.12" *) 1'h0 : _0335_[1];
  assign _0317_ = we ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:315.13-315.15|./core/bpu.v:315.9-343.12" *) 6'hxx : _0334_;
  assign _0316_[1] = we ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:315.13-315.15|./core/bpu.v:315.9-343.12" *) 1'h0 : _0333_[1];
  assign _0315_ = we ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:315.13-315.15|./core/bpu.v:315.9-343.12" *) 6'hxx : _0332_;
  assign _0314_[1] = we ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:315.13-315.15|./core/bpu.v:315.9-343.12" *) 1'h0 : _0331_[1];
  assign _0313_ = we ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:315.13-315.15|./core/bpu.v:315.9-343.12" *) 6'hxx : _0330_;
  assign _0312_[1] = we ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:315.13-315.15|./core/bpu.v:315.9-343.12" *) 1'h0 : _0329_[1];
  assign _0311_ = we ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:315.13-315.15|./core/bpu.v:315.9-343.12" *) 6'hxx : _0328_;
  assign _0310_[1] = we ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:315.13-315.15|./core/bpu.v:315.9-343.12" *) 1'h0 : _0327_[1];
  assign _0309_ = we ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:315.13-315.15|./core/bpu.v:315.9-343.12" *) 6'hxx : _0326_;
  assign _0308_[1] = we ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:315.13-315.15|./core/bpu.v:315.9-343.12" *) 1'h0 : _0325_[1];
  assign _0307_ = we ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:315.13-315.15|./core/bpu.v:315.9-343.12" *) 6'hxx : _0324_;
  assign _0306_[1] = we ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:315.13-315.15|./core/bpu.v:315.9-343.12" *) 1'h0 : _0323_[1];
  assign _0305_ = we ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:315.13-315.15|./core/bpu.v:315.9-343.12" *) 6'hxx : _0322_;
  assign _0304_[1] = we ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:315.13-315.15|./core/bpu.v:315.9-343.12" *) 1'h0 : _0321_[1];
  assign _0303_ = we ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:315.13-315.15|./core/bpu.v:315.9-343.12" *) 6'hxx : _0320_;
  assign _0215_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0559_ : 2'hx;
  assign _0214_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0558_ : 2'hx;
  assign _0213_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0557_ : 2'hx;
  assign _0212_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0556_ : 2'hx;
  assign _0211_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0555_ : 2'hx;
  assign _0210_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0554_ : 2'hx;
  assign _0209_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0553_ : 2'hx;
  assign _0208_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0552_ : 2'hx;
  assign _0207_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0551_ : 2'hx;
  assign _0206_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0550_ : 2'hx;
  assign _0205_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0549_ : 2'hx;
  assign _0204_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0548_ : 2'hx;
  assign _0203_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0547_ : 2'hx;
  assign _0202_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0546_ : 2'hx;
  assign _0201_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0545_ : 2'hx;
  assign _0200_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0544_ : 2'hx;
  assign _0199_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0543_ : 2'hx;
  assign _0198_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0542_ : 2'hx;
  assign _0197_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0541_ : 2'hx;
  assign _0196_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0540_ : 2'hx;
  assign _0195_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0539_ : 2'hx;
  assign _0194_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0538_ : 2'hx;
  assign _0193_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0537_ : 2'hx;
  assign _0192_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0536_ : 2'hx;
  assign _0191_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0535_ : 2'hx;
  assign _0190_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0534_ : 2'hx;
  assign _0189_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0533_ : 2'hx;
  assign _0188_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0532_ : 2'hx;
  assign _0187_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0531_ : 2'hx;
  assign _0186_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0530_ : 2'hx;
  assign _0185_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0529_ : 2'hx;
  assign _0184_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0528_ : 2'hx;
  assign _0183_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0527_ : 2'hx;
  assign _0182_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0526_ : 2'hx;
  assign _0181_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0525_ : 2'hx;
  assign _0180_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0524_ : 2'hx;
  assign _0179_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0523_ : 2'hx;
  assign _0178_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0522_ : 2'hx;
  assign _0177_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0521_ : 2'hx;
  assign _0176_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0520_ : 2'hx;
  assign _0175_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0519_ : 2'hx;
  assign _0174_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0518_ : 2'hx;
  assign _0173_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0517_ : 2'hx;
  assign _0172_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0516_ : 2'hx;
  assign _0171_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0515_ : 2'hx;
  assign _0170_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0514_ : 2'hx;
  assign _0169_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0513_ : 2'hx;
  assign _0168_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0512_ : 2'hx;
  assign _0167_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0511_ : 2'hx;
  assign _0166_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0510_ : 2'hx;
  assign _0165_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0509_ : 2'hx;
  assign _0164_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0508_ : 2'hx;
  assign _0163_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0507_ : 2'hx;
  assign _0162_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0506_ : 2'hx;
  assign _0161_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0505_ : 2'hx;
  assign _0160_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0504_ : 2'hx;
  assign _0159_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0503_ : 2'hx;
  assign _0158_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0502_ : 2'hx;
  assign _0157_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0501_ : 2'hx;
  assign _0156_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0500_ : 2'hx;
  assign _0155_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0499_ : 2'hx;
  assign _0154_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0498_ : 2'hx;
  assign _0153_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0497_ : 2'hx;
  assign _0151_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) _0496_ : 2'hx;
  assign _0234_[1] = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) 1'h0 : _0318_[1];
  assign _0233_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) 6'hxx : _0317_;
  assign _0232_[1] = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) 1'h0 : _0316_[1];
  assign _0231_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) 6'hxx : _0315_;
  assign _0230_[1] = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) 1'h0 : _0314_[1];
  assign _0229_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) 6'hxx : _0313_;
  assign _0228_[1] = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) 1'h0 : _0312_[1];
  assign _0227_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) 6'hxx : _0311_;
  assign _0226_[1] = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) 1'h0 : _0310_[1];
  assign _0225_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) 6'hxx : _0309_;
  assign _0224_[1] = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) 1'h0 : _0308_[1];
  assign _0223_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) 6'hxx : _0307_;
  assign _0222_[1] = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) 1'h0 : _0306_[1];
  assign _0221_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) 6'hxx : _0305_;
  assign _0220_[1] = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) 1'h0 : _0304_[1];
  assign _0219_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) 6'hxx : _0303_;
  assign _0217_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:308.14-308.21|./core/bpu.v:308.10-344.8" *) 2'hx : _0301_;
  assign _0085_[1] = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 1'h0 : _0234_[1];
  assign _0084_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 6'hxx : _0233_;
  assign _0083_[1] = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 1'h0 : _0232_[1];
  assign _0082_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 6'hxx : _0231_;
  assign _0081_[1] = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 1'h0 : _0230_[1];
  assign _0080_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 6'hxx : _0229_;
  assign _0079_[1] = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 1'h0 : _0228_[1];
  assign _0078_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 6'hxx : _0227_;
  assign _0077_[1] = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 1'h0 : _0226_[1];
  assign _0076_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 6'hxx : _0225_;
  assign _0075_[1] = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 1'h0 : _0224_[1];
  assign _0074_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 6'hxx : _0223_;
  assign _0073_[1] = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 1'h0 : _0222_[1];
  assign _0072_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 6'hxx : _0221_;
  assign _0071_[1] = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 1'h0 : _0220_[1];
  assign _0070_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 6'hxx : _0219_;
  assign _0068_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0217_;
  assign _0066_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0215_;
  assign _0065_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0214_;
  assign _0064_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0213_;
  assign _0063_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0212_;
  assign _0062_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0211_;
  assign _0061_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0210_;
  assign _0060_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0209_;
  assign _0059_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0208_;
  assign _0058_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0207_;
  assign _0057_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0206_;
  assign _0056_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0205_;
  assign _0055_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0204_;
  assign _0054_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0203_;
  assign _0053_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0202_;
  assign _0052_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0201_;
  assign _0051_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0200_;
  assign _0050_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0199_;
  assign _0049_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0198_;
  assign _0048_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0197_;
  assign _0047_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0196_;
  assign _0046_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0195_;
  assign _0045_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0194_;
  assign _0044_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0193_;
  assign _0043_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0192_;
  assign _0042_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0191_;
  assign _0041_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0190_;
  assign _0040_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0189_;
  assign _0039_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0188_;
  assign _0038_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0187_;
  assign _0037_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0186_;
  assign _0036_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0185_;
  assign _0035_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0184_;
  assign _0034_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0183_;
  assign _0033_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0182_;
  assign _0032_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0181_;
  assign _0031_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0180_;
  assign _0030_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0179_;
  assign _0029_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0178_;
  assign _0028_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0177_;
  assign _0027_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0176_;
  assign _0026_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0175_;
  assign _0025_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0174_;
  assign _0024_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0173_;
  assign _0023_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0172_;
  assign _0022_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0171_;
  assign _0021_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0170_;
  assign _0020_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0169_;
  assign _0019_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0168_;
  assign _0018_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0167_;
  assign _0017_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0166_;
  assign _0016_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0165_;
  assign _0015_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0164_;
  assign _0014_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0163_;
  assign _0013_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0162_;
  assign _0012_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0161_;
  assign _0011_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0160_;
  assign _0010_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0159_;
  assign _0009_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0158_;
  assign _0008_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0157_;
  assign _0007_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0156_;
  assign _0006_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0155_;
  assign _0005_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0154_;
  assign _0004_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0153_;
  assign _0002_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:303.9-303.14|./core/bpu.v:303.5-344.8" *) 2'hx : _0151_;
  assign _0302_[1] = we ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:295.14-295.16|./core/bpu.v:295.10-298.8" *) 1'h1 : 1'h0;
  assign _0319_ = we ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:295.14-295.16|./core/bpu.v:295.10-298.8" *) dec_pc_i : 32'hxxxxxxxx;
  assign _0300_ = we ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:295.14-295.16|./core/bpu.v:295.10-298.8" *) write_addr : 6'hxx;
  assign _0298_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0624_ : 32'hxxxxxxxx;
  assign _0297_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0623_ : 32'hxxxxxxxx;
  assign _0296_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0622_ : 32'hxxxxxxxx;
  assign _0295_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0621_ : 32'hxxxxxxxx;
  assign _0294_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0620_ : 32'hxxxxxxxx;
  assign _0293_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0619_ : 32'hxxxxxxxx;
  assign _0292_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0618_ : 32'hxxxxxxxx;
  assign _0291_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0617_ : 32'hxxxxxxxx;
  assign _0290_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0616_ : 32'hxxxxxxxx;
  assign _0289_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0615_ : 32'hxxxxxxxx;
  assign _0288_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0614_ : 32'hxxxxxxxx;
  assign _0287_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0613_ : 32'hxxxxxxxx;
  assign _0286_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0612_ : 32'hxxxxxxxx;
  assign _0285_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0611_ : 32'hxxxxxxxx;
  assign _0284_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0610_ : 32'hxxxxxxxx;
  assign _0283_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0609_ : 32'hxxxxxxxx;
  assign _0282_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0608_ : 32'hxxxxxxxx;
  assign _0281_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0607_ : 32'hxxxxxxxx;
  assign _0280_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0606_ : 32'hxxxxxxxx;
  assign _0279_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0605_ : 32'hxxxxxxxx;
  assign _0278_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0604_ : 32'hxxxxxxxx;
  assign _0277_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0603_ : 32'hxxxxxxxx;
  assign _0276_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0602_ : 32'hxxxxxxxx;
  assign _0275_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0601_ : 32'hxxxxxxxx;
  assign _0274_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0600_ : 32'hxxxxxxxx;
  assign _0273_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0599_ : 32'hxxxxxxxx;
  assign _0272_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0598_ : 32'hxxxxxxxx;
  assign _0271_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0597_ : 32'hxxxxxxxx;
  assign _0270_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0596_ : 32'hxxxxxxxx;
  assign _0269_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0595_ : 32'hxxxxxxxx;
  assign _0268_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0594_ : 32'hxxxxxxxx;
  assign _0267_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0593_ : 32'hxxxxxxxx;
  assign _0266_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0592_ : 32'hxxxxxxxx;
  assign _0265_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0591_ : 32'hxxxxxxxx;
  assign _0264_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0590_ : 32'hxxxxxxxx;
  assign _0263_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0589_ : 32'hxxxxxxxx;
  assign _0262_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0588_ : 32'hxxxxxxxx;
  assign _0261_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0587_ : 32'hxxxxxxxx;
  assign _0260_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0586_ : 32'hxxxxxxxx;
  assign _0259_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0585_ : 32'hxxxxxxxx;
  assign _0258_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0584_ : 32'hxxxxxxxx;
  assign _0257_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0583_ : 32'hxxxxxxxx;
  assign _0256_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0582_ : 32'hxxxxxxxx;
  assign _0255_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0581_ : 32'hxxxxxxxx;
  assign _0254_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0580_ : 32'hxxxxxxxx;
  assign _0253_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0579_ : 32'hxxxxxxxx;
  assign _0252_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0578_ : 32'hxxxxxxxx;
  assign _0251_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0577_ : 32'hxxxxxxxx;
  assign _0250_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0576_ : 32'hxxxxxxxx;
  assign _0249_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0575_ : 32'hxxxxxxxx;
  assign _0248_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0574_ : 32'hxxxxxxxx;
  assign _0247_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0573_ : 32'hxxxxxxxx;
  assign _0246_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0572_ : 32'hxxxxxxxx;
  assign _0245_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0571_ : 32'hxxxxxxxx;
  assign _0244_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0570_ : 32'hxxxxxxxx;
  assign _0243_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0569_ : 32'hxxxxxxxx;
  assign _0242_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0568_ : 32'hxxxxxxxx;
  assign _0241_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0567_ : 32'hxxxxxxxx;
  assign _0240_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0566_ : 32'hxxxxxxxx;
  assign _0239_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0565_ : 32'hxxxxxxxx;
  assign _0238_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0564_ : 32'hxxxxxxxx;
  assign _0237_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0563_ : 32'hxxxxxxxx;
  assign _0236_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0562_ : 32'hxxxxxxxx;
  assign _0152_[1] = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) 1'h1 : 1'h0;
  assign _0235_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) _0561_ : 32'hxxxxxxxx;
  assign _0218_[1] = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) 1'h0 : _0302_[1];
  assign _0299_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) 32'hxxxxxxxx : _0319_;
  assign _0216_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:290.14-290.21|./core/bpu.v:290.10-298.8" *) 6'hxx : _0300_;
  assign _0001_[1] = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 1'h1 : 1'h0;
  assign _0069_[1] = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 1'h0 : _0218_[1];
  assign _0150_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0299_;
  assign _0067_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 6'hxx : _0216_;
  assign _0149_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0298_;
  assign _0148_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0297_;
  assign _0147_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0296_;
  assign _0146_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0295_;
  assign _0145_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0294_;
  assign _0144_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0293_;
  assign _0143_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0292_;
  assign _0142_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0291_;
  assign _0141_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0290_;
  assign _0140_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0289_;
  assign _0139_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0288_;
  assign _0138_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0287_;
  assign _0137_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0286_;
  assign _0136_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0285_;
  assign _0135_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0284_;
  assign _0134_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0283_;
  assign _0133_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0282_;
  assign _0132_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0281_;
  assign _0131_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0280_;
  assign _0130_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0279_;
  assign _0129_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0278_;
  assign _0128_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0277_;
  assign _0127_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0276_;
  assign _0126_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0275_;
  assign _0125_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0274_;
  assign _0124_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0273_;
  assign _0123_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0272_;
  assign _0122_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0271_;
  assign _0121_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0270_;
  assign _0120_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0269_;
  assign _0119_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0268_;
  assign _0118_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0267_;
  assign _0117_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0266_;
  assign _0116_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0265_;
  assign _0115_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0264_;
  assign _0114_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0263_;
  assign _0113_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0262_;
  assign _0112_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0261_;
  assign _0111_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0260_;
  assign _0110_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0259_;
  assign _0109_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0258_;
  assign _0108_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0257_;
  assign _0107_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0256_;
  assign _0106_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0255_;
  assign _0105_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0254_;
  assign _0104_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0253_;
  assign _0103_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0252_;
  assign _0102_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0251_;
  assign _0101_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0250_;
  assign _0100_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0249_;
  assign _0099_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0248_;
  assign _0098_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0247_;
  assign _0097_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0246_;
  assign _0003_[1] = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 1'h0 : _0152_[1];
  assign _0096_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0245_;
  assign _0095_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0244_;
  assign _0094_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0243_;
  assign _0093_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0242_;
  assign _0092_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0241_;
  assign _0091_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0240_;
  assign _0090_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0239_;
  assign _0089_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0238_;
  assign _0088_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0237_;
  assign _0087_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0236_;
  assign _0086_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/bpu.v:285.9-285.14|./core/bpu.v:285.5-298.8" *) 32'hxxxxxxxx : _0235_;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9591__WIRE_procmux6785_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h8000000000000000;
  assign _0627_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h4000000000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9593__WIRE_procmux6787_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h2000000000000000;
  assign _0628_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h1000000000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9599__WIRE_procmux6789_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0800000000000000;
  assign _0629_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0400000000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9601__WIRE_procmux6791_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0200000000000000;
  assign _0630_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0100000000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9611__WIRE_procmux6793_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0080000000000000;
  assign _0631_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0040000000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9613__WIRE_procmux6795_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0020000000000000;
  assign _0632_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0010000000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9619__WIRE_procmux6797_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0008000000000000;
  assign _0633_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0004000000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9621__WIRE_procmux6799_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0002000000000000;
  assign _0634_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0001000000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9635__WIRE_procmux6801_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000800000000000;
  assign _0635_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000400000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9637__WIRE_procmux6803_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000200000000000;
  assign _0636_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000100000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9643__WIRE_procmux6805_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000080000000000;
  assign _0637_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000040000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9645__WIRE_procmux6807_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000020000000000;
  assign _0638_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000010000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9655__WIRE_procmux6809_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000008000000000;
  assign _0639_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000004000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9657__WIRE_procmux6811_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000002000000000;
  assign _0640_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000001000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9663__WIRE_procmux6813_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000800000000;
  assign _0641_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000400000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9665__WIRE_procmux6815_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000200000000;
  assign _0642_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000100000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9683__WIRE_procmux6817_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000080000000;
  assign _0643_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000040000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9685__WIRE_procmux6819_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000020000000;
  assign _0644_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000010000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9691__WIRE_procmux6821_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000008000000;
  assign _0645_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000004000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9693__WIRE_procmux6823_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000002000000;
  assign _0646_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000001000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9703__WIRE_procmux6825_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000000800000;
  assign _0647_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000000400000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9705__WIRE_procmux6827_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000000200000;
  assign _0648_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000000100000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9711__WIRE_procmux6829_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000000080000;
  assign _0649_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000000040000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9713__WIRE_procmux6831_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000000020000;
  assign _0650_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000000010000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9727__WIRE_procmux6833_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000000008000;
  assign _0651_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000000004000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9729__WIRE_procmux6835_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000000002000;
  assign _0652_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000000001000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9735__WIRE_procmux6837_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000000000800;
  assign _0653_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000000000400;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9737__WIRE_procmux6839_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000000000200;
  assign _0654_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000000000100;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9747__WIRE_procmux6841_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000000000080;
  assign _0655_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000000000040;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9749__WIRE_procmux6843_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000000000020;
  assign _0656_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000000000010;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9755__WIRE_procmux6845_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000000000008;
  assign _0657_ = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000000000004;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9757__WIRE_procmux6847_CMP = addr_hit_DEC == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:214.5-279.12" *) 64'h0000000000000002;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9399__WIRE_procmux6850_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h8000000000000000;
  assign _0658_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h4000000000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9401__WIRE_procmux6852_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h2000000000000000;
  assign _0659_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h1000000000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9407__WIRE_procmux6854_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0800000000000000;
  assign _0660_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0400000000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9409__WIRE_procmux6856_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0200000000000000;
  assign _0661_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0100000000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9419__WIRE_procmux6858_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0080000000000000;
  assign _0662_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0040000000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9421__WIRE_procmux6860_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0020000000000000;
  assign _0663_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0010000000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9427__WIRE_procmux6862_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0008000000000000;
  assign _0664_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0004000000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9429__WIRE_procmux6864_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0002000000000000;
  assign _0665_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0001000000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9443__WIRE_procmux6866_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000800000000000;
  assign _0666_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000400000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9445__WIRE_procmux6868_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000200000000000;
  assign _0667_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000100000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9451__WIRE_procmux6870_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000080000000000;
  assign _0668_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000040000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9453__WIRE_procmux6872_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000020000000000;
  assign _0669_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000010000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9463__WIRE_procmux6874_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000008000000000;
  assign _0670_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000004000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9465__WIRE_procmux6876_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000002000000000;
  assign _0671_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000001000000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9471__WIRE_procmux6878_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000800000000;
  assign _0672_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000400000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9473__WIRE_procmux6880_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000200000000;
  assign _0673_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000100000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9491__WIRE_procmux6882_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000080000000;
  assign _0674_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000040000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9493__WIRE_procmux6884_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000020000000;
  assign _0675_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000010000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9499__WIRE_procmux6886_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000008000000;
  assign _0676_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000004000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9501__WIRE_procmux6888_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000002000000;
  assign _0677_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000001000000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9511__WIRE_procmux6890_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000000800000;
  assign _0678_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000000400000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9513__WIRE_procmux6892_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000000200000;
  assign _0679_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000000100000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9519__WIRE_procmux6894_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000000080000;
  assign _0680_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000000040000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9521__WIRE_procmux6896_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000000020000;
  assign _0681_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000000010000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9535__WIRE_procmux6898_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000000008000;
  assign _0682_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000000004000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9537__WIRE_procmux6900_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000000002000;
  assign _0683_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000000001000;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9543__WIRE_procmux6902_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000000000800;
  assign _0684_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000000000400;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9545__WIRE_procmux6904_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000000000200;
  assign _0685_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000000000100;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9555__WIRE_procmux6906_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000000000080;
  assign _0686_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000000000040;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9557__WIRE_procmux6908_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000000000020;
  assign _0687_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000000000010;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9563__WIRE_procmux6910_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000000000008;
  assign _0688_ = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000000000004;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9565__WIRE_procmux6912_CMP = addr_hit_PCU == (* full_case = 32'd1 *) (* src = "./core/bpu.v:0.0-0.0|./core/bpu.v:144.5-209.12" *) 64'h0000000000000002;
  assign _0689_ = | (* src = "./core/bpu.v:104.58-104.71" *) addr_hit_DEC;
  assign _0691_ = | (* src = "./core/bpu.v:363.45-363.51" *) pc_i;
  assign _0690_ = | (* src = "./core/bpu.v:364.37-364.51" *) addr_hit_PCU;
  assign _0692_ = \__MUX_ternary/core/bpuv127835__WIRE_eq/core/bpuv127833_Y  ? (* src = "./core/bpu.v:127.23-127.75" *) 32'd0 : _0360_;
  (* module_not_derived = 32'd1 *)
  (* src = "./core/bpu.v:351.1-358.2" *)
  \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\distri_ram  bpu_pc_history (
    .__MUX_procmux8501__WIRE_we_i(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcdistri_ram-bpu_pc_history___MUX_procmux8501__WIRE_we_i ),
    .clk_i(clk_i),
    .data_i(branch_target_addr_i),
    .data_o(predicted_pc),
    .metaReset_paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcdistri_ram(metaReset_paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu),
    .read_addr_i(read_addr),
    .we_i(we),
    .write_addr_i(write_addr)
  );
  assign _0000_[1] = branch_decision_o;
  assign _0001_[0] = _0001_[1];
  assign _0003_[0] = _0003_[1];
  assign _0069_[0] = _0069_[1];
  assign _0071_[0] = _0071_[1];
  assign _0073_[0] = _0073_[1];
  assign _0075_[0] = _0075_[1];
  assign _0077_[0] = _0077_[1];
  assign _0079_[0] = _0079_[1];
  assign _0081_[0] = _0081_[1];
  assign _0083_[0] = _0083_[1];
  assign _0085_[0] = _0085_[1];
  assign _0152_[0] = _0152_[1];
  assign _0218_[0] = _0218_[1];
  assign _0220_[0] = _0220_[1];
  assign _0222_[0] = _0222_[1];
  assign _0224_[0] = _0224_[1];
  assign _0226_[0] = _0226_[1];
  assign _0228_[0] = _0228_[1];
  assign _0230_[0] = _0230_[1];
  assign _0232_[0] = _0232_[1];
  assign _0234_[0] = _0234_[1];
  assign _0302_[0] = _0302_[1];
  assign _0304_[0] = _0304_[1];
  assign _0306_[0] = _0306_[1];
  assign _0308_[0] = _0308_[1];
  assign _0310_[0] = _0310_[1];
  assign _0312_[0] = _0312_[1];
  assign _0314_[0] = _0314_[1];
  assign _0316_[0] = _0316_[1];
  assign _0318_[0] = _0318_[1];
  assign _0321_[0] = _0321_[1];
  assign _0323_[0] = _0323_[1];
  assign _0325_[0] = _0325_[1];
  assign _0327_[0] = _0327_[1];
  assign _0329_[0] = _0329_[1];
  assign _0331_[0] = _0331_[1];
  assign _0333_[0] = _0333_[1];
  assign _0335_[0] = _0335_[1];
  assign _0337_[0] = _0337_[1];
  assign _0339_[0] = _0339_[1];
  assign _0341_[0] = _0341_[1];
  assign _0343_[0] = _0343_[1];
  assign _0345_[0] = _0345_[1];
  assign _0347_[0] = _0347_[1];
  assign _0349_[0] = _0349_[1];
  assign _0351_[0] = _0351_[1];
  assign _0353_[0] = _0353_[1];
  assign _0355_[0] = _0355_[1];
  assign _0356_[0] = _0356_[1];
  assign _0357_[0] = _0357_[1];
  assign _0358_[0] = _0358_[1];
  assign _0359_[0] = _0359_[1];
  assign _0488_[0] = _0488_[1];
  assign _0489_[0] = _0489_[1];
  assign _0490_[0] = _0490_[1];
  assign _0491_[0] = _0491_[1];
  assign _0492_[0] = _0492_[1];
  assign _0493_[0] = _0493_[1];
  assign _0494_[0] = _0494_[1];
  assign _0495_[0] = _0495_[1];
  assign __MUX_procmux3154__WIRE_branch_taken_i = branch_taken_i;
  assign __MUX_procmux3490__WIRE_exe_is_branch_i = exe_is_branch_i;
  assign __MUX_procmux3691__WIRE_we = we;
  assign __MUX_procmux3865__WIRE_stall_i = stall_i;
  assign __MUX_procmux4936__WIRE_rst_i = rst_i;
endmodule

(* dynports =  1  *)
(* hdlname = "\\distri_ram" *)
(* src = "./core/distri_ram.v:56.1-88.10" *)
module \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\distri_ram (clk_i, we_i, read_addr_i, write_addr_i, data_i, data_o, __MUX_procmux8501__WIRE_we_i, metaReset_paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcdistri_ram);
  (* src = "./core/distri_ram.v:80.1-86.4" *)
  wire [5:0] _00_;
  (* src = "./core/distri_ram.v:80.1-86.4" *)
  wire [31:0] _01_;
  (* src = "./core/distri_ram.v:80.1-86.4" *)
  wire [31:0] _02_;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\distri_ram  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux8501__WIRE_we_i;
  wire __MUX_procmux8501__WIRE_we_i;
  (* src = "./core/distri_ram.v:61.26-61.31" *)
  input clk_i;
  wire clk_i;
  (* src = "./core/distri_ram.v:65.26-65.32" *)
  input [31:0] data_i;
  wire [31:0] data_i;
  (* src = "./core/distri_ram.v:66.26-66.32" *)
  output [31:0] data_o;
  wire [31:0] data_o;
  (* meta_reset = 32'd1 *)
  input metaReset_paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcdistri_ram;
  wire metaReset_paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcdistri_ram;
  (* src = "./core/distri_ram.v:63.26-63.37" *)
  input [5:0] read_addr_i;
  wire [5:0] read_addr_i;
  (* src = "./core/distri_ram.v:62.26-62.30" *)
  input we_i;
  wire we_i;
  (* src = "./core/distri_ram.v:64.26-64.38" *)
  input [5:0] write_addr_i;
  wire [5:0] write_addr_i;
  (* src = "./core/distri_ram.v:69.18-69.21" *)
  reg [31:0] RAM [63:0];
  initial begin
    RAM[0] = 32'd0;
    RAM[1] = 32'd0;
    RAM[2] = 32'd0;
    RAM[3] = 32'd0;
    RAM[4] = 32'd0;
    RAM[5] = 32'd0;
    RAM[6] = 32'd0;
    RAM[7] = 32'd0;
    RAM[8] = 32'd0;
    RAM[9] = 32'd0;
    RAM[10] = 32'd0;
    RAM[11] = 32'd0;
    RAM[12] = 32'd0;
    RAM[13] = 32'd0;
    RAM[14] = 32'd0;
    RAM[15] = 32'd0;
    RAM[16] = 32'd0;
    RAM[17] = 32'd0;
    RAM[18] = 32'd0;
    RAM[19] = 32'd0;
    RAM[20] = 32'd0;
    RAM[21] = 32'd0;
    RAM[22] = 32'd0;
    RAM[23] = 32'd0;
    RAM[24] = 32'd0;
    RAM[25] = 32'd0;
    RAM[26] = 32'd0;
    RAM[27] = 32'd0;
    RAM[28] = 32'd0;
    RAM[29] = 32'd0;
    RAM[30] = 32'd0;
    RAM[31] = 32'd0;
    RAM[32] = 32'd0;
    RAM[33] = 32'd0;
    RAM[34] = 32'd0;
    RAM[35] = 32'd0;
    RAM[36] = 32'd0;
    RAM[37] = 32'd0;
    RAM[38] = 32'd0;
    RAM[39] = 32'd0;
    RAM[40] = 32'd0;
    RAM[41] = 32'd0;
    RAM[42] = 32'd0;
    RAM[43] = 32'd0;
    RAM[44] = 32'd0;
    RAM[45] = 32'd0;
    RAM[46] = 32'd0;
    RAM[47] = 32'd0;
    RAM[48] = 32'd0;
    RAM[49] = 32'd0;
    RAM[50] = 32'd0;
    RAM[51] = 32'd0;
    RAM[52] = 32'd0;
    RAM[53] = 32'd0;
    RAM[54] = 32'd0;
    RAM[55] = 32'd0;
    RAM[56] = 32'd0;
    RAM[57] = 32'd0;
    RAM[58] = 32'd0;
    RAM[59] = 32'd0;
    RAM[60] = 32'd0;
    RAM[61] = 32'd0;
    RAM[62] = 32'd0;
    RAM[63] = 32'd0;
  end
  always_ff @(posedge clk_i) begin
    if (_02_[31])
      RAM[_00_] <= _01_;
  end
  assign data_o = RAM[read_addr_i];
  assign _02_[31] = we_i ? (* full_case = 32'd1 *) (* src = "./core/distri_ram.v:82.9-82.13|./core/distri_ram.v:82.5-85.8" *) 1'h1 : 1'h0;
  assign _01_ = we_i ? (* full_case = 32'd1 *) (* src = "./core/distri_ram.v:82.9-82.13|./core/distri_ram.v:82.5-85.8" *) data_i : 32'hxxxxxxxx;
  assign _00_ = we_i ? (* full_case = 32'd1 *) (* src = "./core/distri_ram.v:82.9-82.13|./core/distri_ram.v:82.5-85.8" *) write_addr_i : 6'hxx;
  assign __MUX_procmux8501__WIRE_we_i = we_i;
  assign _02_[30:0] = { _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31], _02_[31] };
endmodule

(* dynports =  1  *)
(* hdlname = "\\csr_file" *)
(* src = "./core/csr_file.v:68.1-985.10" *)
module \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000 (clk_i, rst_i, csr_raddr_i, csr_data_o, csr_we_i, csr_waddr_i, csr_wdata_i, ext_irq_i, tmr_irq_i, sft_irq_i, irq_taken_o, pc_handler_o, nxt_unwb_PC_i, pc_i, sys_jump_i, sys_jump_csr_addr_i, sys_jump_o, sys_jump_csr_data_o, privilege_level_o, xcpt_valid_i, xcpt_cause_i
, xcpt_tval_i, __MUX_procmux8377__WIRE_sys_jump_i, \__MUX_procmux8367__WIRE_eq/core/csr_filev35258_Y , \__MUX_procmux8364__WIRE_eq/core/csr_filev35659_Y , \__MUX_procmux8354__WIRE_logic_and/core/csr_filev37762_Y , \__MUX_procmux8335__WIRE_logic_and/core/csr_filev46076_Y , \__MUX_procmux8327__WIRE_logic_and/core/csr_filev48479_Y , \__MUX_procmux8325__WIRE_logic_and/core/csr_filev45674_Y , \__MUX_procmux8313__WIRE_logic_and/core/csr_filev51584_Y , \__MUX_procmux8308__WIRE_logic_and/core/csr_filev52599_Y , __MUX_procmux8291__WIRE_procmux8292_CMP, __MUX_procmux8283__WIRE_csr_we_i, __MUX_procmux8281__WIRE_procmux8282_CMP, \__MUX_procmux8256__WIRE_logic_and/core/csr_filev692121_Y , \__MUX_procmux8248__WIRE_logic_and/core/csr_filev716124_Y , \__MUX_procmux8246__WIRE_logic_and/core/csr_filev688119_Y , \__MUX_procmux8240__WIRE_logic_and/core/csr_filev740130_Y , \__MUX_procmux8238__WIRE_logic_or/core/csr_filev51797_Y , \__MUX_procmux8235__WIRE_logic_and/core/csr_filev750145_Y , __MUX_procmux8188__WIRE_xcpt_valid_i, \__MUX_procmux8164__WIRE_eq/core/csr_filev912154_Y 
, __MUX_procmux8132__WIRE_mstatus_r, \__MUX_procmux8091__WIRE_and/core/csr_filev880151_Y , \__MUX_procmux8040__WIRE_and/core/csr_filev886152_Y , \__MUX_procmux7981__WIRE_and/core/csr_filev892153_Y , __MUX_procmux7973__WIRE_trap_to_M, \__MUX_procmux7968__WIRE_logic_or/core/csr_filev925162_Y , \__MUX_procmux7961__WIRE_eq/core/csr_filev925160_Y , __MUX_procmux7955__WIRE_is_mret, __MUX_procmux7952__WIRE_is_sret, __MUX_procmux7949__WIRE_irq_taken_o, __MUX_autopmuxtreecc65recursive_mux_generator9999__WIRE_procmux8199_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9997__WIRE_procmux8195_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9995__WIRE_procmux8196_CMP, __MUX_autopmuxtreecc65recursive_mux_generator10053__WIRE_autortlilcc2403ReduceOr10052, __MUX_autopmuxtreecc65recursive_mux_generator10049__WIRE_autortlilcc2403ReduceOr10048, __MUX_autopmuxtreecc65recursive_mux_generator10045__WIRE_autortlilcc2403ReduceOr10044, __MUX_autopmuxtreecc65recursive_mux_generator10041__WIRE_procmux8216_CMP, __MUX_autopmuxtreecc65recursive_mux_generator10039__WIRE_procmux8217_CMP, __MUX_autopmuxtreecc65recursive_mux_generator10037__WIRE_procmux8213_CMP, __MUX_autopmuxtreecc65recursive_mux_generator10035__WIRE_procmux8214_CMP, __MUX_autopmuxtreecc65recursive_mux_generator10033__WIRE_autortlilcc2403ReduceOr10032
, __MUX_autopmuxtreecc65recursive_mux_generator10029__WIRE_procmux8210_CMP, __MUX_autopmuxtreecc65recursive_mux_generator10027__WIRE_procmux8211_CMP, __MUX_autopmuxtreecc65recursive_mux_generator10025__WIRE_procmux8207_CMP, __MUX_autopmuxtreecc65recursive_mux_generator10023__WIRE_procmux8208_CMP, __MUX_autopmuxtreecc65recursive_mux_generator10021__WIRE_autortlilcc2403ReduceOr10020, __MUX_autopmuxtreecc65recursive_mux_generator10017__WIRE_autortlilcc2403ReduceOr10016, __MUX_autopmuxtreecc65recursive_mux_generator10013__WIRE_procmux8204_CMP, __MUX_autopmuxtreecc65recursive_mux_generator10011__WIRE_procmux8205_CMP, __MUX_autopmuxtreecc65recursive_mux_generator10009__WIRE_procmux8201_CMP, __MUX_autopmuxtreecc65recursive_mux_generator10007__WIRE_procmux8202_CMP, __MUX_autopmuxtreecc65recursive_mux_generator10005__WIRE_autortlilcc2403ReduceOr10004, __MUX_autopmuxtreecc65recursive_mux_generator10001__WIRE_procmux8198_CMP, \metaReset_paramodcsr_fileHART_ID=s32'00000000000000000000000000000000 );
  (* src = "./core/csr_file.v:869.1-914.4" *)
  wire _000_;
  (* src = "./core/csr_file.v:490.1-498.4" *)
  wire [31:0] _001_;
  (* src = "./core/csr_file.v:921.1-945.4" *)
  wire [31:0] _002_;
  (* src = "./core/csr_file.v:869.1-914.4" *)
  wire [3:0] _003_;
  (* src = "./core/csr_file.v:869.1-914.4" *)
  wire _004_;
  (* src = "./core/csr_file.v:921.1-945.4" *)
  wire [31:0] _005_;
  (* src = "./core/csr_file.v:869.1-914.4" *)
  wire [3:0] _006_;
  (* src = "./core/csr_file.v:869.1-914.4" *)
  wire _007_;
  (* src = "./core/csr_file.v:869.1-914.4" *)
  wire [3:0] _008_;
  (* src = "./core/csr_file.v:869.1-914.4" *)
  wire _009_;
  (* src = "./core/csr_file.v:869.1-914.4" *)
  wire [3:0] _010_;
  (* src = "./core/csr_file.v:869.1-914.4" *)
  wire _011_;
  (* src = "./core/csr_file.v:583.21-583.33" *)
  wire [63:0] _012_;
  (* src = "./core/csr_file.v:931.26-931.61" *)
  wire [31:0] _013_;
  (* src = "./core/csr_file.v:942.26-942.61" *)
  wire [31:0] _014_;
  (* src = "./core/csr_file.v:407.18-407.84" *)
  wire [31:0] _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire [31:0] _049_;
  wire [31:0] _050_;
  wire [31:0] _051_;
  wire [31:0] _052_;
  wire [31:0] _053_;
  wire [31:0] _054_;
  wire [31:0] _055_;
  wire [31:0] _056_;
  wire [31:0] _057_;
  wire [31:0] _058_;
  wire [31:0] _059_;
  wire [31:0] _060_;
  wire [31:0] _061_;
  wire [31:0] _062_;
  wire [31:0] _063_;
  wire [31:0] _064_;
  wire [31:0] _065_;
  wire [31:0] _066_;
  wire [31:0] _067_;
  wire [31:0] _068_;
  wire [31:0] _069_;
  wire [31:0] _070_;
  (* src = "./core/csr_file.v:377.26-377.48" *)
  wire _071_;
  (* src = "./core/csr_file.v:426.26-426.48" *)
  wire _072_;
  (* src = "./core/csr_file.v:441.26-441.48" *)
  wire _073_;
  (* src = "./core/csr_file.v:460.26-460.48" *)
  wire _074_;
  (* src = "./core/csr_file.v:484.26-484.48" *)
  wire _075_;
  (* src = "./core/csr_file.v:520.14-520.34" *)
  wire _076_;
  (* src = "./core/csr_file.v:525.26-525.48" *)
  wire _077_;
  (* src = "./core/csr_file.v:541.26-541.48" *)
  wire _078_;
  (* src = "./core/csr_file.v:637.26-637.48" *)
  wire _079_;
  (* src = "./core/csr_file.v:658.26-658.48" *)
  wire _080_;
  (* src = "./core/csr_file.v:673.26-673.48" *)
  wire _081_;
  (* src = "./core/csr_file.v:692.26-692.48" *)
  wire _082_;
  (* src = "./core/csr_file.v:716.26-716.48" *)
  wire _083_;
  (* src = "./core/csr_file.v:750.26-750.48" *)
  wire _084_;
  (* src = "./core/csr_file.v:912.53-912.77" *)
  wire [31:0] _085_;
  (* src = "./core/csr_file.v:517.14-517.33" *)
  wire _086_;
  (* src = "./core/csr_file.v:518.14-518.33" *)
  wire _087_;
  (* src = "./core/csr_file.v:519.14-519.34" *)
  wire _088_;
  (* src = "./core/csr_file.v:517.38-517.57" *)
  wire _089_;
  (* src = "./core/csr_file.v:518.38-518.57" *)
  wire _090_;
  (* src = "./core/csr_file.v:519.38-519.58" *)
  wire _091_;
  (* src = "./core/csr_file.v:426.14-426.48" *)
  wire _092_;
  (* src = "./core/csr_file.v:441.14-441.48" *)
  wire _093_;
  (* src = "./core/csr_file.v:517.14-517.57" *)
  wire _094_;
  (* src = "./core/csr_file.v:518.14-518.57" *)
  wire _095_;
  (* src = "./core/csr_file.v:519.14-519.58" *)
  wire _096_;
  (* src = "./core/csr_file.v:541.14-541.48" *)
  wire _097_;
  (* src = "./core/csr_file.v:637.14-637.48" *)
  wire _098_;
  (* src = "./core/csr_file.v:658.14-658.48" *)
  wire _099_;
  (* src = "./core/csr_file.v:673.14-673.48" *)
  wire _100_;
  (* src = "./core/csr_file.v:688.27-688.37" *)
  wire _101_;
  (* src = "./core/csr_file.v:925.39-925.52" *)
  wire _102_;
  (* src = "./core/csr_file.v:517.13-518.58" *)
  wire _103_;
  (* src = "./core/csr_file.v:517.13-519.59" *)
  wire _104_;
  (* src = "./core/csr_file.v:912.53-912.77" *)
  wire [31:0] _105_;
  wire [1:0] _106_;
  wire [1:0] _107_;
  wire [1:0] _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire [31:0] _116_;
  wire [31:0] _117_;
  wire [31:0] _118_;
  wire [31:0] _119_;
  wire [31:0] _120_;
  wire [31:0] _121_;
  wire [31:0] _122_;
  wire [31:0] _123_;
  wire [31:0] _124_;
  wire [31:0] _125_;
  wire [31:0] _126_;
  wire [31:0] _127_;
  wire [31:0] _128_;
  wire [31:0] _129_;
  wire [31:0] _130_;
  wire [31:0] _131_;
  wire [31:0] _132_;
  (* unused_bits = "2 3 6 7 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _133_;
  wire [31:0] _134_;
  wire [31:0] _135_;
  wire [31:0] _136_;
  wire [31:0] _137_;
  wire [31:0] _138_;
  wire [31:0] _139_;
  wire [31:0] _140_;
  wire [31:0] _141_;
  (* src = "./core/csr_file.v:912.21-912.77" *)
  (* unused_bits = "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _142_;
  (* src = "./core/csr_file.v:965.34-965.58" *)
  wire [1:0] _143_;
  (* src = "./core/csr_file.v:977.30-978.35" *)
  wire [31:0] _144_;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator10001__WIRE_procmux8198_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator10001__WIRE_procmux8198_CMP;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator10005__WIRE_autortlilcc2403ReduceOr10004;
  wire __MUX_autopmuxtreecc65recursive_mux_generator10005__WIRE_autortlilcc2403ReduceOr10004;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator10007__WIRE_procmux8202_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator10007__WIRE_procmux8202_CMP;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator10009__WIRE_procmux8201_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator10009__WIRE_procmux8201_CMP;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator10011__WIRE_procmux8205_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator10011__WIRE_procmux8205_CMP;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator10013__WIRE_procmux8204_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator10013__WIRE_procmux8204_CMP;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator10017__WIRE_autortlilcc2403ReduceOr10016;
  wire __MUX_autopmuxtreecc65recursive_mux_generator10017__WIRE_autortlilcc2403ReduceOr10016;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator10021__WIRE_autortlilcc2403ReduceOr10020;
  wire __MUX_autopmuxtreecc65recursive_mux_generator10021__WIRE_autortlilcc2403ReduceOr10020;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator10023__WIRE_procmux8208_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator10023__WIRE_procmux8208_CMP;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator10025__WIRE_procmux8207_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator10025__WIRE_procmux8207_CMP;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator10027__WIRE_procmux8211_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator10027__WIRE_procmux8211_CMP;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator10029__WIRE_procmux8210_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator10029__WIRE_procmux8210_CMP;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator10033__WIRE_autortlilcc2403ReduceOr10032;
  wire __MUX_autopmuxtreecc65recursive_mux_generator10033__WIRE_autortlilcc2403ReduceOr10032;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator10035__WIRE_procmux8214_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator10035__WIRE_procmux8214_CMP;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator10037__WIRE_procmux8213_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator10037__WIRE_procmux8213_CMP;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator10039__WIRE_procmux8217_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator10039__WIRE_procmux8217_CMP;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator10041__WIRE_procmux8216_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator10041__WIRE_procmux8216_CMP;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator10045__WIRE_autortlilcc2403ReduceOr10044;
  wire __MUX_autopmuxtreecc65recursive_mux_generator10045__WIRE_autortlilcc2403ReduceOr10044;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator10049__WIRE_autortlilcc2403ReduceOr10048;
  wire __MUX_autopmuxtreecc65recursive_mux_generator10049__WIRE_autortlilcc2403ReduceOr10048;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator10053__WIRE_autortlilcc2403ReduceOr10052;
  wire __MUX_autopmuxtreecc65recursive_mux_generator10053__WIRE_autortlilcc2403ReduceOr10052;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9995__WIRE_procmux8196_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9995__WIRE_procmux8196_CMP;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9997__WIRE_procmux8195_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9997__WIRE_procmux8195_CMP;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9999__WIRE_procmux8199_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9999__WIRE_procmux8199_CMP;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux7949__WIRE_irq_taken_o;
  wire __MUX_procmux7949__WIRE_irq_taken_o;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux7952__WIRE_is_sret;
  wire __MUX_procmux7952__WIRE_is_sret;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux7955__WIRE_is_mret;
  wire __MUX_procmux7955__WIRE_is_mret;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux7961__WIRE_eq/core/csr_filev925160_Y ;
  wire \__MUX_procmux7961__WIRE_eq/core/csr_filev925160_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux7968__WIRE_logic_or/core/csr_filev925162_Y ;
  wire \__MUX_procmux7968__WIRE_logic_or/core/csr_filev925162_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux7973__WIRE_trap_to_M;
  wire __MUX_procmux7973__WIRE_trap_to_M;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux7981__WIRE_and/core/csr_filev892153_Y ;
  wire \__MUX_procmux7981__WIRE_and/core/csr_filev892153_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux8040__WIRE_and/core/csr_filev886152_Y ;
  wire \__MUX_procmux8040__WIRE_and/core/csr_filev886152_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux8091__WIRE_and/core/csr_filev880151_Y ;
  wire \__MUX_procmux8091__WIRE_and/core/csr_filev880151_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux8132__WIRE_mstatus_r;
  wire __MUX_procmux8132__WIRE_mstatus_r;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux8164__WIRE_eq/core/csr_filev912154_Y ;
  wire \__MUX_procmux8164__WIRE_eq/core/csr_filev912154_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux8188__WIRE_xcpt_valid_i;
  wire __MUX_procmux8188__WIRE_xcpt_valid_i;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux8235__WIRE_logic_and/core/csr_filev750145_Y ;
  wire \__MUX_procmux8235__WIRE_logic_and/core/csr_filev750145_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux8238__WIRE_logic_or/core/csr_filev51797_Y ;
  wire \__MUX_procmux8238__WIRE_logic_or/core/csr_filev51797_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux8240__WIRE_logic_and/core/csr_filev740130_Y ;
  wire \__MUX_procmux8240__WIRE_logic_and/core/csr_filev740130_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux8246__WIRE_logic_and/core/csr_filev688119_Y ;
  wire \__MUX_procmux8246__WIRE_logic_and/core/csr_filev688119_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux8248__WIRE_logic_and/core/csr_filev716124_Y ;
  wire \__MUX_procmux8248__WIRE_logic_and/core/csr_filev716124_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux8256__WIRE_logic_and/core/csr_filev692121_Y ;
  wire \__MUX_procmux8256__WIRE_logic_and/core/csr_filev692121_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux8281__WIRE_procmux8282_CMP;
  wire __MUX_procmux8281__WIRE_procmux8282_CMP;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux8283__WIRE_csr_we_i;
  wire __MUX_procmux8283__WIRE_csr_we_i;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux8291__WIRE_procmux8292_CMP;
  wire __MUX_procmux8291__WIRE_procmux8292_CMP;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux8308__WIRE_logic_and/core/csr_filev52599_Y ;
  wire \__MUX_procmux8308__WIRE_logic_and/core/csr_filev52599_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux8313__WIRE_logic_and/core/csr_filev51584_Y ;
  wire \__MUX_procmux8313__WIRE_logic_and/core/csr_filev51584_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux8325__WIRE_logic_and/core/csr_filev45674_Y ;
  wire \__MUX_procmux8325__WIRE_logic_and/core/csr_filev45674_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux8327__WIRE_logic_and/core/csr_filev48479_Y ;
  wire \__MUX_procmux8327__WIRE_logic_and/core/csr_filev48479_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux8335__WIRE_logic_and/core/csr_filev46076_Y ;
  wire \__MUX_procmux8335__WIRE_logic_and/core/csr_filev46076_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux8354__WIRE_logic_and/core/csr_filev37762_Y ;
  wire \__MUX_procmux8354__WIRE_logic_and/core/csr_filev37762_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux8364__WIRE_eq/core/csr_filev35659_Y ;
  wire \__MUX_procmux8364__WIRE_eq/core/csr_filev35659_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux8367__WIRE_eq/core/csr_filev35258_Y ;
  wire \__MUX_procmux8367__WIRE_eq/core/csr_filev35258_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux8377__WIRE_sys_jump_i;
  wire __MUX_procmux8377__WIRE_sys_jump_i;
  (* src = "./core/csr_file.v:71.25-71.30" *)
  input clk_i;
  wire clk_i;
  (* src = "./core/csr_file.v:78.25-78.35" *)
  output [31:0] csr_data_o;
  wire [31:0] csr_data_o;
  (* src = "./core/csr_file.v:75.25-75.36" *)
  input [11:0] csr_raddr_i;
  wire [11:0] csr_raddr_i;
  (* src = "./core/csr_file.v:82.25-82.36" *)
  input [11:0] csr_waddr_i;
  wire [11:0] csr_waddr_i;
  (* src = "./core/csr_file.v:83.25-83.36" *)
  input [31:0] csr_wdata_i;
  wire [31:0] csr_wdata_i;
  (* src = "./core/csr_file.v:81.25-81.33" *)
  input csr_we_i;
  wire csr_we_i;
  (* src = "./core/csr_file.v:86.25-86.34" *)
  input ext_irq_i;
  wire ext_irq_i;
  (* src = "./core/csr_file.v:297.19-297.34" *)
  wire [3:0] interrupt_cause;
  (* src = "./core/csr_file.v:89.25-89.36" *)
  output irq_taken_o;
  wire irq_taken_o;
  (* src = "./core/csr_file.v:289.6-289.13" *)
  wire is_mret;
  (* src = "./core/csr_file.v:290.6-290.13" *)
  wire is_sret;
  (* src = "./core/csr_file.v:258.29-258.37" *)
  wire [31:0] mcause_d;
  (* src = "./core/csr_file.v:258.19-258.27" *)
  wire [31:0] mcause_r;
  (* src = "./core/csr_file.v:262.19-262.27" *)
  reg [63:0] mcycle_r;
  (* src = "./core/csr_file.v:260.19-260.28" *)
  reg [31:0] medeleg_r;
  (* src = "./core/csr_file.v:257.19-257.25" *)
  reg [31:0] mepc_r;
  (* meta_reset = 32'd1 *)
  input \metaReset_paramodcsr_fileHART_ID=s32'00000000000000000000000000000000 ;
  wire \metaReset_paramodcsr_fileHART_ID=s32'00000000000000000000000000000000 ;
  (* src = "./core/csr_file.v:253.19-253.24" *)
  reg [31:0] mie_r;
  (* src = "./core/csr_file.v:254.19-254.24" *)
  wire [31:0] mip_r;
  (* src = "./core/csr_file.v:256.19-256.29" *)
  reg [31:0] mscratch_r;
  (* src = "./core/csr_file.v:251.19-251.28" *)
  wire [31:0] mstatus_r;
  (* src = "./core/csr_file.v:259.19-259.26" *)
  reg [31:0] mtval_r;
  (* src = "./core/csr_file.v:255.19-255.26" *)
  reg [31:0] mtvec_r;
  (* src = "./core/csr_file.v:91.25-91.38" *)
  input [31:0] nxt_unwb_PC_i;
  wire [31:0] nxt_unwb_PC_i;
  (* src = "./core/csr_file.v:90.25-90.37" *)
  output [31:0] pc_handler_o;
  wire [31:0] pc_handler_o;
  (* src = "./core/csr_file.v:94.25-94.29" *)
  input [31:0] pc_i;
  wire [31:0] pc_i;
  (* src = "./core/csr_file.v:103.25-103.42" *)
  output [1:0] privilege_level_o;
  reg [1:0] privilege_level_o;
  (* src = "./core/csr_file.v:72.25-72.30" *)
  input rst_i;
  wire rst_i;
  (* src = "./core/csr_file.v:273.19-273.25" *)
  reg [31:0] satp_r;
  (* src = "./core/csr_file.v:277.29-277.37" *)
  wire [31:0] scause_d;
  (* src = "./core/csr_file.v:277.19-277.27" *)
  reg [31:0] scause_r;
  (* src = "./core/csr_file.v:276.19-276.25" *)
  reg [31:0] sepc_r;
  (* src = "./core/csr_file.v:88.25-88.34" *)
  input sft_irq_i;
  wire sft_irq_i;
  (* src = "./core/csr_file.v:275.19-275.29" *)
  reg [31:0] sscratch_r;
  (* src = "./core/csr_file.v:278.19-278.26" *)
  reg [31:0] stval_r;
  (* src = "./core/csr_file.v:274.19-274.26" *)
  reg [31:0] stvec_r;
  (* src = "./core/csr_file.v:98.25-98.44" *)
  input [1:0] sys_jump_csr_addr_i;
  wire [1:0] sys_jump_csr_addr_i;
  (* src = "./core/csr_file.v:100.25-100.44" *)
  output [31:0] sys_jump_csr_data_o;
  wire [31:0] sys_jump_csr_data_o;
  (* src = "./core/csr_file.v:97.25-97.35" *)
  input sys_jump_i;
  wire sys_jump_i;
  (* src = "./core/csr_file.v:99.25-99.35" *)
  output sys_jump_o;
  wire sys_jump_o;
  (* src = "./core/csr_file.v:87.25-87.34" *)
  input tmr_irq_i;
  wire tmr_irq_i;
  (* src = "./core/csr_file.v:296.19-296.28" *)
  wire trap_to_M;
  (* src = "./core/csr_file.v:107.25-107.37" *)
  input [3:0] xcpt_cause_i;
  wire [3:0] xcpt_cause_i;
  (* src = "./core/csr_file.v:108.25-108.36" *)
  input [31:0] xcpt_tval_i;
  wire [31:0] xcpt_tval_i;
  (* src = "./core/csr_file.v:106.25-106.37" *)
  input xcpt_valid_i;
  wire xcpt_valid_i;
  assign _012_ = mcycle_r + (* src = "./core/csr_file.v:583.21-583.33" *) 32'd1;
  assign _013_ = { mtvec_r[31:2], 2'h0 } + (* src = "./core/csr_file.v:931.26-931.61" *) { mcause_d[29:0], 2'h0 };
  assign _014_ = { stvec_r[31:2], 2'h0 } + (* src = "./core/csr_file.v:942.26-942.61" *) { scause_d[29:0], 2'h0 };
  assign _015_ = { 20'h00000, ext_irq_i, 3'h0, tmr_irq_i, 3'h0, sft_irq_i, 3'h0 } & (* src = "./core/csr_file.v:407.18-407.84" *) mie_r;
  assign \__MUX_procmux8091__WIRE_and/core/csr_filev880151_Y  = ext_irq_i & (* src = "./core/csr_file.v:880.29-880.50" *) mie_r[11];
  assign \__MUX_procmux8040__WIRE_and/core/csr_filev886152_Y  = tmr_irq_i & (* src = "./core/csr_file.v:886.34-886.54" *) mie_r[7];
  assign \__MUX_procmux7981__WIRE_and/core/csr_filev892153_Y  = sft_irq_i & (* src = "./core/csr_file.v:892.34-892.54" *) mie_r[3];
  (* src = "./core/csr_file.v:450.1-464.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) mepc_r <= 32'd0;
    else if (_016_) mepc_r <= _132_;
  (* src = "./core/csr_file.v:435.1-445.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) mscratch_r <= 32'd0;
    else if (_093_) mscratch_r <= csr_wdata_i;
  (* src = "./core/csr_file.v:420.1-430.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) mtvec_r <= 32'd0;
    else if (_092_) mtvec_r <= csr_wdata_i;
  reg [30:0] _155_;
  (* src = "./core/csr_file.v:474.1-488.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) _155_ <= 31'h00000000;
    else if (_017_) _155_ <= { _130_[31], _130_[29:0] };
  assign { mcause_r[31], mcause_r[29:0] } = _155_;
  reg \mcause_r_reg[30] ;
  (* src = "./core/csr_file.v:474.1-488.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) \mcause_r_reg[30]  <= 1'h0;
    else if (_037_) \mcause_r_reg[30]  <= _130_[30];
  assign mcause_r[30] = \mcause_r_reg[30] ;
  reg [25:0] _157_;
  (* src = "./core/csr_file.v:391.1-409.4" *)
  always_ff @(posedge clk_i)
    if (_048_) _157_ <= 26'h0000000;
    else _157_ <= { _015_[31:10], _015_[7:6], _015_[3:2] };
  assign { mip_r[31:10], mip_r[7:6], mip_r[3:2] } = _157_;
  reg [5:0] _158_;
  (* src = "./core/csr_file.v:391.1-409.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) _158_ <= 6'h00;
    else _158_ <= { _133_[9:8], _133_[5:4], _133_[1:0] };
  assign { mip_r[9:8], mip_r[5:4], mip_r[1:0] } = _158_;
  (* src = "./core/csr_file.v:509.1-529.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) mtval_r <= 32'd0;
    else if (_038_) mtval_r <= _128_;
  (* src = "./core/csr_file.v:535.1-545.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) medeleg_r <= 32'd0;
    else if (_097_) medeleg_r <= csr_wdata_i;
  reg [1:0] _161_;
  (* src = "./core/csr_file.v:324.1-361.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) _161_ <= 2'h3;
    else if (_039_) _161_ <= _141_[12:11];
  assign mstatus_r[12:11] = _161_;
  reg [1:0] _162_;
  (* src = "./core/csr_file.v:324.1-361.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) _162_ <= 2'h0;
    else if (_040_) _162_ <= { _141_[6], _141_[2] };
  assign { mstatus_r[6], mstatus_r[2] } = _162_;
  reg [13:0] _163_;
  (* src = "./core/csr_file.v:324.1-361.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) _163_ <= 14'h0000;
    else if (_041_) _163_ <= { _141_[30:20], _141_[17], _141_[10:9] };
  assign { mstatus_r[30:20], mstatus_r[17], mstatus_r[10:9] } = _163_;
  reg [1:0] _164_;
  (* src = "./core/csr_file.v:324.1-361.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) _164_ <= 2'h1;
    else if (_042_) _164_ <= { _141_[7], _141_[3] };
  assign { mstatus_r[7], mstatus_r[3] } = _164_;
  reg [1:0] _165_;
  (* src = "./core/csr_file.v:324.1-361.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) _165_ <= 2'h0;
    else if (_043_) _165_ <= { _141_[4], _141_[0] };
  assign { mstatus_r[4], mstatus_r[0] } = _165_;
  reg [7:0] _166_;
  (* src = "./core/csr_file.v:324.1-361.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) _166_ <= 8'h00;
    else if (_044_) _166_ <= { _141_[31], _141_[19:18], _141_[16:13], _141_[8] };
  assign { mstatus_r[31], mstatus_r[19:18], mstatus_r[16:13], mstatus_r[8] } = _166_;
  reg [1:0] _167_;
  (* src = "./core/csr_file.v:324.1-361.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) _167_ <= 2'h0;
    else if (_045_) _167_ <= { _141_[5], _141_[1] };
  assign { mstatus_r[5], mstatus_r[1] } = _167_;
  (* src = "./core/csr_file.v:371.1-381.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) mie_r <= 32'd0;
    else if (\__MUX_procmux8354__WIRE_logic_and/core/csr_filev37762_Y ) mie_r <= csr_wdata_i;
  (* src = "./core/csr_file.v:947.1-968.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) privilege_level_o <= 2'h3;
    else if (_029_) privilege_level_o <= _108_;
  (* src = "./core/csr_file.v:734.1-754.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) stval_r <= 32'd0;
    else if (_046_) stval_r <= _118_;
  (* src = "./core/csr_file.v:706.1-720.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) scause_r[29:0] <= 30'h00000000;
    else if (_032_) scause_r[29:0] <= _120_[29:0];
  (* src = "./core/csr_file.v:706.1-720.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) scause_r[31:30] <= 2'h0;
    else if (_047_) scause_r[31:30] <= _120_[31:30];
  (* src = "./core/csr_file.v:682.1-696.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) sepc_r <= 32'd0;
    else if (_034_) sepc_r <= _122_;
  (* src = "./core/csr_file.v:667.1-677.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) sscratch_r <= 32'd0;
    else if (_100_) sscratch_r <= csr_wdata_i;
  (* src = "./core/csr_file.v:652.1-662.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) stvec_r <= 32'd0;
    else if (_099_) stvec_r <= csr_wdata_i;
  (* src = "./core/csr_file.v:631.1-641.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) satp_r <= 32'd0;
    else if (_098_) satp_r <= csr_wdata_i;
  (* src = "./core/csr_file.v:565.1-585.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) mcycle_r[31:0] <= 32'd0;
    else if (_035_) mcycle_r[31:0] <= _126_;
  (* src = "./core/csr_file.v:565.1-585.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) mcycle_r[63:32] <= 32'd0;
    else if (_036_) mcycle_r[63:32] <= _124_;
  assign _016_ = | { \__MUX_procmux8325__WIRE_logic_and/core/csr_filev45674_Y , \__MUX_procmux8335__WIRE_logic_and/core/csr_filev46076_Y  };
  assign _017_ = | { irq_taken_o, \__MUX_procmux8327__WIRE_logic_and/core/csr_filev48479_Y  };
  assign _018_ = { irq_taken_o, \__MUX_procmux8325__WIRE_logic_and/core/csr_filev45674_Y  } != 2'h2;
  assign _019_ = | { \__MUX_procmux8308__WIRE_logic_and/core/csr_filev52599_Y , \__MUX_procmux8313__WIRE_logic_and/core/csr_filev51584_Y  };
  assign _020_ = { \__MUX_procmux8238__WIRE_logic_or/core/csr_filev51797_Y , \__MUX_procmux8313__WIRE_logic_and/core/csr_filev51584_Y  } != 2'h1;
  assign _021_ = | { irq_taken_o, csr_we_i, sys_jump_i };
  assign _022_ = { irq_taken_o, \__MUX_procmux8364__WIRE_eq/core/csr_filev35659_Y , \__MUX_procmux8367__WIRE_eq/core/csr_filev35258_Y , csr_we_i, sys_jump_i } != 5'h02;
  assign _023_ = { irq_taken_o, \__MUX_procmux8364__WIRE_eq/core/csr_filev35659_Y , \__MUX_procmux8367__WIRE_eq/core/csr_filev35258_Y , csr_we_i, sys_jump_i } != 5'h0a;
  assign _024_ = { irq_taken_o, is_sret, is_mret, sys_jump_i } != 4'h1;
  assign _025_ = { irq_taken_o, is_sret, is_mret, sys_jump_i } != 4'h5;
  assign _026_ = { irq_taken_o, is_mret, sys_jump_i } != 3'h3;
  assign _027_ = { irq_taken_o, trap_to_M } != 2'h2;
  assign _028_ = { irq_taken_o, trap_to_M } != 2'h3;
  assign _029_ = | { irq_taken_o, is_sret, is_mret };
  assign _030_ = | { \__MUX_procmux8235__WIRE_logic_and/core/csr_filev750145_Y , \__MUX_procmux8240__WIRE_logic_and/core/csr_filev740130_Y  };
  assign _031_ = { \__MUX_procmux8238__WIRE_logic_or/core/csr_filev51797_Y , \__MUX_procmux8240__WIRE_logic_and/core/csr_filev740130_Y  } != 2'h1;
  assign _032_ = | { irq_taken_o, \__MUX_procmux8248__WIRE_logic_and/core/csr_filev716124_Y  };
  assign _033_ = { irq_taken_o, \__MUX_procmux8246__WIRE_logic_and/core/csr_filev688119_Y  } != 2'h2;
  assign _034_ = | { \__MUX_procmux8246__WIRE_logic_and/core/csr_filev688119_Y , \__MUX_procmux8256__WIRE_logic_and/core/csr_filev692121_Y  };
  assign _035_ = { __MUX_procmux8291__WIRE_procmux8292_CMP, csr_we_i } != 2'h1;
  assign _036_ = { __MUX_procmux8281__WIRE_procmux8282_CMP, csr_we_i } != 2'h1;
  assign _037_ = & { _018_, _017_ };
  assign _038_ = & { _020_, _019_ };
  assign _039_ = & { _026_, _025_, _024_, _023_, _022_, _021_ };
  assign _040_ = & { _026_, _028_, _027_, _025_, _024_, _023_, _022_, _021_ };
  assign _041_ = & { _026_, _028_, _025_, _024_, _023_, _022_, _021_ };
  assign _042_ = & { _027_, _025_, _024_, _023_, _022_, _021_ };
  assign _043_ = & { _026_, _028_, _027_, _025_, _024_, _022_, _021_ };
  assign _044_ = & { _026_, _028_, _025_, _024_, _022_, _021_ };
  assign _045_ = & { _026_, _028_, _024_, _022_, _021_ };
  assign _046_ = & { _031_, _030_ };
  assign _047_ = & { _033_, _032_ };
  assign _048_ = | { \__MUX_procmux8354__WIRE_logic_and/core/csr_filev37762_Y , rst_i };
  assign __MUX_autopmuxtreecc65recursive_mux_generator10005__WIRE_autortlilcc2403ReduceOr10004 = | { _109_, __MUX_autopmuxtreecc65recursive_mux_generator9995__WIRE_procmux8196_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9997__WIRE_procmux8195_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator10017__WIRE_autortlilcc2403ReduceOr10016 = | { _111_, __MUX_autopmuxtreecc65recursive_mux_generator10007__WIRE_procmux8202_CMP, __MUX_autopmuxtreecc65recursive_mux_generator10009__WIRE_procmux8201_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator10021__WIRE_autortlilcc2403ReduceOr10020 = | { _110_, __MUX_autopmuxtreecc65recursive_mux_generator9999__WIRE_procmux8199_CMP, __MUX_autopmuxtreecc65recursive_mux_generator10001__WIRE_procmux8198_CMP, _109_, __MUX_autopmuxtreecc65recursive_mux_generator9995__WIRE_procmux8196_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9997__WIRE_procmux8195_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator10033__WIRE_autortlilcc2403ReduceOr10032 = | { _113_, __MUX_autopmuxtreecc65recursive_mux_generator10023__WIRE_procmux8208_CMP, __MUX_autopmuxtreecc65recursive_mux_generator10025__WIRE_procmux8207_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator10045__WIRE_autortlilcc2403ReduceOr10044 = | { _115_, __MUX_autopmuxtreecc65recursive_mux_generator10035__WIRE_procmux8214_CMP, __MUX_autopmuxtreecc65recursive_mux_generator10037__WIRE_procmux8213_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator10049__WIRE_autortlilcc2403ReduceOr10048 = | { _114_, __MUX_autopmuxtreecc65recursive_mux_generator10027__WIRE_procmux8211_CMP, __MUX_autopmuxtreecc65recursive_mux_generator10029__WIRE_procmux8210_CMP, _113_, __MUX_autopmuxtreecc65recursive_mux_generator10023__WIRE_procmux8208_CMP, __MUX_autopmuxtreecc65recursive_mux_generator10025__WIRE_procmux8207_CMP };
  assign __MUX_autopmuxtreecc65recursive_mux_generator10053__WIRE_autortlilcc2403ReduceOr10052 = | { _112_, __MUX_autopmuxtreecc65recursive_mux_generator10011__WIRE_procmux8205_CMP, __MUX_autopmuxtreecc65recursive_mux_generator10013__WIRE_procmux8204_CMP, _111_, __MUX_autopmuxtreecc65recursive_mux_generator10007__WIRE_procmux8202_CMP, __MUX_autopmuxtreecc65recursive_mux_generator10009__WIRE_procmux8201_CMP, _110_, __MUX_autopmuxtreecc65recursive_mux_generator9999__WIRE_procmux8199_CMP, __MUX_autopmuxtreecc65recursive_mux_generator10001__WIRE_procmux8198_CMP, _109_, __MUX_autopmuxtreecc65recursive_mux_generator9995__WIRE_procmux8196_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9997__WIRE_procmux8195_CMP };
  assign _050_ = __MUX_autopmuxtreecc65recursive_mux_generator10001__WIRE_procmux8198_CMP ? sepc_r : _049_;
  assign _051_ = __MUX_autopmuxtreecc65recursive_mux_generator10005__WIRE_autortlilcc2403ReduceOr10004 ? _070_ : _050_;
  assign _052_ = __MUX_autopmuxtreecc65recursive_mux_generator10007__WIRE_procmux8202_CMP ? { 22'h000000, mip_r[9:8], 2'h0, mip_r[5:4], 2'h0, mip_r[1:0] } : { mstatus_r[31], 11'h000, mstatus_r[19:18], 1'h0, mstatus_r[16:13], 4'h0, mstatus_r[8], 2'h0, mstatus_r[5:4], 2'h0, mstatus_r[1:0] };
  assign _053_ = __MUX_autopmuxtreecc65recursive_mux_generator10009__WIRE_procmux8201_CMP ? satp_r : _052_;
  assign _054_ = __MUX_autopmuxtreecc65recursive_mux_generator10011__WIRE_procmux8205_CMP ? medeleg_r : 32'd0;
  assign _055_ = __MUX_autopmuxtreecc65recursive_mux_generator10013__WIRE_procmux8204_CMP ? medeleg_r : _054_;
  assign _056_ = __MUX_autopmuxtreecc65recursive_mux_generator10017__WIRE_autortlilcc2403ReduceOr10016 ? _053_ : _055_;
  assign _057_ = __MUX_autopmuxtreecc65recursive_mux_generator10021__WIRE_autortlilcc2403ReduceOr10020 ? _051_ : _056_;
  assign _058_ = __MUX_autopmuxtreecc65recursive_mux_generator10023__WIRE_procmux8208_CMP ? mcycle_r[63:32] : mcycle_r[31:0];
  assign _059_ = __MUX_autopmuxtreecc65recursive_mux_generator10025__WIRE_procmux8207_CMP ? 32'd0 : _058_;
  assign _060_ = __MUX_autopmuxtreecc65recursive_mux_generator10027__WIRE_procmux8211_CMP ? mcause_r : mepc_r;
  assign _061_ = __MUX_autopmuxtreecc65recursive_mux_generator10029__WIRE_procmux8210_CMP ? mtval_r : _060_;
  assign _062_ = __MUX_autopmuxtreecc65recursive_mux_generator10033__WIRE_autortlilcc2403ReduceOr10032 ? _059_ : _061_;
  assign _063_ = __MUX_autopmuxtreecc65recursive_mux_generator10035__WIRE_procmux8214_CMP ? mtvec_r : mip_r;
  assign _064_ = __MUX_autopmuxtreecc65recursive_mux_generator10037__WIRE_procmux8213_CMP ? mscratch_r : _063_;
  assign _065_ = __MUX_autopmuxtreecc65recursive_mux_generator10039__WIRE_procmux8217_CMP ? mstatus_r : 32'd0;
  assign _066_ = __MUX_autopmuxtreecc65recursive_mux_generator10041__WIRE_procmux8216_CMP ? mie_r : _065_;
  assign _067_ = __MUX_autopmuxtreecc65recursive_mux_generator10045__WIRE_autortlilcc2403ReduceOr10044 ? _064_ : _066_;
  assign _068_ = __MUX_autopmuxtreecc65recursive_mux_generator10049__WIRE_autortlilcc2403ReduceOr10048 ? _062_ : _067_;
  assign csr_data_o = __MUX_autopmuxtreecc65recursive_mux_generator10053__WIRE_autortlilcc2403ReduceOr10052 ? _057_ : _068_;
  assign _069_ = __MUX_autopmuxtreecc65recursive_mux_generator9995__WIRE_procmux8196_CMP ? stval_r : scause_r;
  assign _070_ = __MUX_autopmuxtreecc65recursive_mux_generator9997__WIRE_procmux8195_CMP ? mcycle_r[31:0] : _069_;
  assign _049_ = __MUX_autopmuxtreecc65recursive_mux_generator9999__WIRE_procmux8199_CMP ? sscratch_r : stvec_r;
  assign is_mret = sys_jump_csr_addr_i == (* src = "./core/csr_file.v:289.17-289.45" *) 2'h3;
  assign is_sret = sys_jump_csr_addr_i == (* src = "./core/csr_file.v:290.17-290.45" *) 2'h1;
  assign \__MUX_procmux8367__WIRE_eq/core/csr_filev35258_Y  = csr_waddr_i == (* src = "./core/csr_file.v:352.13-352.35" *) 12'h300;
  assign \__MUX_procmux8364__WIRE_eq/core/csr_filev35659_Y  = csr_waddr_i == (* src = "./core/csr_file.v:356.18-356.40" *) 12'h100;
  assign _071_ = csr_waddr_i == (* src = "./core/csr_file.v:397.26-397.48" *) 12'h304;
  assign _072_ = csr_waddr_i == (* src = "./core/csr_file.v:426.26-426.48" *) 12'h305;
  assign _073_ = csr_waddr_i == (* src = "./core/csr_file.v:441.26-441.48" *) 12'h340;
  assign _074_ = csr_waddr_i == (* src = "./core/csr_file.v:460.26-460.48" *) 12'h341;
  assign _075_ = csr_waddr_i == (* src = "./core/csr_file.v:484.26-484.48" *) 12'h342;
  assign _077_ = csr_waddr_i == (* src = "./core/csr_file.v:525.26-525.48" *) 12'h343;
  assign _078_ = csr_waddr_i == (* src = "./core/csr_file.v:556.26-556.48" *) 12'h302;
  assign _079_ = csr_waddr_i == (* src = "./core/csr_file.v:637.26-637.48" *) 12'h180;
  assign _080_ = csr_waddr_i == (* src = "./core/csr_file.v:658.26-658.48" *) 12'h105;
  assign _081_ = csr_waddr_i == (* src = "./core/csr_file.v:673.26-673.48" *) 12'h140;
  assign _082_ = csr_waddr_i == (* src = "./core/csr_file.v:692.26-692.48" *) 12'h141;
  assign _083_ = csr_waddr_i == (* src = "./core/csr_file.v:716.26-716.48" *) 12'h142;
  assign _076_ = xcpt_cause_i == (* src = "./core/csr_file.v:745.14-745.34" *) 4'hf;
  assign _084_ = csr_waddr_i == (* src = "./core/csr_file.v:750.26-750.48" *) 12'h143;
  assign \__MUX_procmux7961__WIRE_eq/core/csr_filev925160_Y  = ! (* src = "./core/csr_file.v:936.13-936.35" *) mtvec_r[1:0];
  assign _086_ = xcpt_cause_i >= (* src = "./core/csr_file.v:742.14-742.33" *) 32'd0;
  assign _087_ = xcpt_cause_i >= (* src = "./core/csr_file.v:743.14-743.33" *) 32'd4;
  assign _088_ = xcpt_cause_i >= (* src = "./core/csr_file.v:744.14-744.34" *) 32'd12;
  assign _089_ = xcpt_cause_i <= (* src = "./core/csr_file.v:742.38-742.57" *) 32'd1;
  assign _090_ = xcpt_cause_i <= (* src = "./core/csr_file.v:743.38-743.57" *) 32'd7;
  assign _091_ = xcpt_cause_i <= (* src = "./core/csr_file.v:744.38-744.58" *) 32'd13;
  assign \__MUX_procmux8354__WIRE_logic_and/core/csr_filev37762_Y  = csr_we_i && (* src = "./core/csr_file.v:397.14-397.48" *) _071_;
  assign _092_ = csr_we_i && (* src = "./core/csr_file.v:426.14-426.48" *) _072_;
  assign _093_ = csr_we_i && (* src = "./core/csr_file.v:441.14-441.48" *) _073_;
  assign \__MUX_procmux8335__WIRE_logic_and/core/csr_filev46076_Y  = csr_we_i && (* src = "./core/csr_file.v:460.14-460.48" *) _074_;
  assign \__MUX_procmux8327__WIRE_logic_and/core/csr_filev48479_Y  = csr_we_i && (* src = "./core/csr_file.v:484.14-484.48" *) _075_;
  assign \__MUX_procmux8325__WIRE_logic_and/core/csr_filev45674_Y  = irq_taken_o && (* src = "./core/csr_file.v:493.9-493.31" *) trap_to_M;
  assign \__MUX_procmux8313__WIRE_logic_and/core/csr_filev51584_Y  = xcpt_valid_i && (* src = "./core/csr_file.v:515.14-515.39" *) trap_to_M;
  assign \__MUX_procmux8308__WIRE_logic_and/core/csr_filev52599_Y  = csr_we_i && (* src = "./core/csr_file.v:525.14-525.48" *) _077_;
  assign _097_ = csr_we_i && (* src = "./core/csr_file.v:556.14-556.48" *) _078_;
  assign _098_ = csr_we_i && (* src = "./core/csr_file.v:637.14-637.48" *) _079_;
  assign _099_ = csr_we_i && (* src = "./core/csr_file.v:658.14-658.48" *) _080_;
  assign _100_ = csr_we_i && (* src = "./core/csr_file.v:673.14-673.48" *) _081_;
  assign \__MUX_procmux8256__WIRE_logic_and/core/csr_filev692121_Y  = csr_we_i && (* src = "./core/csr_file.v:692.14-692.48" *) _082_;
  assign \__MUX_procmux8248__WIRE_logic_and/core/csr_filev716124_Y  = csr_we_i && (* src = "./core/csr_file.v:716.14-716.48" *) _083_;
  assign \__MUX_procmux8246__WIRE_logic_and/core/csr_filev688119_Y  = irq_taken_o && (* src = "./core/csr_file.v:725.9-725.32" *) _101_;
  assign \__MUX_procmux8240__WIRE_logic_and/core/csr_filev740130_Y  = xcpt_valid_i && (* src = "./core/csr_file.v:740.14-740.40" *) _101_;
  assign _094_ = _086_ && (* src = "./core/csr_file.v:742.14-742.57" *) _089_;
  assign _095_ = _087_ && (* src = "./core/csr_file.v:743.14-743.57" *) _090_;
  assign _096_ = _088_ && (* src = "./core/csr_file.v:744.14-744.58" *) _091_;
  assign \__MUX_procmux8235__WIRE_logic_and/core/csr_filev750145_Y  = csr_we_i && (* src = "./core/csr_file.v:750.14-750.48" *) _084_;
  assign _101_ = ! (* src = "./core/csr_file.v:740.30-740.40" *) trap_to_M;
  assign _102_ = ! (* src = "./core/csr_file.v:925.39-925.52" *) mcause_d[31];
  assign _103_ = _094_ || (* src = "./core/csr_file.v:742.13-743.58" *) _095_;
  assign _104_ = _103_ || (* src = "./core/csr_file.v:742.13-744.59" *) _096_;
  assign \__MUX_procmux8238__WIRE_logic_or/core/csr_filev51797_Y  = _104_ || (* src = "./core/csr_file.v:742.13-745.35" *) _076_;
  assign \__MUX_procmux7968__WIRE_logic_or/core/csr_filev925162_Y  = \__MUX_procmux7961__WIRE_eq/core/csr_filev925160_Y  || (* src = "./core/csr_file.v:925.13-925.52" *) _102_;
  assign _105_ = ~ (* src = "./core/csr_file.v:912.53-912.77" *) { 31'h00000000, _085_[0] };
  assign _106_ = irq_taken_o ? (* src = "./core/csr_file.v:963.18-963.27|./core/csr_file.v:963.14-966.12" *) _143_ : 2'hx;
  assign _107_ = is_sret ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:959.18-959.25|./core/csr_file.v:959.14-966.12" *) { 1'h0, mstatus_r[8] } : _106_;
  assign _108_ = is_mret ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:955.13-955.20|./core/csr_file.v:955.9-966.12" *) mstatus_r[12:11] : _107_;
  assign _005_ = \__MUX_procmux7961__WIRE_eq/core/csr_filev925160_Y  ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:936.13-936.35|./core/csr_file.v:936.9-943.12" *) { stvec_r[31:2], 2'h0 } : _014_;
  assign _002_ = \__MUX_procmux7968__WIRE_logic_or/core/csr_filev925162_Y  ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:925.13-925.52|./core/csr_file.v:925.9-932.12" *) { mtvec_r[31:2], 2'h0 } : _013_;
  assign pc_handler_o = trap_to_M ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:923.9-923.18|./core/csr_file.v:923.5-944.8" *) _002_ : _005_;
  assign _010_ = \__MUX_procmux7981__WIRE_and/core/csr_filev892153_Y  ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:892.34-892.54|./core/csr_file.v:892.30-902.28" *) 4'h3 : 4'h0;
  assign _011_ = \__MUX_procmux7981__WIRE_and/core/csr_filev892153_Y  ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:892.34-892.54|./core/csr_file.v:892.30-902.28" *) 1'h1 : 1'h0;
  assign _008_ = \__MUX_procmux8040__WIRE_and/core/csr_filev886152_Y  ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:886.34-886.54|./core/csr_file.v:886.30-902.28" *) 4'h7 : _010_;
  assign _009_ = \__MUX_procmux8040__WIRE_and/core/csr_filev886152_Y  ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:886.34-886.54|./core/csr_file.v:886.30-902.28" *) 1'h1 : _011_;
  assign _006_ = \__MUX_procmux8091__WIRE_and/core/csr_filev880151_Y  ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:880.29-880.50|./core/csr_file.v:880.25-902.28" *) 4'hb : _008_;
  assign _007_ = \__MUX_procmux8091__WIRE_and/core/csr_filev880151_Y  ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:880.29-880.50|./core/csr_file.v:880.25-902.28" *) 1'h1 : _009_;
  assign _003_ = mstatus_r[3] ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:877.25-877.37|./core/csr_file.v:877.21-903.24" *) _006_ : 4'h0;
  assign _004_ = mstatus_r[3] ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:877.25-877.37|./core/csr_file.v:877.21-903.24" *) _007_ : 1'h0;
  assign interrupt_cause = \__MUX_procmux8164__WIRE_eq/core/csr_filev912154_Y  ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:876.9-907.16" *) _003_ : 4'h0;
  assign _000_ = \__MUX_procmux8164__WIRE_eq/core/csr_filev912154_Y  ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:876.9-907.16" *) _004_ : 1'h0;
  assign \__MUX_procmux8164__WIRE_eq/core/csr_filev912154_Y  = privilege_level_o == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:876.9-907.16" *) 2'h3;
  assign trap_to_M = xcpt_valid_i ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:874.9-874.22|./core/csr_file.v:874.5-913.8" *) _142_[0] : 1'h1;
  assign irq_taken_o = xcpt_valid_i ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:874.9-874.22|./core/csr_file.v:874.5-913.8" *) 1'h1 : _000_;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9997__WIRE_procmux8195_CMP = csr_raddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:790.5-853.12" *) 12'hc00;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9995__WIRE_procmux8196_CMP = csr_raddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:790.5-853.12" *) 12'h143;
  assign _109_ = csr_raddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:790.5-853.12" *) 12'h142;
  assign __MUX_autopmuxtreecc65recursive_mux_generator10001__WIRE_procmux8198_CMP = csr_raddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:790.5-853.12" *) 12'h141;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9999__WIRE_procmux8199_CMP = csr_raddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:790.5-853.12" *) 12'h140;
  assign _110_ = csr_raddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:790.5-853.12" *) 12'h105;
  assign __MUX_autopmuxtreecc65recursive_mux_generator10009__WIRE_procmux8201_CMP = csr_raddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:790.5-853.12" *) 12'h180;
  assign __MUX_autopmuxtreecc65recursive_mux_generator10007__WIRE_procmux8202_CMP = csr_raddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:790.5-853.12" *) 12'h144;
  assign _111_ = csr_raddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:790.5-853.12" *) 12'h100;
  assign __MUX_autopmuxtreecc65recursive_mux_generator10013__WIRE_procmux8204_CMP = csr_raddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:790.5-853.12" *) 12'h303;
  assign __MUX_autopmuxtreecc65recursive_mux_generator10011__WIRE_procmux8205_CMP = csr_raddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:790.5-853.12" *) 12'h302;
  assign _112_ = csr_raddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:790.5-853.12" *) 12'hb82;
  assign __MUX_autopmuxtreecc65recursive_mux_generator10025__WIRE_procmux8207_CMP = csr_raddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:790.5-853.12" *) 12'hb02;
  assign __MUX_autopmuxtreecc65recursive_mux_generator10023__WIRE_procmux8208_CMP = csr_raddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:790.5-853.12" *) 12'hb80;
  assign _113_ = csr_raddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:790.5-853.12" *) 12'hb00;
  assign __MUX_autopmuxtreecc65recursive_mux_generator10029__WIRE_procmux8210_CMP = csr_raddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:790.5-853.12" *) 12'h343;
  assign __MUX_autopmuxtreecc65recursive_mux_generator10027__WIRE_procmux8211_CMP = csr_raddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:790.5-853.12" *) 12'h342;
  assign _114_ = csr_raddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:790.5-853.12" *) 12'h341;
  assign __MUX_autopmuxtreecc65recursive_mux_generator10037__WIRE_procmux8213_CMP = csr_raddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:790.5-853.12" *) 12'h340;
  assign __MUX_autopmuxtreecc65recursive_mux_generator10035__WIRE_procmux8214_CMP = csr_raddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:790.5-853.12" *) 12'h305;
  assign _115_ = csr_raddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:790.5-853.12" *) 12'h344;
  assign __MUX_autopmuxtreecc65recursive_mux_generator10041__WIRE_procmux8216_CMP = csr_raddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:790.5-853.12" *) 12'h304;
  assign __MUX_autopmuxtreecc65recursive_mux_generator10039__WIRE_procmux8217_CMP = csr_raddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:790.5-853.12" *) 12'h300;
  assign _116_ = \__MUX_procmux8235__WIRE_logic_and/core/csr_filev750145_Y  ? (* src = "./core/csr_file.v:750.14-750.48|./core/csr_file.v:750.10-753.8" *) csr_wdata_i : 32'hxxxxxxxx;
  assign _117_ = \__MUX_procmux8238__WIRE_logic_or/core/csr_filev51797_Y  ? (* src = "./core/csr_file.v:742.13-745.35|./core/csr_file.v:742.9-748.12" *) xcpt_tval_i : 32'hxxxxxxxx;
  assign _118_ = \__MUX_procmux8240__WIRE_logic_and/core/csr_filev740130_Y  ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:740.14-740.40|./core/csr_file.v:740.10-753.8" *) _117_ : _116_;
  assign scause_d = \__MUX_procmux8246__WIRE_logic_and/core/csr_filev688119_Y  ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:725.9-725.32|./core/csr_file.v:725.5-728.8" *) { 28'h0000000, xcpt_cause_i } : { 2'hx, scause_r[29:0] };
  assign _119_ = \__MUX_procmux8248__WIRE_logic_and/core/csr_filev716124_Y  ? (* src = "./core/csr_file.v:716.14-716.48|./core/csr_file.v:716.10-719.8" *) csr_wdata_i : 32'hxxxxxxxx;
  assign _120_ = irq_taken_o ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:712.14-712.23|./core/csr_file.v:712.10-719.8" *) scause_d : _119_;
  assign _121_ = \__MUX_procmux8256__WIRE_logic_and/core/csr_filev692121_Y  ? (* src = "./core/csr_file.v:692.14-692.48|./core/csr_file.v:692.10-695.8" *) csr_wdata_i : 32'hxxxxxxxx;
  assign _122_ = \__MUX_procmux8246__WIRE_logic_and/core/csr_filev688119_Y  ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:688.14-688.37|./core/csr_file.v:688.10-695.8" *) nxt_unwb_PC_i : _121_;
  assign _123_ = __MUX_procmux8281__WIRE_procmux8282_CMP ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:573.9-579.16" *) csr_wdata_i : 32'hxxxxxxxx;
  assign __MUX_procmux8281__WIRE_procmux8282_CMP = csr_waddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:573.9-579.16" *) 12'hb80;
  assign _124_ = csr_we_i ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:571.14-571.22|./core/csr_file.v:571.10-584.8" *) _123_ : _012_[63:32];
  assign _125_ = __MUX_procmux8291__WIRE_procmux8292_CMP ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:573.9-579.16" *) csr_wdata_i : 32'hxxxxxxxx;
  assign __MUX_procmux8291__WIRE_procmux8292_CMP = csr_waddr_i == (* full_case = 32'd1 *) (* src = "./core/csr_file.v:0.0-0.0|./core/csr_file.v:573.9-579.16" *) 12'hb00;
  assign _126_ = csr_we_i ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:571.14-571.22|./core/csr_file.v:571.10-584.8" *) _125_ : _012_[31:0];
  assign _127_ = \__MUX_procmux8308__WIRE_logic_and/core/csr_filev52599_Y  ? (* src = "./core/csr_file.v:525.14-525.48|./core/csr_file.v:525.10-528.8" *) csr_wdata_i : 32'hxxxxxxxx;
  assign _128_ = \__MUX_procmux8313__WIRE_logic_and/core/csr_filev51584_Y  ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:515.14-515.39|./core/csr_file.v:515.10-528.8" *) _117_ : _127_;
  assign _001_ = xcpt_valid_i ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:495.13-495.26|./core/csr_file.v:495.9-496.63" *) { 28'h0000000, xcpt_cause_i } : { 28'h8000000, interrupt_cause };
  assign mcause_d = \__MUX_procmux8325__WIRE_logic_and/core/csr_filev45674_Y  ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:493.9-493.31|./core/csr_file.v:493.5-497.8" *) _001_ : { mcause_r[31], 1'hx, mcause_r[29:0] };
  assign _129_ = \__MUX_procmux8327__WIRE_logic_and/core/csr_filev48479_Y  ? (* src = "./core/csr_file.v:484.14-484.48|./core/csr_file.v:484.10-487.8" *) csr_wdata_i : 32'hxxxxxxxx;
  assign _130_ = irq_taken_o ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:480.14-480.23|./core/csr_file.v:480.10-487.8" *) mcause_d : _129_;
  assign _131_ = \__MUX_procmux8335__WIRE_logic_and/core/csr_filev46076_Y  ? (* src = "./core/csr_file.v:460.14-460.48|./core/csr_file.v:460.10-463.8" *) csr_wdata_i : 32'hxxxxxxxx;
  assign _132_ = \__MUX_procmux8325__WIRE_logic_and/core/csr_filev45674_Y  ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:456.14-456.36|./core/csr_file.v:456.10-463.8" *) nxt_unwb_PC_i : _131_;
  assign _133_ = \__MUX_procmux8354__WIRE_logic_and/core/csr_filev37762_Y  ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:397.14-397.48|./core/csr_file.v:397.10-408.8" *) { 22'h000000, csr_wdata_i[9:8], 2'h0, csr_wdata_i[5:4], 2'h0, csr_wdata_i[1:0] } : _015_;
  assign _134_ = \__MUX_procmux8364__WIRE_eq/core/csr_filev35659_Y  ? (* src = "./core/csr_file.v:356.18-356.40|./core/csr_file.v:356.14-359.12" *) { csr_wdata_i[31], 11'hxxx, csr_wdata_i[19:18], 1'hx, csr_wdata_i[16:13], 4'hx, csr_wdata_i[8], 2'hx, csr_wdata_i[5:4], 2'hx, csr_wdata_i[1:0] } : 32'hxxxxxxxx;
  assign _135_ = \__MUX_procmux8367__WIRE_eq/core/csr_filev35258_Y  ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:352.13-352.35|./core/csr_file.v:352.9-359.12" *) csr_wdata_i : _134_;
  assign _136_ = csr_we_i ? (* src = "./core/csr_file.v:350.14-350.22|./core/csr_file.v:350.10-360.8" *) _135_ : 32'hxxxxxxxx;
  assign _137_ = is_sret ? (* src = "./core/csr_file.v:345.18-345.25|./core/csr_file.v:345.14-348.12" *) { 30'bxxxxxxxxxxxxxxxxxxxxxxxxxx1xxx, mstatus_r[5], 1'hx } : 32'hxxxxxxxx;
  assign _138_ = is_mret ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:341.13-341.20|./core/csr_file.v:341.9-348.12" *) { 28'bxxxxxxxxxxxxxxxxxxxxxxxx1xxx, mstatus_r[7], 3'hx } : _137_;
  assign _139_ = sys_jump_i ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:339.14-339.24|./core/csr_file.v:339.10-360.8" *) _138_ : _136_;
  assign _140_ = trap_to_M ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:331.13-331.22|./core/csr_file.v:331.9-338.12" *) { 19'hxxxxx, privilege_level_o, 3'hx, mstatus_r[3], 7'bxxx0xxx } : { mstatus_r[30:9], privilege_level_o, 2'hx, mstatus_r[1], 5'bxxx0x };
  assign _141_ = irq_taken_o ? (* full_case = 32'd1 *) (* src = "./core/csr_file.v:330.14-330.23|./core/csr_file.v:330.10-360.8" *) _140_ : _139_;
  wire [31:0] _372_ = medeleg_r;
  assign _085_[0] = _372_[xcpt_cause_i +: 1];
  assign _142_ = \__MUX_procmux8164__WIRE_eq/core/csr_filev912154_Y  ? (* src = "./core/csr_file.v:912.21-912.77" *) 32'd1 : _105_;
  assign _143_ = trap_to_M ? (* src = "./core/csr_file.v:965.34-965.58" *) 2'h3 : 2'h1;
  assign sys_jump_csr_data_o = is_mret ? (* src = "./core/csr_file.v:976.30-978.35" *) mepc_r : _144_;
  assign _144_ = is_sret ? (* src = "./core/csr_file.v:977.30-978.35" *) sepc_r : 32'd0;
  assign _085_[31:1] = 31'h00000000;
  assign __MUX_procmux7949__WIRE_irq_taken_o = irq_taken_o;
  assign __MUX_procmux7952__WIRE_is_sret = is_sret;
  assign __MUX_procmux7955__WIRE_is_mret = is_mret;
  assign __MUX_procmux7973__WIRE_trap_to_M = trap_to_M;
  assign __MUX_procmux8132__WIRE_mstatus_r = mstatus_r[3];
  assign __MUX_procmux8188__WIRE_xcpt_valid_i = xcpt_valid_i;
  assign __MUX_procmux8283__WIRE_csr_we_i = csr_we_i;
  assign __MUX_procmux8377__WIRE_sys_jump_i = sys_jump_i;
  assign sys_jump_o = sys_jump_i;
endmodule

(* dynports =  1  *)
(* hdlname = "\\alu" *)
(* src = "./core/alu.v:58.1-103.10" *)
module alu(a_i, b_i, operation_sel_i, shift_sel_i, alu_result_o, \__MUX_ternary/core/aluv802579__WIRE_shift_sel_i , \__MUX_ternary/core/aluv782575__WIRE_lt/core/aluv782574_Y , \__MUX_ternary/core/aluv772573__WIRE_lt/core/aluv772572_Y , metaReset_alu);
  (* src = "./core/alu.v:100.13-100.47" *)
  wire [31:0] _00_;
  (* src = "./core/alu.v:101.13-101.48" *)
  wire [31:0] _01_;
  (* src = "./core/alu.v:94.13-94.48" *)
  wire [31:0] _02_;
  (* src = "./core/alu.v:95.13-95.48" *)
  wire [31:0] _03_;
  (* src = "./core/alu.v:96.13-96.48" *)
  wire [31:0] _04_;
  (* src = "./core/alu.v:97.13-97.49" *)
  wire [31:0] _05_;
  (* src = "./core/alu.v:98.13-98.48" *)
  wire [31:0] _06_;
  (* src = "./core/alu.v:99.13-99.47" *)
  wire [31:0] _07_;
  (* src = "./core/alu.v:94.8-95.51" *)
  wire [31:0] _08_;
  (* src = "./core/alu.v:94.8-96.51" *)
  wire [31:0] _09_;
  (* src = "./core/alu.v:94.8-97.51" *)
  wire [31:0] _10_;
  (* src = "./core/alu.v:94.8-98.51" *)
  wire [31:0] _11_;
  (* src = "./core/alu.v:94.8-99.51" *)
  wire [31:0] _12_;
  (* src = "./core/alu.v:94.8-100.51" *)
  wire [31:0] _13_;
  (* src = "./core/alu.v:80.64-80.88" *)
  wire [31:0] _14_;
  (* src = "./core/alu.v:80.34-80.59" *)
  wire [31:0] _15_;
  (* alu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/aluv772573__WIRE_lt/core/aluv772572_Y ;
  wire \__MUX_ternary/core/aluv772573__WIRE_lt/core/aluv772572_Y ;
  (* alu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/aluv782575__WIRE_lt/core/aluv782574_Y ;
  wire \__MUX_ternary/core/aluv782575__WIRE_lt/core/aluv782574_Y ;
  (* alu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/aluv802579__WIRE_shift_sel_i ;
  wire \__MUX_ternary/core/aluv802579__WIRE_shift_sel_i ;
  (* src = "./core/alu.v:60.25-60.28" *)
  input [31:0] a_i;
  wire [31:0] a_i;
  (* src = "./core/alu.v:64.25-64.37" *)
  output [31:0] alu_result_o;
  wire [31:0] alu_result_o;
  (* src = "./core/alu.v:61.25-61.28" *)
  input [31:0] b_i;
  wire [31:0] b_i;
  (* meta_reset = 32'd1 *)
  input metaReset_alu;
  wire metaReset_alu;
  (* src = "./core/alu.v:72.6-72.19" *)
  wire operation_add;
  (* src = "./core/alu.v:73.49-73.62" *)
  wire operation_and;
  (* src = "./core/alu.v:73.35-73.47" *)
  wire operation_or;
  (* src = "./core/alu.v:62.25-62.40" *)
  input [2:0] operation_sel_i;
  wire [2:0] operation_sel_i;
  (* src = "./core/alu.v:72.21-72.34" *)
  wire operation_sll;
  (* src = "./core/alu.v:72.36-72.49" *)
  wire operation_slt;
  (* src = "./core/alu.v:72.51-72.65" *)
  wire operation_sltu;
  (* src = "./core/alu.v:73.21-73.33" *)
  wire operation_sr;
  (* src = "./core/alu.v:73.6-73.19" *)
  wire operation_xor;
  (* src = "./core/alu.v:69.19-69.29" *)
  wire [31:0] result_add;
  (* src = "./core/alu.v:70.53-70.63" *)
  wire [31:0] result_and;
  (* src = "./core/alu.v:70.42-70.51" *)
  wire [31:0] result_or;
  (* src = "./core/alu.v:69.31-69.41" *)
  wire [31:0] result_sll;
  (* src = "./core/alu.v:69.43-69.53" *)
  wire [31:0] result_slt;
  (* src = "./core/alu.v:69.55-69.66" *)
  wire [31:0] result_sltu;
  (* src = "./core/alu.v:70.31-70.40" *)
  wire [31:0] result_sr;
  (* src = "./core/alu.v:70.19-70.29" *)
  wire [31:0] result_xor;
  (* src = "./core/alu.v:63.25-63.36" *)
  input shift_sel_i;
  wire shift_sel_i;
  assign result_add = a_i + (* src = "./core/alu.v:75.21-75.30" *) b_i;
  assign _00_ = { operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or, operation_or } & (* src = "./core/alu.v:100.13-100.47" *) result_or;
  assign _01_ = { operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and, operation_and } & (* src = "./core/alu.v:101.13-101.48" *) result_and;
  assign result_and = a_i & (* src = "./core/alu.v:82.21-82.30" *) b_i;
  assign _02_ = { operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add, operation_add } & (* src = "./core/alu.v:94.13-94.48" *) result_add;
  assign _03_ = { operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll, operation_sll } & (* src = "./core/alu.v:95.13-95.48" *) result_sll;
  assign _04_ = { operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt, operation_slt } & (* src = "./core/alu.v:96.13-96.48" *) result_slt;
  assign _05_ = { operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu, operation_sltu } & (* src = "./core/alu.v:97.13-97.49" *) result_sltu;
  assign _06_ = { operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor, operation_xor } & (* src = "./core/alu.v:98.13-98.48" *) result_xor;
  assign _07_ = { operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr, operation_sr } & (* src = "./core/alu.v:99.13-99.47" *) result_sr;
  assign operation_add = ! (* src = "./core/alu.v:84.26-84.51" *) operation_sel_i;
  assign operation_sll = operation_sel_i == (* src = "./core/alu.v:85.26-85.51" *) 3'h1;
  assign operation_slt = operation_sel_i == (* src = "./core/alu.v:86.26-86.51" *) 3'h2;
  assign operation_sltu = operation_sel_i == (* src = "./core/alu.v:87.26-87.51" *) 3'h3;
  assign operation_xor = operation_sel_i == (* src = "./core/alu.v:88.26-88.51" *) 3'h4;
  assign operation_sr = operation_sel_i == (* src = "./core/alu.v:89.26-89.51" *) 3'h5;
  assign operation_or = operation_sel_i == (* src = "./core/alu.v:90.26-90.51" *) 3'h6;
  assign operation_and = operation_sel_i == (* src = "./core/alu.v:91.26-91.51" *) 3'h7;
  assign \__MUX_ternary/core/aluv772573__WIRE_lt/core/aluv772572_Y  = $signed(a_i) < (* src = "./core/alu.v:77.22-77.49" *) $signed(b_i);
  assign \__MUX_ternary/core/aluv782575__WIRE_lt/core/aluv782574_Y  = a_i < (* src = "./core/alu.v:78.23-78.32" *) b_i;
  assign result_or = a_i | (* src = "./core/alu.v:81.20-81.29" *) b_i;
  assign _08_ = _02_ | (* src = "./core/alu.v:94.8-95.51" *) _03_;
  assign _09_ = _08_ | (* src = "./core/alu.v:94.8-96.51" *) _04_;
  assign _10_ = _09_ | (* src = "./core/alu.v:94.8-97.51" *) _05_;
  assign _11_ = _10_ | (* src = "./core/alu.v:94.8-98.51" *) _06_;
  assign _12_ = _11_ | (* src = "./core/alu.v:94.8-99.51" *) _07_;
  assign _13_ = _12_ | (* src = "./core/alu.v:94.8-100.51" *) _00_;
  assign alu_result_o = _13_ | (* src = "./core/alu.v:94.8-101.51" *) _01_;
  assign result_sll = a_i << (* src = "./core/alu.v:76.21-76.36" *) b_i[4:0];
  assign _14_ = $signed(a_i) >> (* src = "./core/alu.v:80.64-80.88" *) b_i[4:0];
  assign _15_ = $signed(a_i) >>> (* src = "./core/alu.v:80.34-80.59" *) b_i[4:0];
  assign result_slt = \__MUX_ternary/core/aluv772573__WIRE_lt/core/aluv772572_Y  ? (* src = "./core/alu.v:77.21-77.58" *) 32'd1 : 32'd0;
  assign result_sltu = \__MUX_ternary/core/aluv782575__WIRE_lt/core/aluv782574_Y  ? (* src = "./core/alu.v:78.22-78.41" *) 32'd1 : 32'd0;
  assign result_sr = shift_sel_i ? (* src = "./core/alu.v:80.20-80.89" *) _15_ : _14_;
  assign result_xor = a_i ^ (* src = "./core/alu.v:79.21-79.30" *) b_i;
  assign \__MUX_ternary/core/aluv802579__WIRE_shift_sel_i  = shift_sel_i;
endmodule

(* dynports =  1  *)
(* hdlname = "\\bcu" *)
(* src = "./core/bcu.v:57.1-90.10" *)
module bcu(a_i, b_i, operation_sel_i, compare_result_o, \__MUX_ternary/core/bcuv712435__WIRE_ge/core/bcuv712434_Y , \__MUX_ternary/core/bcuv732439__WIRE_ge/core/bcuv732438_Y , \__MUX_ternary/core/bcuv722437__WIRE_lt/core/bcuv722436_Y , \__MUX_ternary/core/bcuv702433__WIRE_lt/core/bcuv702432_Y , \__MUX_ternary/core/bcuv692431__WIRE_ne/core/bcuv692430_Y , \__MUX_ternary/core/bcuv682429__WIRE_eq/core/bcuv682428_Y , metaReset_bcu);
  (* src = "./core/bcu.v:83.9-83.35" *)
  wire _00_;
  (* src = "./core/bcu.v:84.11-84.37" *)
  wire _01_;
  (* src = "./core/bcu.v:85.11-85.37" *)
  wire _02_;
  (* src = "./core/bcu.v:86.11-86.37" *)
  wire _03_;
  (* src = "./core/bcu.v:87.11-87.39" *)
  wire _04_;
  (* src = "./core/bcu.v:88.11-88.39" *)
  wire _05_;
  (* src = "./core/bcu.v:83.8-84.39" *)
  wire _06_;
  (* src = "./core/bcu.v:83.8-85.39" *)
  wire _07_;
  (* src = "./core/bcu.v:83.8-86.39" *)
  wire _08_;
  (* src = "./core/bcu.v:83.8-87.40" *)
  wire _09_;
  (* src = "./core/bcu.v:68.20-68.40" *)
  (* unused_bits = "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _10_;
  (* src = "./core/bcu.v:69.20-69.40" *)
  (* unused_bits = "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _11_;
  (* src = "./core/bcu.v:70.20-70.49" *)
  (* unused_bits = "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _12_;
  (* src = "./core/bcu.v:71.20-71.50" *)
  (* unused_bits = "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _13_;
  (* src = "./core/bcu.v:72.20-72.39" *)
  (* unused_bits = "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _14_;
  (* src = "./core/bcu.v:73.20-73.40" *)
  (* unused_bits = "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _15_;
  (* bcu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/bcuv682429__WIRE_eq/core/bcuv682428_Y ;
  wire \__MUX_ternary/core/bcuv682429__WIRE_eq/core/bcuv682428_Y ;
  (* bcu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/bcuv692431__WIRE_ne/core/bcuv692430_Y ;
  wire \__MUX_ternary/core/bcuv692431__WIRE_ne/core/bcuv692430_Y ;
  (* bcu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/bcuv702433__WIRE_lt/core/bcuv702432_Y ;
  wire \__MUX_ternary/core/bcuv702433__WIRE_lt/core/bcuv702432_Y ;
  (* bcu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/bcuv712435__WIRE_ge/core/bcuv712434_Y ;
  wire \__MUX_ternary/core/bcuv712435__WIRE_ge/core/bcuv712434_Y ;
  (* bcu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/bcuv722437__WIRE_lt/core/bcuv722436_Y ;
  wire \__MUX_ternary/core/bcuv722437__WIRE_lt/core/bcuv722436_Y ;
  (* bcu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/bcuv732439__WIRE_ge/core/bcuv732438_Y ;
  wire \__MUX_ternary/core/bcuv732439__WIRE_ge/core/bcuv732438_Y ;
  (* src = "./core/bcu.v:59.25-59.28" *)
  input [31:0] a_i;
  wire [31:0] a_i;
  (* src = "./core/bcu.v:60.25-60.28" *)
  input [31:0] b_i;
  wire [31:0] b_i;
  (* src = "./core/bcu.v:62.25-62.41" *)
  output compare_result_o;
  wire compare_result_o;
  (* meta_reset = 32'd1 *)
  input metaReset_bcu;
  wire metaReset_bcu;
  (* src = "./core/bcu.v:75.6-75.19" *)
  wire operation_beq;
  (* src = "./core/bcu.v:78.6-78.19" *)
  wire operation_bge;
  (* src = "./core/bcu.v:80.6-80.20" *)
  wire operation_bgeu;
  (* src = "./core/bcu.v:77.6-77.19" *)
  wire operation_blt;
  (* src = "./core/bcu.v:79.6-79.20" *)
  wire operation_bltu;
  (* src = "./core/bcu.v:76.6-76.19" *)
  wire operation_bne;
  (* src = "./core/bcu.v:61.25-61.40" *)
  input [2:0] operation_sel_i;
  wire [2:0] operation_sel_i;
  (* src = "./core/bcu.v:68.6-68.16" *)
  wire result_beq;
  (* src = "./core/bcu.v:71.6-71.16" *)
  wire result_bge;
  (* src = "./core/bcu.v:73.6-73.17" *)
  wire result_bgeu;
  (* src = "./core/bcu.v:70.6-70.16" *)
  wire result_blt;
  (* src = "./core/bcu.v:72.6-72.17" *)
  wire result_bltu;
  (* src = "./core/bcu.v:69.6-69.16" *)
  wire result_bne;
  assign _00_ = operation_beq & (* src = "./core/bcu.v:83.9-83.35" *) result_beq;
  assign _01_ = operation_bne & (* src = "./core/bcu.v:84.11-84.37" *) result_bne;
  assign _02_ = operation_blt & (* src = "./core/bcu.v:85.11-85.37" *) result_blt;
  assign _03_ = operation_bge & (* src = "./core/bcu.v:86.11-86.37" *) result_bge;
  assign _04_ = operation_bltu & (* src = "./core/bcu.v:87.11-87.39" *) result_bltu;
  assign _05_ = operation_bgeu & (* src = "./core/bcu.v:88.11-88.39" *) result_bgeu;
  assign \__MUX_ternary/core/bcuv682429__WIRE_eq/core/bcuv682428_Y  = a_i == (* src = "./core/bcu.v:68.21-68.31" *) b_i;
  assign operation_beq = ! (* src = "./core/bcu.v:75.23-75.48" *) operation_sel_i;
  assign operation_bne = operation_sel_i == (* src = "./core/bcu.v:76.23-76.48" *) 3'h1;
  assign operation_blt = operation_sel_i == (* src = "./core/bcu.v:77.23-77.48" *) 3'h4;
  assign operation_bge = operation_sel_i == (* src = "./core/bcu.v:78.23-78.48" *) 3'h5;
  assign operation_bltu = operation_sel_i == (* src = "./core/bcu.v:79.24-79.49" *) 3'h6;
  assign operation_bgeu = operation_sel_i == (* src = "./core/bcu.v:80.24-80.49" *) 3'h7;
  assign \__MUX_ternary/core/bcuv712435__WIRE_ge/core/bcuv712434_Y  = $signed(a_i) >= (* src = "./core/bcu.v:71.21-71.41" *) $signed(b_i);
  assign \__MUX_ternary/core/bcuv732439__WIRE_ge/core/bcuv732438_Y  = a_i >= (* src = "./core/bcu.v:73.21-73.31" *) b_i;
  assign \__MUX_ternary/core/bcuv702433__WIRE_lt/core/bcuv702432_Y  = $signed(a_i) < (* src = "./core/bcu.v:70.21-70.40" *) $signed(b_i);
  assign \__MUX_ternary/core/bcuv722437__WIRE_lt/core/bcuv722436_Y  = a_i < (* src = "./core/bcu.v:72.21-72.30" *) b_i;
  assign \__MUX_ternary/core/bcuv692431__WIRE_ne/core/bcuv692430_Y  = a_i != (* src = "./core/bcu.v:69.21-69.31" *) b_i;
  assign _06_ = _00_ | (* src = "./core/bcu.v:83.8-84.39" *) _01_;
  assign _07_ = _06_ | (* src = "./core/bcu.v:83.8-85.39" *) _02_;
  assign _08_ = _07_ | (* src = "./core/bcu.v:83.8-86.39" *) _03_;
  assign _09_ = _08_ | (* src = "./core/bcu.v:83.8-87.40" *) _04_;
  assign compare_result_o = _09_ | (* src = "./core/bcu.v:83.8-88.40" *) _05_;
  assign { _10_[31:1], result_beq } = \__MUX_ternary/core/bcuv682429__WIRE_eq/core/bcuv682428_Y  ? (* src = "./core/bcu.v:68.20-68.40" *) 32'd1 : 32'd0;
  assign { _11_[31:1], result_bne } = \__MUX_ternary/core/bcuv692431__WIRE_ne/core/bcuv692430_Y  ? (* src = "./core/bcu.v:69.20-69.40" *) 32'd1 : 32'd0;
  assign { _12_[31:1], result_blt } = \__MUX_ternary/core/bcuv702433__WIRE_lt/core/bcuv702432_Y  ? (* src = "./core/bcu.v:70.20-70.49" *) 32'd1 : 32'd0;
  assign { _13_[31:1], result_bge } = \__MUX_ternary/core/bcuv712435__WIRE_ge/core/bcuv712434_Y  ? (* src = "./core/bcu.v:71.20-71.50" *) 32'd1 : 32'd0;
  assign { _14_[31:1], result_bltu } = \__MUX_ternary/core/bcuv722437__WIRE_lt/core/bcuv722436_Y  ? (* src = "./core/bcu.v:72.20-72.39" *) 32'd1 : 32'd0;
  assign { _15_[31:1], result_bgeu } = \__MUX_ternary/core/bcuv732439__WIRE_ge/core/bcuv732438_Y  ? (* src = "./core/bcu.v:73.20-73.40" *) 32'd1 : 32'd0;
  assign _10_[0] = result_beq;
  assign _11_[0] = result_bne;
  assign _12_[0] = result_blt;
  assign _13_[0] = result_bge;
  assign _14_[0] = result_bltu;
  assign _15_[0] = result_bgeu;
endmodule

(* hdlname = "\\core_top" *)
(* dynports =  1  *)
(* top =  1  *)
(* src = "./core/core_top.v:84.1-972.10" *)
module core_top(clk_i, rst_i, code_addr_o, code_req_o, data_o, data_addr_o, data_rw_o, data_byte_enable_o, data_req_o, data_is_amo_o, data_amo_type_o, cache_flush_o, auto_cover_out, fuzz_in, metaReset);
  (* src = "./core/core_top.v:391.1-416.4" *)
  wire [1:0] _00_;
  (* src = "./core/core_top.v:339.1-354.4" *)
  wire [31:0] _01_;
  (* src = "./core/core_top.v:391.1-416.4" *)
  wire [1:0] _02_;
  (* src = "./core/core_top.v:339.1-354.4" *)
  wire [31:0] _03_;
  (* src = "./core/core_top.v:391.1-416.4" *)
  wire [1:0] _04_;
  (* src = "./core/core_top.v:339.1-354.4" *)
  wire [31:0] _05_;
  (* src = "./core/core_top.v:339.1-354.4" *)
  wire [31:0] _06_;
  (* src = "./core/core_top.v:947.16-947.38" *)
  wire _07_;
  (* src = "./core/core_top.v:948.16-948.38" *)
  wire _08_;
  (* src = "./core/core_top.v:949.16-949.38" *)
  wire _09_;
  wire _10_;
  wire _11_;
  wire [1:0] _12_;
  wire [1:0] _13_;
  (* src = "./core/core_top.v:322.28-322.44" *)
  wire _14_;
  (* src = "./core/core_top.v:300.24-300.58" *)
  wire _15_;
  (* src = "./core/core_top.v:570.33-570.64" *)
  wire _16_;
  (* src = "./core/core_top.v:322.50-322.65" *)
  wire _17_;
  (* src = "./core/core_top.v:395.39-395.59" *)
  wire _18_;
  (* src = "./core/core_top.v:570.54-570.64" *)
  wire _19_;
  (* src = "./core/core_top.v:300.23-300.77" *)
  wire _20_;
  (* src = "./core/core_top.v:395.18-395.34" *)
  wire _21_;
  (* src = "./core/core_top.v:570.14-570.65" *)
  wire _22_;
  (* src = "./core/core_top.v:605.14-605.40" *)
  wire _23_;
  (* src = "./core/core_top.v:638.14-638.40" *)
  wire _24_;
  (* src = "./core/core_top.v:737.14-737.40" *)
  wire _25_;
  (* src = "./core/core_top.v:878.14-878.40" *)
  wire _26_;
  (* src = "./core/core_top.v:300.44-300.57" *)
  wire _27_;
  (* src = "./core/core_top.v:323.25-323.61" *)
  wire _28_;
  wire [1:0] _29_;
  (* core_top = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \__MUX_autopmuxtreecc65recursive_mux_generator10061__WIRE_eq/core/core_topv43638_Y ;
  (* core_top = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \__MUX_autopmuxtreecc65recursive_mux_generator10063__WIRE_eq/core/core_topv42134_Y ;
  (* core_top = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire __MUX_autopmuxtreecc65recursive_mux_generator10067__WIRE_autortlilcc2430Or10066;
  (* core_top = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \__MUX_procmux8403__WIRE_logic_or/core/core_topv40131_Y ;
  (* core_top = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire __MUX_procmux8412__WIRE_data_ready_i;
  (* core_top = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire __MUX_procmux8414__WIRE_procmux8408_CMP;
  (* core_top = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \__MUX_procmux8420__WIRE_logic_and/core/core_topv39530_Y ;
  (* core_top = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire __MUX_procmux8433__WIRE_code_ready_i;
  (* core_top = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire __MUX_procmux8451__WIRE_fet_valid2dec;
  (* core_top = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire __MUX_procmux8466__WIRE_dec_fetch_valid2exe;
  (* core_top = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire __MUX_procmux8478__WIRE_exe_fetch_valid2mem;
  (* core_top = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire __MUX_procmux8487__WIRE_mem_fetch_valid2wbk;
  (* core_top = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire __MUX_procmux8492__WIRE_wbk_xcpt_valid2csr;
  (* mux_wire = 32'd1 *)
  (* port = 32'd1 *)
  output [309:0] auto_cover_out;
  wire [309:0] auto_cover_out;
  (* src = "./core/core_top.v:269.35-269.54" *)
  wire bpu_branch_decision;
  (* src = "./core/core_top.v:269.19-269.33" *)
  wire bpu_branch_hit;
  (* src = "./core/core_top.v:270.19-270.41" *)
  wire [31:0] bpu_branch_target_addr;
  (* src = "./core/core_top.v:117.27-117.40" *)
  output cache_flush_o;
  wire cache_flush_o;
  (* src = "./core/core_top.v:91.27-91.32" *)
  input clk_i;
  wire clk_i;
  (* src = "./core/core_top.v:101.27-101.38" *)
  output [31:0] code_addr_o;
  wire [31:0] code_addr_o;
  (* src = "./core/core_top.v:99.27-99.33" *)
  wire [31:0] code_i;
  (* src = "./core/core_top.v:100.27-100.39" *)
  wire code_ready_i;
  (* src = "./core/core_top.v:102.27-102.37" *)
  output code_req_o;
  wire code_req_o;
  (* src = "./core/core_top.v:264.19-264.31" *)
  wire [31:0] csr_data2dec;
  (* src = "./core/core_top.v:261.19-261.32" *)
  wire csr_irq_taken;
  (* src = "./core/core_top.v:262.19-262.34" *)
  reg csr_irq_taken_r;
  (* src = "./core/core_top.v:263.19-263.33" *)
  wire [31:0] csr_pc_handler;
  (* src = "./core/core_top.v:265.19-265.31" *)
  wire csr_sys_jump;
  (* src = "./core/core_top.v:266.19-266.36" *)
  wire [31:0] csr_sys_jump_data;
  (* src = "./core/core_top.v:308.11-308.13" *)
  reg [1:0] dS;
  (* src = "./core/core_top.v:308.15-308.21" *)
  wire [1:0] dS_nxt;
  (* src = "./core/core_top.v:114.27-114.42" *)
  wire data_addr_ext_i;
  (* src = "./core/core_top.v:108.27-108.38" *)
  output [31:0] data_addr_o;
  wire [31:0] data_addr_o;
  (* src = "./core/core_top.v:113.27-113.42" *)
  output [4:0] data_amo_type_o;
  wire [4:0] data_amo_type_o;
  (* src = "./core/core_top.v:110.27-110.45" *)
  output [3:0] data_byte_enable_o;
  wire [3:0] data_byte_enable_o;
  (* src = "./core/core_top.v:105.27-105.33" *)
  wire [31:0] data_i;
  (* src = "./core/core_top.v:112.27-112.40" *)
  output data_is_amo_o;
  wire data_is_amo_o;
  (* src = "./core/core_top.v:107.27-107.33" *)
  output [31:0] data_o;
  wire [31:0] data_o;
  (* src = "./core/core_top.v:427.19-427.32" *)
  wire [31:0] data_read2wbk;
  (* src = "./core/core_top.v:426.19-426.32" *)
  reg [31:0] data_read_reg;
  (* src = "./core/core_top.v:106.27-106.39" *)
  wire data_ready_i;
  (* src = "./core/core_top.v:111.27-111.37" *)
  output data_req_o;
  wire data_req_o;
  (* src = "./core/core_top.v:109.27-109.36" *)
  output data_rw_o;
  wire data_rw_o;
  (* src = "./core/core_top.v:169.19-169.41" *)
  wire dec_alu_muldiv_sel2exe;
  (* src = "./core/core_top.v:172.19-172.35" *)
  wire [4:0] dec_amo_type2exe;
  (* src = "./core/core_top.v:142.35-142.54" *)
  wire dec_branch_decision;
  (* src = "./core/core_top.v:142.19-142.33" *)
  wire dec_branch_hit;
  (* src = "./core/core_top.v:158.19-158.35" *)
  wire [11:0] dec_csr_addr2csr;
  (* src = "./core/core_top.v:154.19-154.35" *)
  wire [11:0] dec_csr_addr2fwd;
  (* src = "./core/core_top.v:155.19-155.35" *)
  wire [31:0] dec_csr_data2fwd;
  (* src = "./core/core_top.v:165.19-165.34" *)
  wire [4:0] dec_csr_imm2exe;
  (* src = "./core/core_top.v:164.19-164.33" *)
  wire dec_csr_we2exe;
  (* src = "./core/core_top.v:166.53-166.70" *)
  wire [1:0] dec_dsize_sel2exe;
  (* src = "./core/core_top.v:174.19-174.38" *)
  wire dec_fetch_valid2exe;
  (* src = "./core/core_top.v:163.19-163.30" *)
  wire [31:0] dec_imm2exe;
  (* src = "./core/core_top.v:166.19-166.34" *)
  wire [1:0] dec_inA_sel2exe;
  (* src = "./core/core_top.v:166.36-166.51" *)
  wire [1:0] dec_inB_sel2exe;
  (* src = "./core/core_top.v:171.19-171.33" *)
  wire dec_is_amo2exe;
  (* src = "./core/core_top.v:141.19-141.32" *)
  wire dec_is_branch;
  (* src = "./core/core_top.v:170.19-170.36" *)
  wire dec_is_fencei2exe;
  (* src = "./core/core_top.v:141.34-141.44" *)
  wire dec_is_jal;
  (* src = "./core/core_top.v:141.46-141.57" *)
  wire dec_is_jalr;
  (* src = "./core/core_top.v:145.19-145.38" *)
  wire dec_load_hazard2plc;
  (* src = "./core/core_top.v:167.40-167.61" *)
  wire [2:0] dec_operation_sel2exe;
  (* src = "./core/core_top.v:140.19-140.25" *)
  wire [31:0] dec_pc;
  (* src = "./core/core_top.v:161.19-161.34" *)
  wire [4:0] dec_rd_addr2exe;
  (* src = "./core/core_top.v:687.11-687.17" *)
  wire dec_re;
  (* src = "./core/core_top.v:167.19-167.38" *)
  wire [2:0] dec_regfile_sel2exe;
  (* src = "./core/core_top.v:168.19-168.37" *)
  wire dec_regfile_we2exe;
  (* src = "./core/core_top.v:152.19-152.35" *)
  wire [4:0] dec_rs1_addr2fwd;
  (* src = "./core/core_top.v:149.19-149.35" *)
  wire [4:0] dec_rs1_addr2rfu;
  (* src = "./core/core_top.v:153.19-153.35" *)
  wire [31:0] dec_rs1_data2fwd;
  (* src = "./core/core_top.v:152.37-152.53" *)
  wire [4:0] dec_rs2_addr2fwd;
  (* src = "./core/core_top.v:149.37-149.53" *)
  wire [4:0] dec_rs2_addr2rfu;
  (* src = "./core/core_top.v:153.37-153.53" *)
  wire [31:0] dec_rs2_data2fwd;
  (* src = "./core/core_top.v:169.43-169.60" *)
  wire dec_shift_sel2exe;
  (* src = "./core/core_top.v:168.39-168.57" *)
  wire dec_signex_sel2exe;
  (* src = "./core/core_top.v:175.19-175.35" *)
  wire dec_sys_jump2exe;
  (* src = "./core/core_top.v:176.19-176.44" *)
  wire [1:0] dec_sys_jump_csr_addr2exe;
  (* src = "./core/core_top.v:146.19-146.40" *)
  wire dec_unsupported_instr;
  (* src = "./core/core_top.v:686.11-686.17" *)
  wire dec_we;
  (* src = "./core/core_top.v:178.19-178.37" *)
  wire [3:0] dec_xcpt_cause2exe;
  (* src = "./core/core_top.v:179.19-179.36" *)
  wire [31:0] dec_xcpt_tval2exe;
  (* src = "./core/core_top.v:177.19-177.37" *)
  wire dec_xcpt_valid2exe;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \decode-Decode___MUX_procmux7137__WIRE_rv32_ecall ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \decode-Decode___MUX_procmux7454__WIRE_stall_i ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \decode-Decode___MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \decode-Decode___MUX_procmux7460__WIRE_rv32_csr ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \decode-Decode___MUX_procmux7475__WIRE_or/core/decodev469382_Y ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \decode-Decode___MUX_procmux7487__WIRE_or/core/decodev467381_Y ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \decode-Decode___MUX_procmux7496__WIRE_or/core/decodev465380_Y ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \decode-Decode___MUX_procmux7502__WIRE_or/core/decodev463379_Y ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \decode-Decode___MUX_procmux7505__WIRE_or/core/decodev455377_Y ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \decode-Decode___MUX_procmux7511__WIRE_rv32_sub ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \decode-Decode___MUX_procmux7514__WIRE_or/core/decodev445374_Y ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \decode-Decode___MUX_procmux7520__WIRE_or/core/decodev443373_Y ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \decode-Decode___MUX_ternary/core/decodev384323__WIRE_eq/core/decodev384320_Y ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \decode-Decode___MUX_ternary/core/decodev385322__WIRE_eq/core/decodev385321_Y ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \decode-Decode___MUX_ternary/core/decodev417344__WIRE_rv32_imm_selu ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \decode-Decode___MUX_ternary/core/decodev487388__WIRE_flush_i ;
  (* src = "./core/core_top.v:194.19-194.43" *)
  wire exe_branch_misprediction;
  (* src = "./core/core_top.v:185.19-185.40" *)
  wire [31:0] exe_branch_restore_pc;
  (* src = "./core/core_top.v:184.19-184.35" *)
  wire exe_branch_taken;
  (* src = "./core/core_top.v:185.42-185.64" *)
  wire [31:0] exe_branch_target_addr;
  (* src = "./core/core_top.v:199.19-199.31" *)
  wire [11:0] exe_csr_addr;
  (* src = "./core/core_top.v:200.19-200.31" *)
  wire [31:0] exe_csr_data;
  (* src = "./core/core_top.v:198.19-198.29" *)
  wire exe_csr_we;
  (* src = "./core/core_top.v:189.19-189.36" *)
  wire [1:0] exe_dsize_sel2mem;
  (* src = "./core/core_top.v:202.19-202.38" *)
  wire exe_fetch_valid2mem;
  (* src = "./core/core_top.v:186.19-186.36" *)
  wire exe_is_branch2bpu;
  (* src = "./core/core_top.v:191.51-191.61" *)
  wire [31:0] exe_p_data;
  (* src = "./core/core_top.v:208.19-208.29" *)
  wire [31:0] exe_pc2mem;
  (* src = "./core/core_top.v:192.19-192.34" *)
  wire [4:0] exe_rd_addr2wbk;
  (* src = "./core/core_top.v:187.27-187.33" *)
  wire exe_re;
  (* src = "./core/core_top.v:193.19-193.44" *)
  wire [2:0] exe_regfile_input_sel2wbk;
  (* src = "./core/core_top.v:188.19-188.37" *)
  wire exe_regfile_we2wbk;
  (* src = "./core/core_top.v:191.19-191.35" *)
  wire [31:0] exe_rs2_data2mem;
  (* src = "./core/core_top.v:190.19-190.37" *)
  wire exe_signex_sel2wbk;
  (* src = "./core/core_top.v:203.19-203.35" *)
  wire exe_sys_jump2mem;
  (* src = "./core/core_top.v:204.19-204.44" *)
  wire [1:0] exe_sys_jump_csr_addr2mem;
  (* src = "./core/core_top.v:206.19-206.37" *)
  wire [3:0] exe_xcpt_cause2mem;
  (* src = "./core/core_top.v:207.19-207.36" *)
  wire [31:0] exe_xcpt_tval2mem;
  (* src = "./core/core_top.v:205.19-205.37" *)
  wire exe_xcpt_valid2mem;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9847__WIRE_procmux7678_CMP ;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9849__WIRE_procmux7677_CMP ;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9855__WIRE_procmux7672_CMP ;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9857__WIRE_procmux7674_CMP ;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9861__WIRE_autortlilcc2430Or9860 ;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9867__WIRE_procmux7667_CMP ;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9869__WIRE_procmux7669_CMP ;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9873__WIRE_autortlilcc2430Or9872 ;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9879__WIRE_procmux7524_CMP ;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9881__WIRE_procmux7526_CMP ;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9885__WIRE_autortlilcc2430Or9884 ;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute___MUX_ternary/core/executev194193__WIRE_or/core/executev194192_Y ;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute___MUX_ternary/core/executev247204__WIRE_alu_muldiv_sel_i ;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute___MUX_ternary/core/executev254207__WIRE_operation_sel_i ;
  (* alu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_alu-ALU___MUX_ternary/core/aluv772573__WIRE_lt/core/aluv772572_Y ;
  (* alu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_alu-ALU___MUX_ternary/core/aluv782575__WIRE_lt/core/aluv782574_Y ;
  (* alu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_alu-ALU___MUX_ternary/core/aluv802579__WIRE_shift_sel_i ;
  (* bcu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_bcu-BCU___MUX_ternary/core/bcuv682429__WIRE_eq/core/bcuv682428_Y ;
  (* bcu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_bcu-BCU___MUX_ternary/core/bcuv692431__WIRE_ne/core/bcuv692430_Y ;
  (* bcu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_bcu-BCU___MUX_ternary/core/bcuv702433__WIRE_lt/core/bcuv702432_Y ;
  (* bcu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_bcu-BCU___MUX_ternary/core/bcuv712435__WIRE_ge/core/bcuv712434_Y ;
  (* bcu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_bcu-BCU___MUX_ternary/core/bcuv722437__WIRE_lt/core/bcuv722436_Y ;
  (* bcu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_bcu-BCU___MUX_ternary/core/bcuv732439__WIRE_ge/core/bcuv732438_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9383__WIRE_eq/core/muldivv2912542_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9385__WIRE_eq/core/muldivv2912543_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9387__WIRE_eq/core/muldivv2002508_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9389__WIRE_eq/core/muldivv2522520_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9393__WIRE_autortlilcc2403ReduceOr9392 ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_muldiv-MulDiv___MUX_procmux2811__WIRE_logic_or/core/muldivv2912544_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_muldiv-MulDiv___MUX_procmux2814__WIRE_operation_sel_i ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_muldiv-MulDiv___MUX_procmux2816__WIRE_eq/core/muldivv2662524_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_muldiv-MulDiv___MUX_procmux2829__WIRE_is_b_zero ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_muldiv-MulDiv___MUX_procmux2833__WIRE_and/core/muldivv2002509_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_muldiv-MulDiv___MUX_procmux2868__WIRE_or/core/muldivv1662495_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv1162482__WIRE_is_a_neg ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv1172484__WIRE_is_b_neg ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv1302492__WIRE_or/core/muldivv1302487_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv1662497__WIRE_req_i ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv1682498__WIRE_is_calc_done ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv1742500__WIRE_stall_i ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv2582522__WIRE_div_sub ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv2632523__WIRE_mull ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv2712528__WIRE_signed_adjust ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv2762540__WIRE_or/core/muldivv2762529_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv2772539__WIRE_operation_mulhsu ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv852563__WIRE_a_i ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv852569__WIRE_b_i ;
  (* src = "./core/core_top.v:120.27-120.36" *)
  wire ext_irq_i;
  (* src = "./core/core_top.v:129.35-129.54" *)
  wire fet_branch_decision;
  (* src = "./core/core_top.v:129.19-129.33" *)
  wire fet_branch_hit;
  (* src = "./core/core_top.v:128.19-128.32" *)
  wire [31:0] fet_instr2dec;
  (* src = "./core/core_top.v:128.34-128.44" *)
  wire [31:0] fet_pc2dec;
  (* src = "./core/core_top.v:131.19-131.32" *)
  wire fet_valid2dec;
  (* src = "./core/core_top.v:133.19-133.37" *)
  wire [3:0] fet_xcpt_cause2dec;
  (* src = "./core/core_top.v:134.19-134.36" *)
  wire [31:0] fet_xcpt_tval2dec;
  (* src = "./core/core_top.v:132.19-132.37" *)
  wire fet_xcpt_valid2dec;
  (* fetch = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \fetch-Fetch___MUX_procmux7072__WIRE_flush_i ;
  (* fetch = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \fetch-Fetch___MUX_procmux7107__WIRE_flush_delay ;
  (* fetch = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \fetch-Fetch___MUX_procmux7119__WIRE_stall_delay ;
  (* fetch = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \fetch-Fetch___MUX_procmux7128__WIRE_fetch_valid_o ;
  (* fetch = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \fetch-Fetch___MUX_procmux7134__WIRE_rst_i ;
  (* forwarding_unit = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \forwarding_unit-Forwarding_Unit___MUX_ternary/core/forwarding_unitv1282413__WIRE_rs1_EXE_MEM_fwd ;
  (* forwarding_unit = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \forwarding_unit-Forwarding_Unit___MUX_ternary/core/forwarding_unitv1292412__WIRE_rs1_MEM_WB_fwd ;
  (* forwarding_unit = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \forwarding_unit-Forwarding_Unit___MUX_ternary/core/forwarding_unitv1332415__WIRE_rs2_EXE_MEM_fwd ;
  (* forwarding_unit = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \forwarding_unit-Forwarding_Unit___MUX_ternary/core/forwarding_unitv1342414__WIRE_rs2_MEM_WB_fwd ;
  (* forwarding_unit = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \forwarding_unit-Forwarding_Unit___MUX_ternary/core/forwarding_unitv1382417__WIRE_csr_EXE_MEM_fwd ;
  (* forwarding_unit = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \forwarding_unit-Forwarding_Unit___MUX_ternary/core/forwarding_unitv1392416__WIRE_csr_MEM_WB_fwd ;
  (* fuzz_wire = 32'd1 *)
  (* port = 32'd1 *)
  input [102:0] fuzz_in;
  wire [102:0] fuzz_in;
  (* src = "./core/core_top.v:255.19-255.35" *)
  wire [31:0] fwd_csr_data2exe;
  (* src = "./core/core_top.v:254.19-254.26" *)
  wire [31:0] fwd_rs1;
  (* src = "./core/core_top.v:254.28-254.35" *)
  wire [31:0] fwd_rs2;
  (* src = "./core/core_top.v:307.5-307.7" *)
  reg iS;
  (* src = "./core/core_top.v:307.9-307.15" *)
  wire iS_nxt;
  (* src = "./core/core_top.v:96.27-96.41" *)
  wire [31:0] init_pc_addr_i;
  (* src = "./core/core_top.v:273.19-273.29" *)
  wire irq_enable;
  (* src = "./core/core_top.v:274.19-274.28" *)
  wire irq_taken;
  (* src = "./core/core_top.v:215.19-215.38" *)
  wire mem_align_exception;
  (* src = "./core/core_top.v:217.19-217.38" *)
  wire mem_fetch_valid2wbk;
  (* src = "./core/core_top.v:223.19-223.29" *)
  wire [31:0] mem_pc2wbk;
  (* src = "./core/core_top.v:218.19-218.35" *)
  wire mem_sys_jump2wbk;
  (* src = "./core/core_top.v:219.19-219.44" *)
  wire [1:0] mem_sys_jump_csr_addr2wbk;
  (* src = "./core/core_top.v:221.19-221.37" *)
  wire [3:0] mem_xcpt_cause2wbk;
  (* src = "./core/core_top.v:222.19-222.36" *)
  wire [31:0] mem_xcpt_tval2wbk;
  (* src = "./core/core_top.v:220.19-220.37" *)
  wire mem_xcpt_valid2wbk;
  (* memory = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \memory-Memory___MUX_autopmuxtreecc65recursive_mux_generator9887__WIRE_procmux7683_CMP ;
  (* memory = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \memory-Memory___MUX_autopmuxtreecc65recursive_mux_generator9889__WIRE_procmux7721_CMP ;
  (* memory = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \memory-Memory___MUX_autopmuxtreecc65recursive_mux_generator9893__WIRE_autortlilcc2430Or9892 ;
  (* memory = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \memory-Memory___MUX_autopmuxtreecc65recursive_mux_generator9915__WIRE_procmux7741_CMP ;
  (* memory = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \memory-Memory___MUX_autopmuxtreecc65recursive_mux_generator9917__WIRE_procmux7681_CMP ;
  (* memory = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \memory-Memory___MUX_autopmuxtreecc65recursive_mux_generator9921__WIRE_autortlilcc2430Or9920 ;
  (* memory = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \memory-Memory___MUX_autopmuxtreecc65recursive_mux_generator9953__WIRE_procmux7697_CMP ;
  (* memory = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \memory-Memory___MUX_procmux7699__WIRE_procmux7700_CMP ;
  (* memory = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \memory-Memory___MUX_procmux7744__WIRE_procmux7745_CMP ;
  (* memory = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \memory-Memory___MUX_procmux7782__WIRE_logic_and/core/memoryv105184_Y ;
  (* memory = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \memory-Memory___MUX_ternary/core/memoryv108185__WIRE_we_i ;
  (* meta_reset = 32'd1 *)
  input metaReset;
  wire metaReset;
  (* src = "./core/core_top.v:275.19-275.30" *)
  wire [31:0] nxt_unwb_PC;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9399__WIRE_procmux6850_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9401__WIRE_procmux6852_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9405__WIRE_autortlilcc2430Or9404 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9407__WIRE_procmux6854_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9409__WIRE_procmux6856_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9413__WIRE_autortlilcc2430Or9412 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9417__WIRE_autortlilcc2403ReduceOr9416 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9419__WIRE_procmux6858_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9421__WIRE_procmux6860_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9425__WIRE_autortlilcc2430Or9424 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9427__WIRE_procmux6862_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9429__WIRE_procmux6864_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9433__WIRE_autortlilcc2430Or9432 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9437__WIRE_autortlilcc2403ReduceOr9436 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9441__WIRE_autortlilcc2403ReduceOr9440 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9443__WIRE_procmux6866_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9445__WIRE_procmux6868_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9449__WIRE_autortlilcc2430Or9448 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9451__WIRE_procmux6870_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9453__WIRE_procmux6872_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9457__WIRE_autortlilcc2430Or9456 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9461__WIRE_autortlilcc2403ReduceOr9460 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9463__WIRE_procmux6874_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9465__WIRE_procmux6876_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9469__WIRE_autortlilcc2430Or9468 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9471__WIRE_procmux6878_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9473__WIRE_procmux6880_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9477__WIRE_autortlilcc2430Or9476 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9481__WIRE_autortlilcc2403ReduceOr9480 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9485__WIRE_autortlilcc2403ReduceOr9484 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9489__WIRE_autortlilcc2403ReduceOr9488 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9491__WIRE_procmux6882_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9493__WIRE_procmux6884_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9497__WIRE_autortlilcc2430Or9496 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9499__WIRE_procmux6886_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9501__WIRE_procmux6888_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9505__WIRE_autortlilcc2430Or9504 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9509__WIRE_autortlilcc2403ReduceOr9508 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9511__WIRE_procmux6890_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9513__WIRE_procmux6892_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9517__WIRE_autortlilcc2430Or9516 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9519__WIRE_procmux6894_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9521__WIRE_procmux6896_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9525__WIRE_autortlilcc2430Or9524 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9529__WIRE_autortlilcc2403ReduceOr9528 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9533__WIRE_autortlilcc2403ReduceOr9532 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9535__WIRE_procmux6898_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9537__WIRE_procmux6900_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9541__WIRE_autortlilcc2430Or9540 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9543__WIRE_procmux6902_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9545__WIRE_procmux6904_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9549__WIRE_autortlilcc2430Or9548 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9553__WIRE_autortlilcc2403ReduceOr9552 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9555__WIRE_procmux6906_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9557__WIRE_procmux6908_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9561__WIRE_autortlilcc2430Or9560 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9563__WIRE_procmux6910_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9565__WIRE_procmux6912_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9569__WIRE_autortlilcc2430Or9568 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9573__WIRE_autortlilcc2403ReduceOr9572 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9577__WIRE_autortlilcc2403ReduceOr9576 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9581__WIRE_autortlilcc2403ReduceOr9580 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9585__WIRE_autortlilcc2403ReduceOr9584 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9591__WIRE_procmux6785_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9593__WIRE_procmux6787_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9597__WIRE_autortlilcc2430Or9596 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9599__WIRE_procmux6789_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9601__WIRE_procmux6791_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9605__WIRE_autortlilcc2430Or9604 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9609__WIRE_autortlilcc2403ReduceOr9608 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9611__WIRE_procmux6793_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9613__WIRE_procmux6795_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9617__WIRE_autortlilcc2430Or9616 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9619__WIRE_procmux6797_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9621__WIRE_procmux6799_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9625__WIRE_autortlilcc2430Or9624 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9629__WIRE_autortlilcc2403ReduceOr9628 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9633__WIRE_autortlilcc2403ReduceOr9632 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9635__WIRE_procmux6801_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9637__WIRE_procmux6803_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9641__WIRE_autortlilcc2430Or9640 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9643__WIRE_procmux6805_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9645__WIRE_procmux6807_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9649__WIRE_autortlilcc2430Or9648 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9653__WIRE_autortlilcc2403ReduceOr9652 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9655__WIRE_procmux6809_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9657__WIRE_procmux6811_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9661__WIRE_autortlilcc2430Or9660 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9663__WIRE_procmux6813_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9665__WIRE_procmux6815_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9669__WIRE_autortlilcc2430Or9668 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9673__WIRE_autortlilcc2403ReduceOr9672 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9677__WIRE_autortlilcc2403ReduceOr9676 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9681__WIRE_autortlilcc2403ReduceOr9680 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9683__WIRE_procmux6817_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9685__WIRE_procmux6819_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9689__WIRE_autortlilcc2430Or9688 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9691__WIRE_procmux6821_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9693__WIRE_procmux6823_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9697__WIRE_autortlilcc2430Or9696 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9701__WIRE_autortlilcc2403ReduceOr9700 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9703__WIRE_procmux6825_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9705__WIRE_procmux6827_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9709__WIRE_autortlilcc2430Or9708 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9711__WIRE_procmux6829_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9713__WIRE_procmux6831_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9717__WIRE_autortlilcc2430Or9716 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9721__WIRE_autortlilcc2403ReduceOr9720 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9725__WIRE_autortlilcc2403ReduceOr9724 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9727__WIRE_procmux6833_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9729__WIRE_procmux6835_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9733__WIRE_autortlilcc2430Or9732 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9735__WIRE_procmux6837_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9737__WIRE_procmux6839_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9741__WIRE_autortlilcc2430Or9740 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9745__WIRE_autortlilcc2403ReduceOr9744 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9747__WIRE_procmux6841_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9749__WIRE_procmux6843_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9753__WIRE_autortlilcc2430Or9752 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9755__WIRE_procmux6845_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9757__WIRE_procmux6847_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9761__WIRE_autortlilcc2430Or9760 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9765__WIRE_autortlilcc2403ReduceOr9764 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9769__WIRE_autortlilcc2403ReduceOr9768 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9773__WIRE_autortlilcc2403ReduceOr9772 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9777__WIRE_autortlilcc2403ReduceOr9776 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9781__WIRE_procmux3080_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9785__WIRE_autortlilcc2430Or9784 ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9795__WIRE_procmux2938_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_procmux3006__WIRE_procmux3007_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_procmux3154__WIRE_branch_taken_i ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_procmux3156__WIRE_procmux3157_CMP ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_procmux3490__WIRE_exe_is_branch_i ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_procmux3691__WIRE_we ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_procmux3865__WIRE_stall_i ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_procmux4936__WIRE_rst_i ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_ternary/core/bpuv127835__WIRE_eq/core/bpuv127833_Y ;
  (* \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\distri_ram  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit_paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcdistri_ram-bpu_pc_history___MUX_procmux8501__WIRE_we_i ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10001__WIRE_procmux8198_CMP ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10005__WIRE_autortlilcc2403ReduceOr10004 ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10007__WIRE_procmux8202_CMP ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10009__WIRE_procmux8201_CMP ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10011__WIRE_procmux8205_CMP ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10013__WIRE_procmux8204_CMP ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10017__WIRE_autortlilcc2403ReduceOr10016 ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10021__WIRE_autortlilcc2403ReduceOr10020 ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10023__WIRE_procmux8208_CMP ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10025__WIRE_procmux8207_CMP ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10027__WIRE_procmux8211_CMP ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10029__WIRE_procmux8210_CMP ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10033__WIRE_autortlilcc2403ReduceOr10032 ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10035__WIRE_procmux8214_CMP ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10037__WIRE_procmux8213_CMP ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10039__WIRE_procmux8217_CMP ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10041__WIRE_procmux8216_CMP ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10045__WIRE_autortlilcc2403ReduceOr10044 ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10049__WIRE_autortlilcc2403ReduceOr10048 ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10053__WIRE_autortlilcc2403ReduceOr10052 ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator9995__WIRE_procmux8196_CMP ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator9997__WIRE_procmux8195_CMP ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator9999__WIRE_procmux8199_CMP ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux7949__WIRE_irq_taken_o ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux7952__WIRE_is_sret ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux7955__WIRE_is_mret ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux7961__WIRE_eq/core/csr_filev925160_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux7968__WIRE_logic_or/core/csr_filev925162_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux7973__WIRE_trap_to_M ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux7981__WIRE_and/core/csr_filev892153_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8040__WIRE_and/core/csr_filev886152_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8091__WIRE_and/core/csr_filev880151_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8132__WIRE_mstatus_r ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8164__WIRE_eq/core/csr_filev912154_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8188__WIRE_xcpt_valid_i ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8235__WIRE_logic_and/core/csr_filev750145_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8238__WIRE_logic_or/core/csr_filev51797_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8240__WIRE_logic_and/core/csr_filev740130_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8246__WIRE_logic_and/core/csr_filev688119_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8248__WIRE_logic_and/core/csr_filev716124_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8256__WIRE_logic_and/core/csr_filev692121_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8281__WIRE_procmux8282_CMP ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8283__WIRE_csr_we_i ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8291__WIRE_procmux8292_CMP ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8308__WIRE_logic_and/core/csr_filev52599_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8313__WIRE_logic_and/core/csr_filev51584_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8325__WIRE_logic_and/core/csr_filev45674_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8327__WIRE_logic_and/core/csr_filev48479_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8335__WIRE_logic_and/core/csr_filev46076_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8354__WIRE_logic_and/core/csr_filev37762_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8364__WIRE_eq/core/csr_filev35659_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8367__WIRE_eq/core/csr_filev35258_Y ;
  (* \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  = 32'd1 *)
  (* mux_wire = 32'd1 *)
  wire \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8377__WIRE_sys_jump_i ;
  (* src = "./core/core_top.v:248.21-248.34" *)
  wire plc_flush2dec;
  (* src = "./core/core_top.v:248.36-248.49" *)
  wire plc_flush2exe;
  (* src = "./core/core_top.v:248.6-248.19" *)
  wire plc_flush2fet;
  (* src = "./core/core_top.v:248.51-248.64" *)
  wire plc_flush2wbk;
  (* src = "./core/core_top.v:276.19-276.34" *)
  wire [1:0] privilege_level;
  (* mux_wire = 32'd1 *)
  (* program_counter = 32'd1 *)
  wire \program_counter-Program_Counter___MUX_procmux7048__WIRE_and/core/program_counterv142410_Y ;
  (* mux_wire = 32'd1 *)
  (* program_counter = 32'd1 *)
  wire \program_counter-Program_Counter___MUX_procmux7051__WIRE_sys_jump_i ;
  (* mux_wire = 32'd1 *)
  (* program_counter = 32'd1 *)
  wire \program_counter-Program_Counter___MUX_procmux7054__WIRE_exe_branch_misprediction_i ;
  (* mux_wire = 32'd1 *)
  (* program_counter = 32'd1 *)
  wire \program_counter-Program_Counter___MUX_procmux7057__WIRE_and/core/program_counterv136408_Y ;
  (* mux_wire = 32'd1 *)
  (* program_counter = 32'd1 *)
  wire \program_counter-Program_Counter___MUX_procmux7060__WIRE_is_fencei_i ;
  (* mux_wire = 32'd1 *)
  (* program_counter = 32'd1 *)
  wire \program_counter-Program_Counter___MUX_procmux7063__WIRE_irq_taken_i ;
  (* mux_wire = 32'd1 *)
  (* program_counter = 32'd1 *)
  wire \program_counter-Program_Counter___MUX_procmux7066__WIRE_stall_i ;
  (* mux_wire = 32'd1 *)
  (* program_counter = 32'd1 *)
  wire \program_counter-Program_Counter___MUX_procmux7069__WIRE_rst_i ;
  (* mux_wire = 32'd1 *)
  (* program_counter = 32'd1 *)
  wire \program_counter-Program_Counter___MUX_ternary/core/program_counterv139409__WIRE_dec_branch_decision_i ;
  (* mux_wire = 32'd1 *)
  (* reg_file = 32'd1 *)
  wire \reg_file-Register_File___MUX_procmux6922__WIRE_we ;
  (* mux_wire = 32'd1 *)
  (* reg_file = 32'd1 *)
  wire \reg_file-Register_File___MUX_procmux7036__WIRE_rst_i ;
  (* mux_wire = 32'd1 *)
  (* reg_file = 32'd1 *)
  wire \reg_file-Register_File___MUX_ternary/core/reg_filev85449__WIRE_and/core/reg_filev85447_Y ;
  (* mux_wire = 32'd1 *)
  (* reg_file = 32'd1 *)
  wire \reg_file-Register_File___MUX_ternary/core/reg_filev86453__WIRE_and/core/reg_filev86451_Y ;
  (* src = "./core/core_top.v:258.19-258.35" *)
  wire [31:0] rfu_rs1_data2dec;
  (* src = "./core/core_top.v:258.37-258.53" *)
  wire [31:0] rfu_rs2_data2dec;
  (* src = "./core/core_top.v:92.27-92.32" *)
  input rst_i;
  wire rst_i;
  (* src = "./core/core_top.v:122.27-122.36" *)
  wire sft_irq_i;
  (* src = "./core/core_top.v:318.6-318.22" *)
  wire stall_data_fetch;
  (* src = "./core/core_top.v:315.6-315.23" *)
  wire stall_data_hazard;
  (* src = "./core/core_top.v:316.6-316.20" *)
  wire stall_from_exe;
  (* src = "./core/core_top.v:93.27-93.34" *)
  (* unused_bits = "0" *)
  wire stall_i;
  (* src = "./core/core_top.v:317.6-317.23" *)
  wire stall_instr_fetch;
  (* src = "./core/core_top.v:319.6-319.20" *)
  wire stall_pipeline;
  (* src = "./core/core_top.v:121.27-121.36" *)
  wire tmr_irq_i;
  (* src = "./core/core_top.v:233.19-233.31" *)
  wire [11:0] wbk_csr_addr;
  (* src = "./core/core_top.v:234.19-234.31" *)
  wire [31:0] wbk_csr_data;
  (* src = "./core/core_top.v:232.19-232.29" *)
  wire wbk_csr_we;
  (* src = "./core/core_top.v:236.19-236.38" *)
  (* unused_bits = "0" *)
  wire wbk_fetch_valid2csr;
  (* src = "./core/core_top.v:242.19-242.29" *)
  wire [31:0] wbk_pc2csr;
  (* src = "./core/core_top.v:230.19-230.30" *)
  wire [4:0] wbk_rd_addr;
  (* src = "./core/core_top.v:228.19-228.30" *)
  wire [31:0] wbk_rd_data;
  (* src = "./core/core_top.v:229.19-229.28" *)
  wire wbk_rd_we;
  (* src = "./core/core_top.v:237.19-237.35" *)
  wire wbk_sys_jump2csr;
  (* src = "./core/core_top.v:238.19-238.44" *)
  wire [1:0] wbk_sys_jump_csr_addr2csr;
  (* src = "./core/core_top.v:240.19-240.37" *)
  wire [3:0] wbk_xcpt_cause2csr;
  (* src = "./core/core_top.v:241.19-241.36" *)
  wire [31:0] wbk_xcpt_tval2csr;
  (* src = "./core/core_top.v:239.19-239.37" *)
  wire wbk_xcpt_valid2csr;
  (* mux_wire = 32'd1 *)
  (* writeback = 32'd1 *)
  wire \writeback-Writeback___MUX_autopmuxtreecc65recursive_mux_generator9971__WIRE_procmux7796_CMP ;
  (* mux_wire = 32'd1 *)
  (* writeback = 32'd1 *)
  wire \writeback-Writeback___MUX_autopmuxtreecc65recursive_mux_generator9973__WIRE_procmux7798_CMP ;
  (* mux_wire = 32'd1 *)
  (* writeback = 32'd1 *)
  wire \writeback-Writeback___MUX_autopmuxtreecc65recursive_mux_generator9977__WIRE_autortlilcc2430Or9976 ;
  (* mux_wire = 32'd1 *)
  (* writeback = 32'd1 *)
  wire \writeback-Writeback___MUX_autopmuxtreecc65recursive_mux_generator9983__WIRE_procmux7792_CMP ;
  (* mux_wire = 32'd1 *)
  (* writeback = 32'd1 *)
  wire \writeback-Writeback___MUX_autopmuxtreecc65recursive_mux_generator9985__WIRE_procmux7794_CMP ;
  (* mux_wire = 32'd1 *)
  (* writeback = 32'd1 *)
  wire \writeback-Writeback___MUX_autopmuxtreecc65recursive_mux_generator9989__WIRE_autortlilcc2430Or9988 ;
  (* mux_wire = 32'd1 *)
  (* writeback = 32'd1 *)
  wire \writeback-Writeback___MUX_procmux7801__WIRE_xcpt_valid_i ;
  (* mux_wire = 32'd1 *)
  (* writeback = 32'd1 *)
  wire \writeback-Writeback___MUX_ternary/core/writebackv245180__WIRE_signex_sel_r ;
  assign _07_ = fuzz_in[67] & (* src = "./core/core_top.v:947.16-947.38" *) irq_enable;
  assign _08_ = fuzz_in[102] & (* src = "./core/core_top.v:948.16-948.38" *) irq_enable;
  assign _09_ = fuzz_in[100] & (* src = "./core/core_top.v:949.16-949.38" *) irq_enable;
  (* src = "./core/core_top.v:328.1-336.4" *)
  always_ff @(posedge clk_i)
    if (_10_) csr_irq_taken_r <= 1'h0;
    else csr_irq_taken_r <= irq_taken;
  (* src = "./core/core_top.v:429.1-434.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) data_read_reg <= 32'd0;
    else if (fuzz_in[66]) data_read_reg <= fuzz_in[65:34];
  (* src = "./core/core_top.v:383.1-389.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) dS <= 2'h0;
    else dS <= dS_nxt;
  (* src = "./core/core_top.v:359.1-365.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) iS <= 1'h0;
    else iS <= iS_nxt;
  assign _11_ = ~ stall_pipeline;
  assign _10_ = | { _11_, rst_i };
  assign __MUX_autopmuxtreecc65recursive_mux_generator10067__WIRE_autortlilcc2430Or10066 = __MUX_procmux8414__WIRE_procmux8408_CMP | \__MUX_autopmuxtreecc65recursive_mux_generator10061__WIRE_eq/core/core_topv43638_Y ;
  assign _12_ = \__MUX_autopmuxtreecc65recursive_mux_generator10061__WIRE_eq/core/core_topv43638_Y  ? _04_ : _02_;
  assign _13_ = \__MUX_autopmuxtreecc65recursive_mux_generator10063__WIRE_eq/core/core_topv42134_Y  ? _00_ : 2'h0;
  assign dS_nxt = __MUX_autopmuxtreecc65recursive_mux_generator10067__WIRE_autortlilcc2430Or10066 ? _12_ : _13_;
  assign _14_ = dS_nxt == (* src = "./core/core_top.v:322.28-322.44" *) 2'h1;
  assign _15_ = fuzz_in[33] && (* src = "./core/core_top.v:300.24-300.58" *) _27_;
  assign stall_data_fetch = _14_ && (* src = "./core/core_top.v:322.27-322.66" *) _17_;
  assign \__MUX_procmux8420__WIRE_logic_and/core/core_topv39530_Y  = _21_ && (* src = "./core/core_top.v:395.17-395.59" *) _18_;
  assign data_req_o = \__MUX_autopmuxtreecc65recursive_mux_generator10063__WIRE_eq/core/core_topv42134_Y  && (* src = "./core/core_top.v:421.21-421.57" *) _21_;
  assign _16_ = stall_data_hazard && (* src = "./core/core_top.v:602.33-602.64" *) _19_;
  assign stall_instr_fetch = ! (* src = "./core/core_top.v:321.29-321.42" *) fuzz_in[32];
  assign _17_ = ! (* src = "./core/core_top.v:322.50-322.65" *) cache_flush_o;
  assign _18_ = ! (* src = "./core/core_top.v:395.39-395.59" *) mem_align_exception;
  assign _19_ = ! (* src = "./core/core_top.v:602.54-602.64" *) irq_taken;
  assign _20_ = _15_ || (* src = "./core/core_top.v:300.23-300.77" *) data_is_amo_o;
  assign \__MUX_procmux8403__WIRE_logic_or/core/core_topv40131_Y  = stall_instr_fetch || (* src = "./core/core_top.v:409.17-409.52" *) stall_from_exe;
  assign _21_ = exe_re || (* src = "./core/core_top.v:421.40-421.56" *) data_rw_o;
  assign _22_ = stall_pipeline || (* src = "./core/core_top.v:602.14-602.65" *) _16_;
  assign _23_ = plc_flush2fet || (* src = "./core/core_top.v:605.14-605.40" *) irq_taken;
  assign _24_ = plc_flush2dec || (* src = "./core/core_top.v:638.14-638.40" *) irq_taken;
  assign _25_ = plc_flush2exe || (* src = "./core/core_top.v:737.14-737.40" *) irq_taken;
  assign _26_ = plc_flush2wbk || (* src = "./core/core_top.v:878.14-878.40" *) irq_taken;
  assign irq_enable = ~ (* src = "./core/core_top.v:300.21-300.78" *) _20_;
  assign _27_ = data_rw_o | (* src = "./core/core_top.v:300.44-300.57" *) exe_re;
  assign stall_pipeline = _28_ | (* src = "./core/core_top.v:332.14-332.67" *) stall_from_exe;
  assign irq_taken = csr_irq_taken_r | (* src = "./core/core_top.v:333.28-333.59" *) csr_irq_taken;
  assign _28_ = stall_instr_fetch | (* src = "./core/core_top.v:734.14-734.50" *) stall_data_fetch;
  assign _04_ = \__MUX_procmux8403__WIRE_logic_or/core/core_topv40131_Y  ? (* full_case = 32'd1 *) (* src = "./core/core_top.v:401.21-401.56|./core/core_top.v:401.17-404.37" *) 2'h2 : 2'h0;
  assign _29_ = fuzz_in[66] ? (* full_case = 32'd1 *) (* src = "./core/core_top.v:400.17-400.29|./core/core_top.v:400.13-406.33" *) _04_ : 2'h1;
  assign _02_ = __MUX_procmux8414__WIRE_procmux8408_CMP ? (* full_case = 32'd1 *) (* src = "./core/core_top.v:0.0-0.0|./core/core_top.v:393.5-415.12" *) _29_ : 2'hx;
  assign _00_ = \__MUX_procmux8420__WIRE_logic_and/core/core_topv39530_Y  ? (* full_case = 32'd1 *) (* src = "./core/core_top.v:395.17-395.59|./core/core_top.v:395.13-398.33" *) 2'h1 : 2'h0;
  assign \__MUX_autopmuxtreecc65recursive_mux_generator10061__WIRE_eq/core/core_topv43638_Y  = dS == (* full_case = 32'd1 *) (* src = "./core/core_top.v:0.0-0.0|./core/core_top.v:393.5-415.12" *) 2'h2;
  assign __MUX_procmux8414__WIRE_procmux8408_CMP = dS == (* full_case = 32'd1 *) (* src = "./core/core_top.v:0.0-0.0|./core/core_top.v:393.5-415.12" *) 2'h1;
  assign \__MUX_autopmuxtreecc65recursive_mux_generator10063__WIRE_eq/core/core_topv42134_Y  = ! (* full_case = 32'd1 *) (* src = "./core/core_top.v:0.0-0.0|./core/core_top.v:393.5-415.12" *) dS;
  assign iS_nxt = fuzz_in[32] ? (* full_case = 32'd1 *) (* src = "./core/core_top.v:376.17-376.29|./core/core_top.v:376.13-379.33" *) 1'h0 : 1'h1;
  assign code_req_o = ~ (* full_case = 32'd1 *) (* src = "./core/core_top.v:0.0-0.0|./core/core_top.v:369.5-380.12" *) iS;
  assign _06_ = fet_valid2dec ? (* full_case = 32'd1 *) (* src = "./core/core_top.v:347.17-347.30|./core/core_top.v:347.14-350.34" *) fet_pc2dec : code_addr_o;
  assign _05_ = dec_fetch_valid2exe ? (* full_case = 32'd1 *) (* src = "./core/core_top.v:345.18-345.37|./core/core_top.v:345.14-350.34" *) dec_pc : _06_;
  assign _03_ = exe_fetch_valid2mem ? (* full_case = 32'd1 *) (* src = "./core/core_top.v:343.18-343.37|./core/core_top.v:343.14-350.34" *) exe_pc2mem : _05_;
  assign _01_ = mem_fetch_valid2wbk ? (* full_case = 32'd1 *) (* src = "./core/core_top.v:341.13-341.32|./core/core_top.v:341.9-350.34" *) mem_pc2wbk : _03_;
  assign nxt_unwb_PC = wbk_xcpt_valid2csr ? (* full_case = 32'd1 *) (* src = "./core/core_top.v:340.9-340.28|./core/core_top.v:340.5-353.8" *) wbk_pc2csr : _01_;
  assign data_read2wbk = \__MUX_autopmuxtreecc65recursive_mux_generator10061__WIRE_eq/core/core_topv43638_Y  ? (* src = "./core/core_top.v:436.24-436.64" *) data_read_reg : fuzz_in[65:34];
  (* module_not_derived = 32'd1 *)
  (* src = "./core/core_top.v:510.1-534.2" *)
  \$paramod$5f0f63231c9e07cfa44043e1ec6bce97e046e4fc\bpu  Branch_Prediction_Unit (
    .__MUX_autopmuxtreecc65recursive_mux_generator9399__WIRE_procmux6850_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9399__WIRE_procmux6850_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9401__WIRE_procmux6852_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9401__WIRE_procmux6852_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9405__WIRE_autortlilcc2430Or9404(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9405__WIRE_autortlilcc2430Or9404 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9407__WIRE_procmux6854_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9407__WIRE_procmux6854_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9409__WIRE_procmux6856_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9409__WIRE_procmux6856_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9413__WIRE_autortlilcc2430Or9412(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9413__WIRE_autortlilcc2430Or9412 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9417__WIRE_autortlilcc2403ReduceOr9416(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9417__WIRE_autortlilcc2403ReduceOr9416 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9419__WIRE_procmux6858_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9419__WIRE_procmux6858_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9421__WIRE_procmux6860_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9421__WIRE_procmux6860_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9425__WIRE_autortlilcc2430Or9424(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9425__WIRE_autortlilcc2430Or9424 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9427__WIRE_procmux6862_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9427__WIRE_procmux6862_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9429__WIRE_procmux6864_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9429__WIRE_procmux6864_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9433__WIRE_autortlilcc2430Or9432(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9433__WIRE_autortlilcc2430Or9432 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9437__WIRE_autortlilcc2403ReduceOr9436(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9437__WIRE_autortlilcc2403ReduceOr9436 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9441__WIRE_autortlilcc2403ReduceOr9440(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9441__WIRE_autortlilcc2403ReduceOr9440 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9443__WIRE_procmux6866_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9443__WIRE_procmux6866_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9445__WIRE_procmux6868_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9445__WIRE_procmux6868_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9449__WIRE_autortlilcc2430Or9448(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9449__WIRE_autortlilcc2430Or9448 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9451__WIRE_procmux6870_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9451__WIRE_procmux6870_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9453__WIRE_procmux6872_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9453__WIRE_procmux6872_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9457__WIRE_autortlilcc2430Or9456(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9457__WIRE_autortlilcc2430Or9456 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9461__WIRE_autortlilcc2403ReduceOr9460(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9461__WIRE_autortlilcc2403ReduceOr9460 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9463__WIRE_procmux6874_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9463__WIRE_procmux6874_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9465__WIRE_procmux6876_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9465__WIRE_procmux6876_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9469__WIRE_autortlilcc2430Or9468(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9469__WIRE_autortlilcc2430Or9468 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9471__WIRE_procmux6878_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9471__WIRE_procmux6878_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9473__WIRE_procmux6880_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9473__WIRE_procmux6880_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9477__WIRE_autortlilcc2430Or9476(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9477__WIRE_autortlilcc2430Or9476 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9481__WIRE_autortlilcc2403ReduceOr9480(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9481__WIRE_autortlilcc2403ReduceOr9480 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9485__WIRE_autortlilcc2403ReduceOr9484(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9485__WIRE_autortlilcc2403ReduceOr9484 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9489__WIRE_autortlilcc2403ReduceOr9488(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9489__WIRE_autortlilcc2403ReduceOr9488 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9491__WIRE_procmux6882_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9491__WIRE_procmux6882_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9493__WIRE_procmux6884_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9493__WIRE_procmux6884_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9497__WIRE_autortlilcc2430Or9496(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9497__WIRE_autortlilcc2430Or9496 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9499__WIRE_procmux6886_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9499__WIRE_procmux6886_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9501__WIRE_procmux6888_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9501__WIRE_procmux6888_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9505__WIRE_autortlilcc2430Or9504(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9505__WIRE_autortlilcc2430Or9504 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9509__WIRE_autortlilcc2403ReduceOr9508(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9509__WIRE_autortlilcc2403ReduceOr9508 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9511__WIRE_procmux6890_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9511__WIRE_procmux6890_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9513__WIRE_procmux6892_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9513__WIRE_procmux6892_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9517__WIRE_autortlilcc2430Or9516(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9517__WIRE_autortlilcc2430Or9516 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9519__WIRE_procmux6894_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9519__WIRE_procmux6894_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9521__WIRE_procmux6896_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9521__WIRE_procmux6896_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9525__WIRE_autortlilcc2430Or9524(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9525__WIRE_autortlilcc2430Or9524 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9529__WIRE_autortlilcc2403ReduceOr9528(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9529__WIRE_autortlilcc2403ReduceOr9528 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9533__WIRE_autortlilcc2403ReduceOr9532(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9533__WIRE_autortlilcc2403ReduceOr9532 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9535__WIRE_procmux6898_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9535__WIRE_procmux6898_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9537__WIRE_procmux6900_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9537__WIRE_procmux6900_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9541__WIRE_autortlilcc2430Or9540(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9541__WIRE_autortlilcc2430Or9540 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9543__WIRE_procmux6902_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9543__WIRE_procmux6902_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9545__WIRE_procmux6904_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9545__WIRE_procmux6904_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9549__WIRE_autortlilcc2430Or9548(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9549__WIRE_autortlilcc2430Or9548 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9553__WIRE_autortlilcc2403ReduceOr9552(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9553__WIRE_autortlilcc2403ReduceOr9552 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9555__WIRE_procmux6906_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9555__WIRE_procmux6906_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9557__WIRE_procmux6908_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9557__WIRE_procmux6908_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9561__WIRE_autortlilcc2430Or9560(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9561__WIRE_autortlilcc2430Or9560 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9563__WIRE_procmux6910_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9563__WIRE_procmux6910_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9565__WIRE_procmux6912_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9565__WIRE_procmux6912_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9569__WIRE_autortlilcc2430Or9568(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9569__WIRE_autortlilcc2430Or9568 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9573__WIRE_autortlilcc2403ReduceOr9572(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9573__WIRE_autortlilcc2403ReduceOr9572 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9577__WIRE_autortlilcc2403ReduceOr9576(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9577__WIRE_autortlilcc2403ReduceOr9576 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9581__WIRE_autortlilcc2403ReduceOr9580(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9581__WIRE_autortlilcc2403ReduceOr9580 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9585__WIRE_autortlilcc2403ReduceOr9584(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9585__WIRE_autortlilcc2403ReduceOr9584 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9591__WIRE_procmux6785_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9591__WIRE_procmux6785_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9593__WIRE_procmux6787_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9593__WIRE_procmux6787_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9597__WIRE_autortlilcc2430Or9596(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9597__WIRE_autortlilcc2430Or9596 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9599__WIRE_procmux6789_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9599__WIRE_procmux6789_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9601__WIRE_procmux6791_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9601__WIRE_procmux6791_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9605__WIRE_autortlilcc2430Or9604(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9605__WIRE_autortlilcc2430Or9604 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9609__WIRE_autortlilcc2403ReduceOr9608(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9609__WIRE_autortlilcc2403ReduceOr9608 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9611__WIRE_procmux6793_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9611__WIRE_procmux6793_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9613__WIRE_procmux6795_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9613__WIRE_procmux6795_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9617__WIRE_autortlilcc2430Or9616(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9617__WIRE_autortlilcc2430Or9616 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9619__WIRE_procmux6797_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9619__WIRE_procmux6797_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9621__WIRE_procmux6799_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9621__WIRE_procmux6799_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9625__WIRE_autortlilcc2430Or9624(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9625__WIRE_autortlilcc2430Or9624 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9629__WIRE_autortlilcc2403ReduceOr9628(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9629__WIRE_autortlilcc2403ReduceOr9628 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9633__WIRE_autortlilcc2403ReduceOr9632(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9633__WIRE_autortlilcc2403ReduceOr9632 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9635__WIRE_procmux6801_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9635__WIRE_procmux6801_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9637__WIRE_procmux6803_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9637__WIRE_procmux6803_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9641__WIRE_autortlilcc2430Or9640(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9641__WIRE_autortlilcc2430Or9640 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9643__WIRE_procmux6805_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9643__WIRE_procmux6805_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9645__WIRE_procmux6807_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9645__WIRE_procmux6807_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9649__WIRE_autortlilcc2430Or9648(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9649__WIRE_autortlilcc2430Or9648 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9653__WIRE_autortlilcc2403ReduceOr9652(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9653__WIRE_autortlilcc2403ReduceOr9652 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9655__WIRE_procmux6809_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9655__WIRE_procmux6809_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9657__WIRE_procmux6811_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9657__WIRE_procmux6811_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9661__WIRE_autortlilcc2430Or9660(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9661__WIRE_autortlilcc2430Or9660 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9663__WIRE_procmux6813_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9663__WIRE_procmux6813_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9665__WIRE_procmux6815_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9665__WIRE_procmux6815_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9669__WIRE_autortlilcc2430Or9668(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9669__WIRE_autortlilcc2430Or9668 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9673__WIRE_autortlilcc2403ReduceOr9672(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9673__WIRE_autortlilcc2403ReduceOr9672 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9677__WIRE_autortlilcc2403ReduceOr9676(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9677__WIRE_autortlilcc2403ReduceOr9676 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9681__WIRE_autortlilcc2403ReduceOr9680(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9681__WIRE_autortlilcc2403ReduceOr9680 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9683__WIRE_procmux6817_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9683__WIRE_procmux6817_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9685__WIRE_procmux6819_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9685__WIRE_procmux6819_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9689__WIRE_autortlilcc2430Or9688(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9689__WIRE_autortlilcc2430Or9688 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9691__WIRE_procmux6821_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9691__WIRE_procmux6821_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9693__WIRE_procmux6823_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9693__WIRE_procmux6823_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9697__WIRE_autortlilcc2430Or9696(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9697__WIRE_autortlilcc2430Or9696 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9701__WIRE_autortlilcc2403ReduceOr9700(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9701__WIRE_autortlilcc2403ReduceOr9700 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9703__WIRE_procmux6825_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9703__WIRE_procmux6825_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9705__WIRE_procmux6827_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9705__WIRE_procmux6827_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9709__WIRE_autortlilcc2430Or9708(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9709__WIRE_autortlilcc2430Or9708 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9711__WIRE_procmux6829_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9711__WIRE_procmux6829_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9713__WIRE_procmux6831_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9713__WIRE_procmux6831_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9717__WIRE_autortlilcc2430Or9716(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9717__WIRE_autortlilcc2430Or9716 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9721__WIRE_autortlilcc2403ReduceOr9720(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9721__WIRE_autortlilcc2403ReduceOr9720 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9725__WIRE_autortlilcc2403ReduceOr9724(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9725__WIRE_autortlilcc2403ReduceOr9724 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9727__WIRE_procmux6833_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9727__WIRE_procmux6833_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9729__WIRE_procmux6835_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9729__WIRE_procmux6835_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9733__WIRE_autortlilcc2430Or9732(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9733__WIRE_autortlilcc2430Or9732 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9735__WIRE_procmux6837_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9735__WIRE_procmux6837_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9737__WIRE_procmux6839_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9737__WIRE_procmux6839_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9741__WIRE_autortlilcc2430Or9740(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9741__WIRE_autortlilcc2430Or9740 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9745__WIRE_autortlilcc2403ReduceOr9744(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9745__WIRE_autortlilcc2403ReduceOr9744 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9747__WIRE_procmux6841_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9747__WIRE_procmux6841_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9749__WIRE_procmux6843_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9749__WIRE_procmux6843_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9753__WIRE_autortlilcc2430Or9752(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9753__WIRE_autortlilcc2430Or9752 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9755__WIRE_procmux6845_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9755__WIRE_procmux6845_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9757__WIRE_procmux6847_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9757__WIRE_procmux6847_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9761__WIRE_autortlilcc2430Or9760(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9761__WIRE_autortlilcc2430Or9760 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9765__WIRE_autortlilcc2403ReduceOr9764(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9765__WIRE_autortlilcc2403ReduceOr9764 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9769__WIRE_autortlilcc2403ReduceOr9768(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9769__WIRE_autortlilcc2403ReduceOr9768 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9773__WIRE_autortlilcc2403ReduceOr9772(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9773__WIRE_autortlilcc2403ReduceOr9772 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9777__WIRE_autortlilcc2403ReduceOr9776(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9777__WIRE_autortlilcc2403ReduceOr9776 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9781__WIRE_procmux3080_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9781__WIRE_procmux3080_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9785__WIRE_autortlilcc2430Or9784(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9785__WIRE_autortlilcc2430Or9784 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9795__WIRE_procmux2938_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9795__WIRE_procmux2938_CMP ),
    .__MUX_procmux3006__WIRE_procmux3007_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_procmux3006__WIRE_procmux3007_CMP ),
    .__MUX_procmux3154__WIRE_branch_taken_i(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_procmux3154__WIRE_branch_taken_i ),
    .__MUX_procmux3156__WIRE_procmux3157_CMP(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_procmux3156__WIRE_procmux3157_CMP ),
    .__MUX_procmux3490__WIRE_exe_is_branch_i(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_procmux3490__WIRE_exe_is_branch_i ),
    .__MUX_procmux3691__WIRE_we(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_procmux3691__WIRE_we ),
    .__MUX_procmux3865__WIRE_stall_i(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_procmux3865__WIRE_stall_i ),
    .__MUX_procmux4936__WIRE_rst_i(\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_procmux4936__WIRE_rst_i ),
    .\__MUX_ternary/core/bpuv127835__WIRE_eq/core/bpuv127833_Y (\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_ternary/core/bpuv127835__WIRE_eq/core/bpuv127833_Y ),
    .branch_decision_o(bpu_branch_decision),
    .branch_hit_o(bpu_branch_hit),
    .branch_misprediction_i(exe_branch_misprediction),
    .branch_taken_i(exe_branch_taken),
    .branch_target_addr_i(exe_branch_target_addr),
    .branch_target_addr_o(bpu_branch_target_addr),
    .clk_i(clk_i),
    .dec_pc_i(dec_pc),
    .exe_is_branch_i(exe_is_branch2bpu),
    .is_cond_branch_i(dec_is_branch),
    .is_jal_i(dec_is_jal),
    .metaReset_paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu(metaReset),
    .\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcdistri_ram-bpu_pc_history___MUX_procmux8501__WIRE_we_i (\paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit_paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcdistri_ram-bpu_pc_history___MUX_procmux8501__WIRE_we_i ),
    .pc_i(code_addr_o),
    .rst_i(rst_i),
    .stall_i(stall_pipeline)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./core/core_top.v:930.1-970.2" *)
  \$paramod\csr_file\HART_ID=s32'00000000000000000000000000000000  CSR (
    .__MUX_autopmuxtreecc65recursive_mux_generator10001__WIRE_procmux8198_CMP(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10001__WIRE_procmux8198_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator10005__WIRE_autortlilcc2403ReduceOr10004(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10005__WIRE_autortlilcc2403ReduceOr10004 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator10007__WIRE_procmux8202_CMP(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10007__WIRE_procmux8202_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator10009__WIRE_procmux8201_CMP(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10009__WIRE_procmux8201_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator10011__WIRE_procmux8205_CMP(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10011__WIRE_procmux8205_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator10013__WIRE_procmux8204_CMP(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10013__WIRE_procmux8204_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator10017__WIRE_autortlilcc2403ReduceOr10016(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10017__WIRE_autortlilcc2403ReduceOr10016 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator10021__WIRE_autortlilcc2403ReduceOr10020(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10021__WIRE_autortlilcc2403ReduceOr10020 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator10023__WIRE_procmux8208_CMP(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10023__WIRE_procmux8208_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator10025__WIRE_procmux8207_CMP(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10025__WIRE_procmux8207_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator10027__WIRE_procmux8211_CMP(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10027__WIRE_procmux8211_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator10029__WIRE_procmux8210_CMP(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10029__WIRE_procmux8210_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator10033__WIRE_autortlilcc2403ReduceOr10032(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10033__WIRE_autortlilcc2403ReduceOr10032 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator10035__WIRE_procmux8214_CMP(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10035__WIRE_procmux8214_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator10037__WIRE_procmux8213_CMP(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10037__WIRE_procmux8213_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator10039__WIRE_procmux8217_CMP(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10039__WIRE_procmux8217_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator10041__WIRE_procmux8216_CMP(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10041__WIRE_procmux8216_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator10045__WIRE_autortlilcc2403ReduceOr10044(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10045__WIRE_autortlilcc2403ReduceOr10044 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator10049__WIRE_autortlilcc2403ReduceOr10048(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10049__WIRE_autortlilcc2403ReduceOr10048 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator10053__WIRE_autortlilcc2403ReduceOr10052(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10053__WIRE_autortlilcc2403ReduceOr10052 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9995__WIRE_procmux8196_CMP(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator9995__WIRE_procmux8196_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9997__WIRE_procmux8195_CMP(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator9997__WIRE_procmux8195_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9999__WIRE_procmux8199_CMP(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator9999__WIRE_procmux8199_CMP ),
    .__MUX_procmux7949__WIRE_irq_taken_o(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux7949__WIRE_irq_taken_o ),
    .__MUX_procmux7952__WIRE_is_sret(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux7952__WIRE_is_sret ),
    .__MUX_procmux7955__WIRE_is_mret(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux7955__WIRE_is_mret ),
    .\__MUX_procmux7961__WIRE_eq/core/csr_filev925160_Y (\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux7961__WIRE_eq/core/csr_filev925160_Y ),
    .\__MUX_procmux7968__WIRE_logic_or/core/csr_filev925162_Y (\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux7968__WIRE_logic_or/core/csr_filev925162_Y ),
    .__MUX_procmux7973__WIRE_trap_to_M(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux7973__WIRE_trap_to_M ),
    .\__MUX_procmux7981__WIRE_and/core/csr_filev892153_Y (\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux7981__WIRE_and/core/csr_filev892153_Y ),
    .\__MUX_procmux8040__WIRE_and/core/csr_filev886152_Y (\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8040__WIRE_and/core/csr_filev886152_Y ),
    .\__MUX_procmux8091__WIRE_and/core/csr_filev880151_Y (\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8091__WIRE_and/core/csr_filev880151_Y ),
    .__MUX_procmux8132__WIRE_mstatus_r(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8132__WIRE_mstatus_r ),
    .\__MUX_procmux8164__WIRE_eq/core/csr_filev912154_Y (\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8164__WIRE_eq/core/csr_filev912154_Y ),
    .__MUX_procmux8188__WIRE_xcpt_valid_i(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8188__WIRE_xcpt_valid_i ),
    .\__MUX_procmux8235__WIRE_logic_and/core/csr_filev750145_Y (\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8235__WIRE_logic_and/core/csr_filev750145_Y ),
    .\__MUX_procmux8238__WIRE_logic_or/core/csr_filev51797_Y (\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8238__WIRE_logic_or/core/csr_filev51797_Y ),
    .\__MUX_procmux8240__WIRE_logic_and/core/csr_filev740130_Y (\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8240__WIRE_logic_and/core/csr_filev740130_Y ),
    .\__MUX_procmux8246__WIRE_logic_and/core/csr_filev688119_Y (\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8246__WIRE_logic_and/core/csr_filev688119_Y ),
    .\__MUX_procmux8248__WIRE_logic_and/core/csr_filev716124_Y (\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8248__WIRE_logic_and/core/csr_filev716124_Y ),
    .\__MUX_procmux8256__WIRE_logic_and/core/csr_filev692121_Y (\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8256__WIRE_logic_and/core/csr_filev692121_Y ),
    .__MUX_procmux8281__WIRE_procmux8282_CMP(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8281__WIRE_procmux8282_CMP ),
    .__MUX_procmux8283__WIRE_csr_we_i(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8283__WIRE_csr_we_i ),
    .__MUX_procmux8291__WIRE_procmux8292_CMP(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8291__WIRE_procmux8292_CMP ),
    .\__MUX_procmux8308__WIRE_logic_and/core/csr_filev52599_Y (\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8308__WIRE_logic_and/core/csr_filev52599_Y ),
    .\__MUX_procmux8313__WIRE_logic_and/core/csr_filev51584_Y (\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8313__WIRE_logic_and/core/csr_filev51584_Y ),
    .\__MUX_procmux8325__WIRE_logic_and/core/csr_filev45674_Y (\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8325__WIRE_logic_and/core/csr_filev45674_Y ),
    .\__MUX_procmux8327__WIRE_logic_and/core/csr_filev48479_Y (\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8327__WIRE_logic_and/core/csr_filev48479_Y ),
    .\__MUX_procmux8335__WIRE_logic_and/core/csr_filev46076_Y (\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8335__WIRE_logic_and/core/csr_filev46076_Y ),
    .\__MUX_procmux8354__WIRE_logic_and/core/csr_filev37762_Y (\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8354__WIRE_logic_and/core/csr_filev37762_Y ),
    .\__MUX_procmux8364__WIRE_eq/core/csr_filev35659_Y (\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8364__WIRE_eq/core/csr_filev35659_Y ),
    .\__MUX_procmux8367__WIRE_eq/core/csr_filev35258_Y (\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8367__WIRE_eq/core/csr_filev35258_Y ),
    .__MUX_procmux8377__WIRE_sys_jump_i(\paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8377__WIRE_sys_jump_i ),
    .clk_i(clk_i),
    .csr_data_o(csr_data2dec),
    .csr_raddr_i(dec_csr_addr2csr),
    .csr_waddr_i(wbk_csr_addr),
    .csr_wdata_i(wbk_csr_data),
    .csr_we_i(wbk_csr_we),
    .ext_irq_i(_07_),
    .irq_taken_o(csr_irq_taken),
    .\metaReset_paramodcsr_fileHART_ID=s32'00000000000000000000000000000000 (metaReset),
    .nxt_unwb_PC_i(nxt_unwb_PC),
    .pc_handler_o(csr_pc_handler),
    .pc_i(wbk_pc2csr),
    .privilege_level_o(privilege_level),
    .rst_i(rst_i),
    .sft_irq_i(_09_),
    .sys_jump_csr_addr_i(wbk_sys_jump_csr_addr2csr),
    .sys_jump_csr_data_o(csr_sys_jump_data),
    .sys_jump_i(wbk_sys_jump2csr),
    .sys_jump_o(csr_sys_jump),
    .tmr_irq_i(_08_),
    .xcpt_cause_i(wbk_xcpt_cause2csr),
    .xcpt_tval_i(wbk_xcpt_tval2csr),
    .xcpt_valid_i(wbk_xcpt_valid2csr)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./core/core_top.v:631.8-725.2" *)
  decode Decode (
    .__MUX_procmux7137__WIRE_rv32_ecall(\decode-Decode___MUX_procmux7137__WIRE_rv32_ecall ),
    .__MUX_procmux7454__WIRE_stall_i(\decode-Decode___MUX_procmux7454__WIRE_stall_i ),
    .\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y (\decode-Decode___MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ),
    .__MUX_procmux7460__WIRE_rv32_csr(\decode-Decode___MUX_procmux7460__WIRE_rv32_csr ),
    .\__MUX_procmux7475__WIRE_or/core/decodev469382_Y (\decode-Decode___MUX_procmux7475__WIRE_or/core/decodev469382_Y ),
    .\__MUX_procmux7487__WIRE_or/core/decodev467381_Y (\decode-Decode___MUX_procmux7487__WIRE_or/core/decodev467381_Y ),
    .\__MUX_procmux7496__WIRE_or/core/decodev465380_Y (\decode-Decode___MUX_procmux7496__WIRE_or/core/decodev465380_Y ),
    .\__MUX_procmux7502__WIRE_or/core/decodev463379_Y (\decode-Decode___MUX_procmux7502__WIRE_or/core/decodev463379_Y ),
    .\__MUX_procmux7505__WIRE_or/core/decodev455377_Y (\decode-Decode___MUX_procmux7505__WIRE_or/core/decodev455377_Y ),
    .__MUX_procmux7511__WIRE_rv32_sub(\decode-Decode___MUX_procmux7511__WIRE_rv32_sub ),
    .\__MUX_procmux7514__WIRE_or/core/decodev445374_Y (\decode-Decode___MUX_procmux7514__WIRE_or/core/decodev445374_Y ),
    .\__MUX_procmux7520__WIRE_or/core/decodev443373_Y (\decode-Decode___MUX_procmux7520__WIRE_or/core/decodev443373_Y ),
    .\__MUX_ternary/core/decodev384323__WIRE_eq/core/decodev384320_Y (\decode-Decode___MUX_ternary/core/decodev384323__WIRE_eq/core/decodev384320_Y ),
    .\__MUX_ternary/core/decodev385322__WIRE_eq/core/decodev385321_Y (\decode-Decode___MUX_ternary/core/decodev385322__WIRE_eq/core/decodev385321_Y ),
    .\__MUX_ternary/core/decodev417344__WIRE_rv32_imm_selu (\decode-Decode___MUX_ternary/core/decodev417344__WIRE_rv32_imm_selu ),
    .\__MUX_ternary/core/decodev487388__WIRE_flush_i (\decode-Decode___MUX_ternary/core/decodev487388__WIRE_flush_i ),
    .alu_muldiv_sel_o(dec_alu_muldiv_sel2exe),
    .amo_type_o(dec_amo_type2exe),
    .branch_decision_i(fet_branch_decision),
    .branch_decision_o(dec_branch_decision),
    .branch_hit_i(fet_branch_hit),
    .branch_hit_o(dec_branch_hit),
    .clk_i(clk_i),
    .csr_addr2fwd_o(dec_csr_addr2fwd),
    .csr_addr_o(dec_csr_addr2csr),
    .csr_data2fwd_o(dec_csr_data2fwd),
    .csr_data_i(csr_data2dec),
    .csr_imm_o(dec_csr_imm2exe),
    .csr_we_o(dec_csr_we2exe),
    .dsize_sel_o(dec_dsize_sel2exe),
    .fetch_valid_i(fet_valid2dec),
    .fetch_valid_o(dec_fetch_valid2exe),
    .flush_i(_24_),
    .imm_o(dec_imm2exe),
    .inputA_sel_o(dec_inA_sel2exe),
    .inputB_sel_o(dec_inB_sel2exe),
    .instruction_i(fet_instr2dec),
    .is_amo_o(dec_is_amo2exe),
    .is_branch_o(dec_is_branch),
    .is_fencei_o(dec_is_fencei2exe),
    .is_jal_o(dec_is_jal),
    .is_jalr_o(dec_is_jalr),
    .is_load_hazard_o(dec_load_hazard2plc),
    .metaReset_decode(metaReset),
    .operation_sel_o(dec_operation_sel2exe),
    .pc_i(fet_pc2dec),
    .pc_o(dec_pc),
    .privilege_lvl_i(privilege_level),
    .rd_addr_o(dec_rd_addr2exe),
    .re_o(dec_re),
    .regfile_input_sel_o(dec_regfile_sel2exe),
    .regfile_we_o(dec_regfile_we2exe),
    .rs1_addr2fwd_o(dec_rs1_addr2fwd),
    .rs1_addr_o(dec_rs1_addr2rfu),
    .rs1_data2fwd_o(dec_rs1_data2fwd),
    .rs1_data_i(rfu_rs1_data2dec),
    .rs2_addr2fwd_o(dec_rs2_addr2fwd),
    .rs2_addr_o(dec_rs2_addr2rfu),
    .rs2_data2fwd_o(dec_rs2_data2fwd),
    .rs2_data_i(rfu_rs2_data2dec),
    .rst_i(rst_i),
    .shift_sel_o(dec_shift_sel2exe),
    .signex_sel_o(dec_signex_sel2exe),
    .stall_i(stall_pipeline),
    .sys_jump_csr_addr_o(dec_sys_jump_csr_addr2exe),
    .sys_jump_o(dec_sys_jump2exe),
    .unsupported_instr_o(dec_unsupported_instr),
    .we_o(dec_we),
    .xcpt_cause_i(fet_xcpt_cause2dec),
    .xcpt_cause_o(dec_xcpt_cause2exe),
    .xcpt_tval_i(fet_xcpt_tval2dec),
    .xcpt_tval_o(dec_xcpt_tval2exe),
    .xcpt_valid_i(fet_xcpt_valid2dec),
    .xcpt_valid_o(dec_xcpt_valid2exe)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./core/core_top.v:728.9-829.2" *)
  execute Execute (
    .__MUX_autopmuxtreecc65recursive_mux_generator9847__WIRE_procmux7678_CMP(\execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9847__WIRE_procmux7678_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9849__WIRE_procmux7677_CMP(\execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9849__WIRE_procmux7677_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9855__WIRE_procmux7672_CMP(\execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9855__WIRE_procmux7672_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9857__WIRE_procmux7674_CMP(\execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9857__WIRE_procmux7674_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9861__WIRE_autortlilcc2430Or9860(\execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9861__WIRE_autortlilcc2430Or9860 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9867__WIRE_procmux7667_CMP(\execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9867__WIRE_procmux7667_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9869__WIRE_procmux7669_CMP(\execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9869__WIRE_procmux7669_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9873__WIRE_autortlilcc2430Or9872(\execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9873__WIRE_autortlilcc2430Or9872 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9879__WIRE_procmux7524_CMP(\execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9879__WIRE_procmux7524_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9881__WIRE_procmux7526_CMP(\execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9881__WIRE_procmux7526_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9885__WIRE_autortlilcc2430Or9884(\execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9885__WIRE_autortlilcc2430Or9884 ),
    .\__MUX_ternary/core/executev194193__WIRE_or/core/executev194192_Y (\execute-Execute___MUX_ternary/core/executev194193__WIRE_or/core/executev194192_Y ),
    .\__MUX_ternary/core/executev247204__WIRE_alu_muldiv_sel_i (\execute-Execute___MUX_ternary/core/executev247204__WIRE_alu_muldiv_sel_i ),
    .\__MUX_ternary/core/executev254207__WIRE_operation_sel_i (\execute-Execute___MUX_ternary/core/executev254207__WIRE_operation_sel_i ),
    .addr_o(data_addr_o),
    .\alu-ALU___MUX_ternary/core/aluv772573__WIRE_lt/core/aluv772572_Y (\execute-Execute_alu-ALU___MUX_ternary/core/aluv772573__WIRE_lt/core/aluv772572_Y ),
    .\alu-ALU___MUX_ternary/core/aluv782575__WIRE_lt/core/aluv782574_Y (\execute-Execute_alu-ALU___MUX_ternary/core/aluv782575__WIRE_lt/core/aluv782574_Y ),
    .\alu-ALU___MUX_ternary/core/aluv802579__WIRE_shift_sel_i (\execute-Execute_alu-ALU___MUX_ternary/core/aluv802579__WIRE_shift_sel_i ),
    .alu_muldiv_sel_i(dec_alu_muldiv_sel2exe),
    .amo_type_i(dec_amo_type2exe),
    .amo_type_o(data_amo_type_o),
    .\bcu-BCU___MUX_ternary/core/bcuv682429__WIRE_eq/core/bcuv682428_Y (\execute-Execute_bcu-BCU___MUX_ternary/core/bcuv682429__WIRE_eq/core/bcuv682428_Y ),
    .\bcu-BCU___MUX_ternary/core/bcuv692431__WIRE_ne/core/bcuv692430_Y (\execute-Execute_bcu-BCU___MUX_ternary/core/bcuv692431__WIRE_ne/core/bcuv692430_Y ),
    .\bcu-BCU___MUX_ternary/core/bcuv702433__WIRE_lt/core/bcuv702432_Y (\execute-Execute_bcu-BCU___MUX_ternary/core/bcuv702433__WIRE_lt/core/bcuv702432_Y ),
    .\bcu-BCU___MUX_ternary/core/bcuv712435__WIRE_ge/core/bcuv712434_Y (\execute-Execute_bcu-BCU___MUX_ternary/core/bcuv712435__WIRE_ge/core/bcuv712434_Y ),
    .\bcu-BCU___MUX_ternary/core/bcuv722437__WIRE_lt/core/bcuv722436_Y (\execute-Execute_bcu-BCU___MUX_ternary/core/bcuv722437__WIRE_lt/core/bcuv722436_Y ),
    .\bcu-BCU___MUX_ternary/core/bcuv732439__WIRE_ge/core/bcuv732438_Y (\execute-Execute_bcu-BCU___MUX_ternary/core/bcuv732439__WIRE_ge/core/bcuv732438_Y ),
    .branch_decision_i(dec_branch_decision),
    .branch_hit_i(dec_branch_hit),
    .branch_misprediction_o(exe_branch_misprediction),
    .branch_restore_pc_o(exe_branch_restore_pc),
    .branch_taken_o(exe_branch_taken),
    .branch_target_addr_o(exe_branch_target_addr),
    .clk_i(clk_i),
    .csr_data_i(fwd_csr_data2exe),
    .csr_imm_i(dec_csr_imm2exe),
    .csr_we_addr_i(dec_csr_addr2fwd),
    .csr_we_addr_o(exe_csr_addr),
    .csr_we_data_o(exe_csr_data),
    .csr_we_i(dec_csr_we2exe),
    .csr_we_o(exe_csr_we),
    .dsize_sel_i(dec_dsize_sel2exe),
    .dsize_sel_o(exe_dsize_sel2mem),
    .fetch_valid_i(dec_fetch_valid2exe),
    .fetch_valid_o(exe_fetch_valid2mem),
    .flush_i(_25_),
    .imm_i(dec_imm2exe),
    .inputA_sel_i(dec_inA_sel2exe),
    .inputB_sel_i(dec_inB_sel2exe),
    .is_amo_i(dec_is_amo2exe),
    .is_amo_o(data_is_amo_o),
    .is_branch_i(dec_is_branch),
    .is_branch_o(exe_is_branch2bpu),
    .is_fencei_i(dec_is_fencei2exe),
    .is_fencei_o(cache_flush_o),
    .is_jal_i(dec_is_jal),
    .is_jalr_i(dec_is_jalr),
    .metaReset_execute(metaReset),
    .\muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9383__WIRE_eq/core/muldivv2912542_Y (\execute-Execute_muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9383__WIRE_eq/core/muldivv2912542_Y ),
    .\muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9385__WIRE_eq/core/muldivv2912543_Y (\execute-Execute_muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9385__WIRE_eq/core/muldivv2912543_Y ),
    .\muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9387__WIRE_eq/core/muldivv2002508_Y (\execute-Execute_muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9387__WIRE_eq/core/muldivv2002508_Y ),
    .\muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9389__WIRE_eq/core/muldivv2522520_Y (\execute-Execute_muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9389__WIRE_eq/core/muldivv2522520_Y ),
    .\muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9393__WIRE_autortlilcc2403ReduceOr9392 (\execute-Execute_muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9393__WIRE_autortlilcc2403ReduceOr9392 ),
    .\muldiv-MulDiv___MUX_procmux2811__WIRE_logic_or/core/muldivv2912544_Y (\execute-Execute_muldiv-MulDiv___MUX_procmux2811__WIRE_logic_or/core/muldivv2912544_Y ),
    .\muldiv-MulDiv___MUX_procmux2814__WIRE_operation_sel_i (\execute-Execute_muldiv-MulDiv___MUX_procmux2814__WIRE_operation_sel_i ),
    .\muldiv-MulDiv___MUX_procmux2816__WIRE_eq/core/muldivv2662524_Y (\execute-Execute_muldiv-MulDiv___MUX_procmux2816__WIRE_eq/core/muldivv2662524_Y ),
    .\muldiv-MulDiv___MUX_procmux2829__WIRE_is_b_zero (\execute-Execute_muldiv-MulDiv___MUX_procmux2829__WIRE_is_b_zero ),
    .\muldiv-MulDiv___MUX_procmux2833__WIRE_and/core/muldivv2002509_Y (\execute-Execute_muldiv-MulDiv___MUX_procmux2833__WIRE_and/core/muldivv2002509_Y ),
    .\muldiv-MulDiv___MUX_procmux2868__WIRE_or/core/muldivv1662495_Y (\execute-Execute_muldiv-MulDiv___MUX_procmux2868__WIRE_or/core/muldivv1662495_Y ),
    .\muldiv-MulDiv___MUX_ternary/core/muldivv1162482__WIRE_is_a_neg (\execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv1162482__WIRE_is_a_neg ),
    .\muldiv-MulDiv___MUX_ternary/core/muldivv1172484__WIRE_is_b_neg (\execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv1172484__WIRE_is_b_neg ),
    .\muldiv-MulDiv___MUX_ternary/core/muldivv1302492__WIRE_or/core/muldivv1302487_Y (\execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv1302492__WIRE_or/core/muldivv1302487_Y ),
    .\muldiv-MulDiv___MUX_ternary/core/muldivv1662497__WIRE_req_i (\execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv1662497__WIRE_req_i ),
    .\muldiv-MulDiv___MUX_ternary/core/muldivv1682498__WIRE_is_calc_done (\execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv1682498__WIRE_is_calc_done ),
    .\muldiv-MulDiv___MUX_ternary/core/muldivv1742500__WIRE_stall_i (\execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv1742500__WIRE_stall_i ),
    .\muldiv-MulDiv___MUX_ternary/core/muldivv2582522__WIRE_div_sub (\execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv2582522__WIRE_div_sub ),
    .\muldiv-MulDiv___MUX_ternary/core/muldivv2632523__WIRE_mull (\execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv2632523__WIRE_mull ),
    .\muldiv-MulDiv___MUX_ternary/core/muldivv2712528__WIRE_signed_adjust (\execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv2712528__WIRE_signed_adjust ),
    .\muldiv-MulDiv___MUX_ternary/core/muldivv2762540__WIRE_or/core/muldivv2762529_Y (\execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv2762540__WIRE_or/core/muldivv2762529_Y ),
    .\muldiv-MulDiv___MUX_ternary/core/muldivv2772539__WIRE_operation_mulhsu (\execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv2772539__WIRE_operation_mulhsu ),
    .\muldiv-MulDiv___MUX_ternary/core/muldivv852563__WIRE_a_i (\execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv852563__WIRE_a_i ),
    .\muldiv-MulDiv___MUX_ternary/core/muldivv852569__WIRE_b_i (\execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv852569__WIRE_b_i ),
    .operation_sel_i(dec_operation_sel2exe),
    .p_data_o(exe_p_data),
    .pc_i(dec_pc),
    .pc_o(exe_pc2mem),
    .rd_addr_i(dec_rd_addr2exe),
    .rd_addr_o(exe_rd_addr2wbk),
    .re_i(dec_re),
    .re_o(exe_re),
    .regfile_input_sel_i(dec_regfile_sel2exe),
    .regfile_input_sel_o(exe_regfile_input_sel2wbk),
    .regfile_we_i(dec_regfile_we2exe),
    .regfile_we_o(exe_regfile_we2wbk),
    .rs1_data_i(fwd_rs1),
    .rs2_data_i(fwd_rs2),
    .rs2_data_o(exe_rs2_data2mem),
    .rst_i(rst_i),
    .shift_sel_i(dec_shift_sel2exe),
    .signex_sel_i(dec_signex_sel2exe),
    .signex_sel_o(exe_signex_sel2wbk),
    .stall_from_exe_o(stall_from_exe),
    .stall_i(_28_),
    .sys_jump_csr_addr_i(dec_sys_jump_csr_addr2exe),
    .sys_jump_csr_addr_o(exe_sys_jump_csr_addr2mem),
    .sys_jump_i(dec_sys_jump2exe),
    .sys_jump_o(exe_sys_jump2mem),
    .we_i(dec_we),
    .we_o(data_rw_o),
    .xcpt_cause_i(dec_xcpt_cause2exe),
    .xcpt_cause_o(exe_xcpt_cause2mem),
    .xcpt_tval_i(dec_xcpt_tval2exe),
    .xcpt_tval_o(exe_xcpt_tval2mem),
    .xcpt_valid_i(dec_xcpt_valid2exe),
    .xcpt_valid_o(exe_xcpt_valid2mem)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./core/core_top.v:598.7-628.2" *)
  fetch Fetch (
    .__MUX_procmux7072__WIRE_flush_i(\fetch-Fetch___MUX_procmux7072__WIRE_flush_i ),
    .__MUX_procmux7107__WIRE_flush_delay(\fetch-Fetch___MUX_procmux7107__WIRE_flush_delay ),
    .__MUX_procmux7119__WIRE_stall_delay(\fetch-Fetch___MUX_procmux7119__WIRE_stall_delay ),
    .__MUX_procmux7128__WIRE_fetch_valid_o(\fetch-Fetch___MUX_procmux7128__WIRE_fetch_valid_o ),
    .__MUX_procmux7134__WIRE_rst_i(\fetch-Fetch___MUX_procmux7134__WIRE_rst_i ),
    .branch_decision_i(bpu_branch_decision),
    .branch_decision_o(fet_branch_decision),
    .branch_hit_i(bpu_branch_hit),
    .branch_hit_o(fet_branch_hit),
    .clk_i(clk_i),
    .fetch_valid_o(fet_valid2dec),
    .flush_i(_23_),
    .instruction_i(fuzz_in[31:0]),
    .instruction_o(fet_instr2dec),
    .metaReset_fetch(metaReset),
    .pc_i(code_addr_o),
    .pc_o(fet_pc2dec),
    .rst_i(rst_i),
    .stall_i(_22_),
    .xcpt_cause_o(fet_xcpt_cause2dec),
    .xcpt_tval_o(fet_xcpt_tval2dec),
    .xcpt_valid_o(fet_xcpt_valid2dec)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./core/core_top.v:474.17-506.2" *)
  forwarding_unit Forwarding_Unit (
    .\__MUX_ternary/core/forwarding_unitv1282413__WIRE_rs1_EXE_MEM_fwd (\forwarding_unit-Forwarding_Unit___MUX_ternary/core/forwarding_unitv1282413__WIRE_rs1_EXE_MEM_fwd ),
    .\__MUX_ternary/core/forwarding_unitv1292412__WIRE_rs1_MEM_WB_fwd (\forwarding_unit-Forwarding_Unit___MUX_ternary/core/forwarding_unitv1292412__WIRE_rs1_MEM_WB_fwd ),
    .\__MUX_ternary/core/forwarding_unitv1332415__WIRE_rs2_EXE_MEM_fwd (\forwarding_unit-Forwarding_Unit___MUX_ternary/core/forwarding_unitv1332415__WIRE_rs2_EXE_MEM_fwd ),
    .\__MUX_ternary/core/forwarding_unitv1342414__WIRE_rs2_MEM_WB_fwd (\forwarding_unit-Forwarding_Unit___MUX_ternary/core/forwarding_unitv1342414__WIRE_rs2_MEM_WB_fwd ),
    .\__MUX_ternary/core/forwarding_unitv1382417__WIRE_csr_EXE_MEM_fwd (\forwarding_unit-Forwarding_Unit___MUX_ternary/core/forwarding_unitv1382417__WIRE_csr_EXE_MEM_fwd ),
    .\__MUX_ternary/core/forwarding_unitv1392416__WIRE_csr_MEM_WB_fwd (\forwarding_unit-Forwarding_Unit___MUX_ternary/core/forwarding_unitv1392416__WIRE_csr_MEM_WB_fwd ),
    .csr_addr_i(dec_csr_addr2fwd),
    .csr_data_i(dec_csr_data2fwd),
    .csr_data_o(fwd_csr_data2exe),
    .exe_csr_addr_i(exe_csr_addr),
    .exe_csr_data_i(exe_csr_data),
    .exe_csr_we_i(exe_csr_we),
    .exe_p_data_i(exe_p_data),
    .exe_rd_addr_i(exe_rd_addr2wbk),
    .exe_regfile_input_sel_i(exe_regfile_input_sel2wbk),
    .exe_regfile_we_i(exe_regfile_we2wbk),
    .metaReset_forwarding_unit(metaReset),
    .rs1_addr_i(dec_rs1_addr2fwd),
    .rs1_data_i(dec_rs1_data2fwd),
    .rs1_o(fwd_rs1),
    .rs2_addr_i(dec_rs2_addr2fwd),
    .rs2_data_i(dec_rs2_data2fwd),
    .rs2_o(fwd_rs2),
    .wbk_csr_addr_i(wbk_csr_addr),
    .wbk_csr_data_i(wbk_csr_data),
    .wbk_csr_we_i(wbk_csr_we),
    .wbk_rd_addr_i(wbk_rd_addr),
    .wbk_rd_data_i(wbk_rd_data),
    .wbk_regfile_we_i(wbk_rd_we)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./core/core_top.v:832.8-868.2" *)
  memory Memory (
    .__MUX_autopmuxtreecc65recursive_mux_generator9887__WIRE_procmux7683_CMP(\memory-Memory___MUX_autopmuxtreecc65recursive_mux_generator9887__WIRE_procmux7683_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9889__WIRE_procmux7721_CMP(\memory-Memory___MUX_autopmuxtreecc65recursive_mux_generator9889__WIRE_procmux7721_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9893__WIRE_autortlilcc2430Or9892(\memory-Memory___MUX_autopmuxtreecc65recursive_mux_generator9893__WIRE_autortlilcc2430Or9892 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9915__WIRE_procmux7741_CMP(\memory-Memory___MUX_autopmuxtreecc65recursive_mux_generator9915__WIRE_procmux7741_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9917__WIRE_procmux7681_CMP(\memory-Memory___MUX_autopmuxtreecc65recursive_mux_generator9917__WIRE_procmux7681_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9921__WIRE_autortlilcc2430Or9920(\memory-Memory___MUX_autopmuxtreecc65recursive_mux_generator9921__WIRE_autortlilcc2430Or9920 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9953__WIRE_procmux7697_CMP(\memory-Memory___MUX_autopmuxtreecc65recursive_mux_generator9953__WIRE_procmux7697_CMP ),
    .__MUX_procmux7699__WIRE_procmux7700_CMP(\memory-Memory___MUX_procmux7699__WIRE_procmux7700_CMP ),
    .__MUX_procmux7744__WIRE_procmux7745_CMP(\memory-Memory___MUX_procmux7744__WIRE_procmux7745_CMP ),
    .\__MUX_procmux7782__WIRE_logic_and/core/memoryv105184_Y (\memory-Memory___MUX_procmux7782__WIRE_logic_and/core/memoryv105184_Y ),
    .\__MUX_ternary/core/memoryv108185__WIRE_we_i (\memory-Memory___MUX_ternary/core/memoryv108185__WIRE_we_i ),
    .byte_sel_o(data_byte_enable_o),
    .data_o(data_o),
    .dsize_sel_i(exe_dsize_sel2mem),
    .fetch_valid_i(exe_fetch_valid2mem),
    .fetch_valid_o(mem_fetch_valid2wbk),
    .mem_addr_i(data_addr_o),
    .mem_align_exception_o(mem_align_exception),
    .metaReset_memory(metaReset),
    .pc_i(exe_pc2mem),
    .pc_o(mem_pc2wbk),
    .re_i(exe_re),
    .sys_jump_csr_addr_i(exe_sys_jump_csr_addr2mem),
    .sys_jump_csr_addr_o(mem_sys_jump_csr_addr2wbk),
    .sys_jump_i(exe_sys_jump2mem),
    .sys_jump_o(mem_sys_jump2wbk),
    .unaligned_data_i(exe_rs2_data2mem),
    .we_i(data_rw_o),
    .xcpt_cause_i(exe_xcpt_cause2mem),
    .xcpt_cause_o(mem_xcpt_cause2wbk),
    .xcpt_tval_i(exe_xcpt_tval2mem),
    .xcpt_tval_o(mem_xcpt_tval2wbk),
    .xcpt_valid_i(exe_xcpt_valid2mem),
    .xcpt_valid_o(mem_xcpt_valid2wbk)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./core/core_top.v:443.18-471.2" *)
  pipeline_control Pipeline_Control (
    .branch_hit_i(dec_branch_hit),
    .branch_misprediction_i(exe_branch_misprediction),
    .branch_taken_i(exe_branch_taken),
    .data_hazard_o(stall_data_hazard),
    .flush2dec_o(plc_flush2dec),
    .flush2exe_o(plc_flush2exe),
    .flush2fet_o(plc_flush2fet),
    .flush2wbk_o(plc_flush2wbk),
    .is_fencei_i(cache_flush_o),
    .is_load_hazard(dec_load_hazard2plc),
    .metaReset_pipeline_control(metaReset),
    .sys_jump_i(csr_sys_jump),
    .unsupported_instr_i(dec_unsupported_instr)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./core/core_top.v:557.17-595.2" *)
  program_counter Program_Counter (
    .PC_handler_i(csr_pc_handler),
    .\__MUX_procmux7048__WIRE_and/core/program_counterv142410_Y (\program_counter-Program_Counter___MUX_procmux7048__WIRE_and/core/program_counterv142410_Y ),
    .__MUX_procmux7051__WIRE_sys_jump_i(\program_counter-Program_Counter___MUX_procmux7051__WIRE_sys_jump_i ),
    .__MUX_procmux7054__WIRE_exe_branch_misprediction_i(\program_counter-Program_Counter___MUX_procmux7054__WIRE_exe_branch_misprediction_i ),
    .\__MUX_procmux7057__WIRE_and/core/program_counterv136408_Y (\program_counter-Program_Counter___MUX_procmux7057__WIRE_and/core/program_counterv136408_Y ),
    .__MUX_procmux7060__WIRE_is_fencei_i(\program_counter-Program_Counter___MUX_procmux7060__WIRE_is_fencei_i ),
    .__MUX_procmux7063__WIRE_irq_taken_i(\program_counter-Program_Counter___MUX_procmux7063__WIRE_irq_taken_i ),
    .__MUX_procmux7066__WIRE_stall_i(\program_counter-Program_Counter___MUX_procmux7066__WIRE_stall_i ),
    .__MUX_procmux7069__WIRE_rst_i(\program_counter-Program_Counter___MUX_procmux7069__WIRE_rst_i ),
    .\__MUX_ternary/core/program_counterv139409__WIRE_dec_branch_decision_i (\program_counter-Program_Counter___MUX_ternary/core/program_counterv139409__WIRE_dec_branch_decision_i ),
    .bpu_branch_decision_i(bpu_branch_decision),
    .bpu_branch_hit_i(bpu_branch_hit),
    .bpu_branch_target_addr_i(bpu_branch_target_addr),
    .clk_i(clk_i),
    .dec_branch_decision_i(dec_branch_decision),
    .dec_branch_hit_i(dec_branch_hit),
    .dec_pc_i(dec_pc),
    .exe_branch_misprediction_i(exe_branch_misprediction),
    .exe_branch_restore_addr_i(exe_branch_restore_pc),
    .exe_branch_taken_i(exe_branch_taken),
    .exe_branch_target_addr_i(exe_branch_target_addr),
    .init_pc_addr_i(fuzz_in[99:68]),
    .irq_taken_i(irq_taken),
    .is_fencei_i(cache_flush_o),
    .metaReset_program_counter(metaReset),
    .pc_o(code_addr_o),
    .rst_i(rst_i),
    .stall_i(_22_),
    .sys_jump_data_i(csr_sys_jump_data),
    .sys_jump_i(csr_sys_jump)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./core/core_top.v:537.10-554.2" *)
  reg_file Register_File (
    .__MUX_procmux6922__WIRE_we(\reg_file-Register_File___MUX_procmux6922__WIRE_we ),
    .__MUX_procmux7036__WIRE_rst_i(\reg_file-Register_File___MUX_procmux7036__WIRE_rst_i ),
    .\__MUX_ternary/core/reg_filev85449__WIRE_and/core/reg_filev85447_Y (\reg_file-Register_File___MUX_ternary/core/reg_filev85449__WIRE_and/core/reg_filev85447_Y ),
    .\__MUX_ternary/core/reg_filev86453__WIRE_and/core/reg_filev86451_Y (\reg_file-Register_File___MUX_ternary/core/reg_filev86453__WIRE_and/core/reg_filev86451_Y ),
    .clk_i(clk_i),
    .metaReset_reg_file(metaReset),
    .rd_addr_i(wbk_rd_addr),
    .rd_data_i(wbk_rd_data),
    .rd_we_i(wbk_rd_we),
    .rs1_addr_i(dec_rs1_addr2rfu),
    .rs1_data_o(rfu_rs1_data2dec),
    .rs2_addr_i(dec_rs2_addr2rfu),
    .rs2_data_o(rfu_rs2_data2dec),
    .rst_i(rst_i)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./core/core_top.v:871.11-926.2" *)
  writeback Writeback (
    .__MUX_autopmuxtreecc65recursive_mux_generator9971__WIRE_procmux7796_CMP(\writeback-Writeback___MUX_autopmuxtreecc65recursive_mux_generator9971__WIRE_procmux7796_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9973__WIRE_procmux7798_CMP(\writeback-Writeback___MUX_autopmuxtreecc65recursive_mux_generator9973__WIRE_procmux7798_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9977__WIRE_autortlilcc2430Or9976(\writeback-Writeback___MUX_autopmuxtreecc65recursive_mux_generator9977__WIRE_autortlilcc2430Or9976 ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9983__WIRE_procmux7792_CMP(\writeback-Writeback___MUX_autopmuxtreecc65recursive_mux_generator9983__WIRE_procmux7792_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9985__WIRE_procmux7794_CMP(\writeback-Writeback___MUX_autopmuxtreecc65recursive_mux_generator9985__WIRE_procmux7794_CMP ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9989__WIRE_autortlilcc2430Or9988(\writeback-Writeback___MUX_autopmuxtreecc65recursive_mux_generator9989__WIRE_autortlilcc2430Or9988 ),
    .__MUX_procmux7801__WIRE_xcpt_valid_i(\writeback-Writeback___MUX_procmux7801__WIRE_xcpt_valid_i ),
    .\__MUX_ternary/core/writebackv245180__WIRE_signex_sel_r (\writeback-Writeback___MUX_ternary/core/writebackv245180__WIRE_signex_sel_r ),
    .addr_alignment_i(data_addr_o[1:0]),
    .clk_i(clk_i),
    .csr_we_addr_i(exe_csr_addr),
    .csr_we_addr_o(wbk_csr_addr),
    .csr_we_data_i(exe_csr_data),
    .csr_we_data_o(wbk_csr_data),
    .csr_we_i(exe_csr_we),
    .csr_we_o(wbk_csr_we),
    .fetch_valid_i(mem_fetch_valid2wbk),
    .fetch_valid_o(wbk_fetch_valid2csr),
    .flush_i(_26_),
    .m_data_i(data_read2wbk),
    .metaReset_writeback(metaReset),
    .p_data_i(exe_p_data),
    .pc_i(mem_pc2wbk),
    .pc_o(wbk_pc2csr),
    .rd_addr_i(exe_rd_addr2wbk),
    .rd_addr_o(wbk_rd_addr),
    .rd_data_o(wbk_rd_data),
    .rd_we_o(wbk_rd_we),
    .regfile_input_sel_i(exe_regfile_input_sel2wbk),
    .regfile_we_i(exe_regfile_we2wbk),
    .rst_i(rst_i),
    .signex_sel_i(exe_signex_sel2wbk),
    .stall_i(stall_pipeline),
    .sys_jump_csr_addr_i(mem_sys_jump_csr_addr2wbk),
    .sys_jump_csr_addr_o(wbk_sys_jump_csr_addr2csr),
    .sys_jump_i(mem_sys_jump2wbk),
    .sys_jump_o(wbk_sys_jump2csr),
    .xcpt_cause_i(mem_xcpt_cause2wbk),
    .xcpt_cause_o(wbk_xcpt_cause2csr),
    .xcpt_tval_i(mem_xcpt_tval2wbk),
    .xcpt_tval_o(wbk_xcpt_tval2csr),
    .xcpt_valid_i(mem_xcpt_valid2wbk),
    .xcpt_valid_o(wbk_xcpt_valid2csr)
  );
  assign __MUX_procmux8492__WIRE_wbk_xcpt_valid2csr = wbk_xcpt_valid2csr;
  assign __MUX_procmux8487__WIRE_mem_fetch_valid2wbk = mem_fetch_valid2wbk;
  assign __MUX_procmux8478__WIRE_exe_fetch_valid2mem = exe_fetch_valid2mem;
  assign __MUX_procmux8466__WIRE_dec_fetch_valid2exe = dec_fetch_valid2exe;
  assign __MUX_procmux8451__WIRE_fet_valid2dec = fet_valid2dec;
  assign __MUX_procmux8433__WIRE_code_ready_i = fuzz_in[32];
  assign __MUX_procmux8412__WIRE_data_ready_i = fuzz_in[66];
  assign auto_cover_out = { \__MUX_autopmuxtreecc65recursive_mux_generator10061__WIRE_eq/core/core_topv43638_Y , \__MUX_autopmuxtreecc65recursive_mux_generator10063__WIRE_eq/core/core_topv42134_Y , __MUX_autopmuxtreecc65recursive_mux_generator10067__WIRE_autortlilcc2430Or10066, \__MUX_procmux8403__WIRE_logic_or/core/core_topv40131_Y , fuzz_in[66], __MUX_procmux8414__WIRE_procmux8408_CMP, \__MUX_procmux8420__WIRE_logic_and/core/core_topv39530_Y , fuzz_in[32], fet_valid2dec, dec_fetch_valid2exe, exe_fetch_valid2mem, mem_fetch_valid2wbk, wbk_xcpt_valid2csr, \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit_paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcdistri_ram-bpu_pc_history___MUX_procmux8501__WIRE_we_i , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_ternary/core/bpuv127835__WIRE_eq/core/bpuv127833_Y , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_procmux4936__WIRE_rst_i , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_procmux3865__WIRE_stall_i , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_procmux3691__WIRE_we , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_procmux3490__WIRE_exe_is_branch_i , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_procmux3156__WIRE_procmux3157_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_procmux3154__WIRE_branch_taken_i , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_procmux3006__WIRE_procmux3007_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9795__WIRE_procmux2938_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9785__WIRE_autortlilcc2430Or9784 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9781__WIRE_procmux3080_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9777__WIRE_autortlilcc2403ReduceOr9776 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9773__WIRE_autortlilcc2403ReduceOr9772 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9769__WIRE_autortlilcc2403ReduceOr9768 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9765__WIRE_autortlilcc2403ReduceOr9764 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9761__WIRE_autortlilcc2430Or9760 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9757__WIRE_procmux6847_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9755__WIRE_procmux6845_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9753__WIRE_autortlilcc2430Or9752 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9749__WIRE_procmux6843_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9747__WIRE_procmux6841_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9745__WIRE_autortlilcc2403ReduceOr9744 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9741__WIRE_autortlilcc2430Or9740 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9737__WIRE_procmux6839_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9735__WIRE_procmux6837_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9733__WIRE_autortlilcc2430Or9732 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9729__WIRE_procmux6835_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9727__WIRE_procmux6833_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9725__WIRE_autortlilcc2403ReduceOr9724 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9721__WIRE_autortlilcc2403ReduceOr9720 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9717__WIRE_autortlilcc2430Or9716 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9713__WIRE_procmux6831_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9711__WIRE_procmux6829_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9709__WIRE_autortlilcc2430Or9708 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9705__WIRE_procmux6827_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9703__WIRE_procmux6825_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9701__WIRE_autortlilcc2403ReduceOr9700 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9697__WIRE_autortlilcc2430Or9696 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9693__WIRE_procmux6823_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9691__WIRE_procmux6821_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9689__WIRE_autortlilcc2430Or9688 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9685__WIRE_procmux6819_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9683__WIRE_procmux6817_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9681__WIRE_autortlilcc2403ReduceOr9680 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9677__WIRE_autortlilcc2403ReduceOr9676 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9673__WIRE_autortlilcc2403ReduceOr9672 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9669__WIRE_autortlilcc2430Or9668 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9665__WIRE_procmux6815_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9663__WIRE_procmux6813_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9661__WIRE_autortlilcc2430Or9660 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9657__WIRE_procmux6811_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9655__WIRE_procmux6809_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9653__WIRE_autortlilcc2403ReduceOr9652 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9649__WIRE_autortlilcc2430Or9648 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9645__WIRE_procmux6807_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9643__WIRE_procmux6805_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9641__WIRE_autortlilcc2430Or9640 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9637__WIRE_procmux6803_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9635__WIRE_procmux6801_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9633__WIRE_autortlilcc2403ReduceOr9632 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9629__WIRE_autortlilcc2403ReduceOr9628 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9625__WIRE_autortlilcc2430Or9624 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9621__WIRE_procmux6799_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9619__WIRE_procmux6797_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9617__WIRE_autortlilcc2430Or9616 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9613__WIRE_procmux6795_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9611__WIRE_procmux6793_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9609__WIRE_autortlilcc2403ReduceOr9608 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9605__WIRE_autortlilcc2430Or9604 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9601__WIRE_procmux6791_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9599__WIRE_procmux6789_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9597__WIRE_autortlilcc2430Or9596 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9593__WIRE_procmux6787_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9591__WIRE_procmux6785_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9585__WIRE_autortlilcc2403ReduceOr9584 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9581__WIRE_autortlilcc2403ReduceOr9580 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9577__WIRE_autortlilcc2403ReduceOr9576 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9573__WIRE_autortlilcc2403ReduceOr9572 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9569__WIRE_autortlilcc2430Or9568 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9565__WIRE_procmux6912_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9563__WIRE_procmux6910_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9561__WIRE_autortlilcc2430Or9560 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9557__WIRE_procmux6908_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9555__WIRE_procmux6906_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9553__WIRE_autortlilcc2403ReduceOr9552 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9549__WIRE_autortlilcc2430Or9548 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9545__WIRE_procmux6904_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9543__WIRE_procmux6902_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9541__WIRE_autortlilcc2430Or9540 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9537__WIRE_procmux6900_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9535__WIRE_procmux6898_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9533__WIRE_autortlilcc2403ReduceOr9532 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9529__WIRE_autortlilcc2403ReduceOr9528 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9525__WIRE_autortlilcc2430Or9524 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9521__WIRE_procmux6896_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9519__WIRE_procmux6894_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9517__WIRE_autortlilcc2430Or9516 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9513__WIRE_procmux6892_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9511__WIRE_procmux6890_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9509__WIRE_autortlilcc2403ReduceOr9508 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9505__WIRE_autortlilcc2430Or9504 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9501__WIRE_procmux6888_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9499__WIRE_procmux6886_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9497__WIRE_autortlilcc2430Or9496 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9493__WIRE_procmux6884_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9491__WIRE_procmux6882_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9489__WIRE_autortlilcc2403ReduceOr9488 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9485__WIRE_autortlilcc2403ReduceOr9484 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9481__WIRE_autortlilcc2403ReduceOr9480 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9477__WIRE_autortlilcc2430Or9476 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9473__WIRE_procmux6880_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9471__WIRE_procmux6878_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9469__WIRE_autortlilcc2430Or9468 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9465__WIRE_procmux6876_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9463__WIRE_procmux6874_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9461__WIRE_autortlilcc2403ReduceOr9460 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9457__WIRE_autortlilcc2430Or9456 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9453__WIRE_procmux6872_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9451__WIRE_procmux6870_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9449__WIRE_autortlilcc2430Or9448 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9445__WIRE_procmux6868_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9443__WIRE_procmux6866_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9441__WIRE_autortlilcc2403ReduceOr9440 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9437__WIRE_autortlilcc2403ReduceOr9436 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9433__WIRE_autortlilcc2430Or9432 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9429__WIRE_procmux6864_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9427__WIRE_procmux6862_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9425__WIRE_autortlilcc2430Or9424 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9421__WIRE_procmux6860_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9419__WIRE_procmux6858_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9417__WIRE_autortlilcc2403ReduceOr9416 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9413__WIRE_autortlilcc2430Or9412 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9409__WIRE_procmux6856_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9407__WIRE_procmux6854_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9405__WIRE_autortlilcc2430Or9404 , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9401__WIRE_procmux6852_CMP , \paramod5f0f63231c9e07cfa44043e1ec6bce97e046e4fcbpu-Branch_Prediction_Unit___MUX_autopmuxtreecc65recursive_mux_generator9399__WIRE_procmux6850_CMP , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8377__WIRE_sys_jump_i , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8367__WIRE_eq/core/csr_filev35258_Y , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8364__WIRE_eq/core/csr_filev35659_Y , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8354__WIRE_logic_and/core/csr_filev37762_Y , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8335__WIRE_logic_and/core/csr_filev46076_Y , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8327__WIRE_logic_and/core/csr_filev48479_Y , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8325__WIRE_logic_and/core/csr_filev45674_Y , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8313__WIRE_logic_and/core/csr_filev51584_Y , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8308__WIRE_logic_and/core/csr_filev52599_Y , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8291__WIRE_procmux8292_CMP , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8283__WIRE_csr_we_i , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8281__WIRE_procmux8282_CMP , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8256__WIRE_logic_and/core/csr_filev692121_Y , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8248__WIRE_logic_and/core/csr_filev716124_Y , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8246__WIRE_logic_and/core/csr_filev688119_Y , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8240__WIRE_logic_and/core/csr_filev740130_Y , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8238__WIRE_logic_or/core/csr_filev51797_Y , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8235__WIRE_logic_and/core/csr_filev750145_Y , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8188__WIRE_xcpt_valid_i , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8164__WIRE_eq/core/csr_filev912154_Y , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8132__WIRE_mstatus_r , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8091__WIRE_and/core/csr_filev880151_Y , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux8040__WIRE_and/core/csr_filev886152_Y , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux7981__WIRE_and/core/csr_filev892153_Y , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux7973__WIRE_trap_to_M , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux7968__WIRE_logic_or/core/csr_filev925162_Y , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux7961__WIRE_eq/core/csr_filev925160_Y , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux7955__WIRE_is_mret , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux7952__WIRE_is_sret , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_procmux7949__WIRE_irq_taken_o , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator9999__WIRE_procmux8199_CMP , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator9997__WIRE_procmux8195_CMP , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator9995__WIRE_procmux8196_CMP , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10053__WIRE_autortlilcc2403ReduceOr10052 , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10049__WIRE_autortlilcc2403ReduceOr10048 , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10045__WIRE_autortlilcc2403ReduceOr10044 , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10041__WIRE_procmux8216_CMP , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10039__WIRE_procmux8217_CMP , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10037__WIRE_procmux8213_CMP , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10035__WIRE_procmux8214_CMP , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10033__WIRE_autortlilcc2403ReduceOr10032 , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10029__WIRE_procmux8210_CMP , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10027__WIRE_procmux8211_CMP , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10025__WIRE_procmux8207_CMP , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10023__WIRE_procmux8208_CMP , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10021__WIRE_autortlilcc2403ReduceOr10020 , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10017__WIRE_autortlilcc2403ReduceOr10016 , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10013__WIRE_procmux8204_CMP , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10011__WIRE_procmux8205_CMP , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10009__WIRE_procmux8201_CMP , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10007__WIRE_procmux8202_CMP , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10005__WIRE_autortlilcc2403ReduceOr10004 , \paramodcsr_fileHART_ID=s32'00000000000000000000000000000000-CSR___MUX_autopmuxtreecc65recursive_mux_generator10001__WIRE_procmux8198_CMP , \decode-Decode___MUX_ternary/core/decodev487388__WIRE_flush_i , \decode-Decode___MUX_ternary/core/decodev417344__WIRE_rv32_imm_selu , \decode-Decode___MUX_ternary/core/decodev385322__WIRE_eq/core/decodev385321_Y , \decode-Decode___MUX_ternary/core/decodev384323__WIRE_eq/core/decodev384320_Y , \decode-Decode___MUX_procmux7520__WIRE_or/core/decodev443373_Y , \decode-Decode___MUX_procmux7514__WIRE_or/core/decodev445374_Y , \decode-Decode___MUX_procmux7511__WIRE_rv32_sub , \decode-Decode___MUX_procmux7505__WIRE_or/core/decodev455377_Y , \decode-Decode___MUX_procmux7502__WIRE_or/core/decodev463379_Y , \decode-Decode___MUX_procmux7496__WIRE_or/core/decodev465380_Y , \decode-Decode___MUX_procmux7487__WIRE_or/core/decodev467381_Y , \decode-Decode___MUX_procmux7475__WIRE_or/core/decodev469382_Y , \decode-Decode___MUX_procmux7460__WIRE_rv32_csr , \decode-Decode___MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y , \decode-Decode___MUX_procmux7454__WIRE_stall_i , \decode-Decode___MUX_procmux7137__WIRE_rv32_ecall , \execute-Execute_muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9383__WIRE_eq/core/muldivv2912542_Y , \execute-Execute_muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9385__WIRE_eq/core/muldivv2912543_Y , \execute-Execute_muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9387__WIRE_eq/core/muldivv2002508_Y , \execute-Execute_muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9389__WIRE_eq/core/muldivv2522520_Y , \execute-Execute_muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9393__WIRE_autortlilcc2403ReduceOr9392 , \execute-Execute_muldiv-MulDiv___MUX_procmux2811__WIRE_logic_or/core/muldivv2912544_Y , \execute-Execute_muldiv-MulDiv___MUX_procmux2814__WIRE_operation_sel_i , \execute-Execute_muldiv-MulDiv___MUX_procmux2816__WIRE_eq/core/muldivv2662524_Y , \execute-Execute_muldiv-MulDiv___MUX_procmux2829__WIRE_is_b_zero , \execute-Execute_muldiv-MulDiv___MUX_procmux2833__WIRE_and/core/muldivv2002509_Y , \execute-Execute_muldiv-MulDiv___MUX_procmux2868__WIRE_or/core/muldivv1662495_Y , \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv1162482__WIRE_is_a_neg , \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv1172484__WIRE_is_b_neg , \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv1302492__WIRE_or/core/muldivv1302487_Y , \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv1662497__WIRE_req_i , \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv1682498__WIRE_is_calc_done , \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv1742500__WIRE_stall_i , \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv2582522__WIRE_div_sub , \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv2632523__WIRE_mull , \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv2712528__WIRE_signed_adjust , \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv2762540__WIRE_or/core/muldivv2762529_Y , \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv2772539__WIRE_operation_mulhsu , \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv852563__WIRE_a_i , \execute-Execute_muldiv-MulDiv___MUX_ternary/core/muldivv852569__WIRE_b_i , \execute-Execute_bcu-BCU___MUX_ternary/core/bcuv682429__WIRE_eq/core/bcuv682428_Y , \execute-Execute_bcu-BCU___MUX_ternary/core/bcuv692431__WIRE_ne/core/bcuv692430_Y , \execute-Execute_bcu-BCU___MUX_ternary/core/bcuv702433__WIRE_lt/core/bcuv702432_Y , \execute-Execute_bcu-BCU___MUX_ternary/core/bcuv712435__WIRE_ge/core/bcuv712434_Y , \execute-Execute_bcu-BCU___MUX_ternary/core/bcuv722437__WIRE_lt/core/bcuv722436_Y , \execute-Execute_bcu-BCU___MUX_ternary/core/bcuv732439__WIRE_ge/core/bcuv732438_Y , \execute-Execute_alu-ALU___MUX_ternary/core/aluv772573__WIRE_lt/core/aluv772572_Y , \execute-Execute_alu-ALU___MUX_ternary/core/aluv782575__WIRE_lt/core/aluv782574_Y , \execute-Execute_alu-ALU___MUX_ternary/core/aluv802579__WIRE_shift_sel_i , \execute-Execute___MUX_ternary/core/executev254207__WIRE_operation_sel_i , \execute-Execute___MUX_ternary/core/executev247204__WIRE_alu_muldiv_sel_i , \execute-Execute___MUX_ternary/core/executev194193__WIRE_or/core/executev194192_Y , \execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9885__WIRE_autortlilcc2430Or9884 , \execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9881__WIRE_procmux7526_CMP , \execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9879__WIRE_procmux7524_CMP , \execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9873__WIRE_autortlilcc2430Or9872 , \execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9869__WIRE_procmux7669_CMP , \execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9867__WIRE_procmux7667_CMP , \execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9861__WIRE_autortlilcc2430Or9860 , \execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9857__WIRE_procmux7674_CMP , \execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9855__WIRE_procmux7672_CMP , \execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9849__WIRE_procmux7677_CMP , \execute-Execute___MUX_autopmuxtreecc65recursive_mux_generator9847__WIRE_procmux7678_CMP , \fetch-Fetch___MUX_procmux7134__WIRE_rst_i , \fetch-Fetch___MUX_procmux7128__WIRE_fetch_valid_o , \fetch-Fetch___MUX_procmux7119__WIRE_stall_delay , \fetch-Fetch___MUX_procmux7107__WIRE_flush_delay , \fetch-Fetch___MUX_procmux7072__WIRE_flush_i , \forwarding_unit-Forwarding_Unit___MUX_ternary/core/forwarding_unitv1392416__WIRE_csr_MEM_WB_fwd , \forwarding_unit-Forwarding_Unit___MUX_ternary/core/forwarding_unitv1382417__WIRE_csr_EXE_MEM_fwd , \forwarding_unit-Forwarding_Unit___MUX_ternary/core/forwarding_unitv1342414__WIRE_rs2_MEM_WB_fwd , \forwarding_unit-Forwarding_Unit___MUX_ternary/core/forwarding_unitv1332415__WIRE_rs2_EXE_MEM_fwd , \forwarding_unit-Forwarding_Unit___MUX_ternary/core/forwarding_unitv1292412__WIRE_rs1_MEM_WB_fwd , \forwarding_unit-Forwarding_Unit___MUX_ternary/core/forwarding_unitv1282413__WIRE_rs1_EXE_MEM_fwd , \memory-Memory___MUX_ternary/core/memoryv108185__WIRE_we_i , \memory-Memory___MUX_procmux7782__WIRE_logic_and/core/memoryv105184_Y , \memory-Memory___MUX_procmux7744__WIRE_procmux7745_CMP , \memory-Memory___MUX_procmux7699__WIRE_procmux7700_CMP , \memory-Memory___MUX_autopmuxtreecc65recursive_mux_generator9953__WIRE_procmux7697_CMP , \memory-Memory___MUX_autopmuxtreecc65recursive_mux_generator9921__WIRE_autortlilcc2430Or9920 , \memory-Memory___MUX_autopmuxtreecc65recursive_mux_generator9917__WIRE_procmux7681_CMP , \memory-Memory___MUX_autopmuxtreecc65recursive_mux_generator9915__WIRE_procmux7741_CMP , \memory-Memory___MUX_autopmuxtreecc65recursive_mux_generator9893__WIRE_autortlilcc2430Or9892 , \memory-Memory___MUX_autopmuxtreecc65recursive_mux_generator9889__WIRE_procmux7721_CMP , \memory-Memory___MUX_autopmuxtreecc65recursive_mux_generator9887__WIRE_procmux7683_CMP , \program_counter-Program_Counter___MUX_ternary/core/program_counterv139409__WIRE_dec_branch_decision_i , \program_counter-Program_Counter___MUX_procmux7069__WIRE_rst_i , \program_counter-Program_Counter___MUX_procmux7066__WIRE_stall_i , \program_counter-Program_Counter___MUX_procmux7063__WIRE_irq_taken_i , \program_counter-Program_Counter___MUX_procmux7060__WIRE_is_fencei_i , \program_counter-Program_Counter___MUX_procmux7057__WIRE_and/core/program_counterv136408_Y , \program_counter-Program_Counter___MUX_procmux7054__WIRE_exe_branch_misprediction_i , \program_counter-Program_Counter___MUX_procmux7051__WIRE_sys_jump_i , \program_counter-Program_Counter___MUX_procmux7048__WIRE_and/core/program_counterv142410_Y , \reg_file-Register_File___MUX_ternary/core/reg_filev86453__WIRE_and/core/reg_filev86451_Y , \reg_file-Register_File___MUX_ternary/core/reg_filev85449__WIRE_and/core/reg_filev85447_Y , \reg_file-Register_File___MUX_procmux7036__WIRE_rst_i , \reg_file-Register_File___MUX_procmux6922__WIRE_we , \writeback-Writeback___MUX_ternary/core/writebackv245180__WIRE_signex_sel_r , \writeback-Writeback___MUX_procmux7801__WIRE_xcpt_valid_i , \writeback-Writeback___MUX_autopmuxtreecc65recursive_mux_generator9989__WIRE_autortlilcc2430Or9988 , \writeback-Writeback___MUX_autopmuxtreecc65recursive_mux_generator9985__WIRE_procmux7794_CMP , \writeback-Writeback___MUX_autopmuxtreecc65recursive_mux_generator9983__WIRE_procmux7792_CMP , \writeback-Writeback___MUX_autopmuxtreecc65recursive_mux_generator9977__WIRE_autortlilcc2430Or9976 , \writeback-Writeback___MUX_autopmuxtreecc65recursive_mux_generator9973__WIRE_procmux7798_CMP , \writeback-Writeback___MUX_autopmuxtreecc65recursive_mux_generator9971__WIRE_procmux7796_CMP  };
  assign code_i = fuzz_in[31:0];
  assign code_ready_i = fuzz_in[32];
  assign data_addr_ext_i = fuzz_in[33];
  assign data_i = fuzz_in[65:34];
  assign data_ready_i = fuzz_in[66];
  assign ext_irq_i = fuzz_in[67];
  assign init_pc_addr_i = fuzz_in[99:68];
  assign sft_irq_i = fuzz_in[100];
  assign stall_i = fuzz_in[101];
  assign tmr_irq_i = fuzz_in[102];
endmodule

(* dynports =  1  *)
(* hdlname = "\\decode" *)
(* src = "./core/decode.v:62.1-649.10" *)
module decode(clk_i, rst_i, stall_i, flush_i, pc_i, instruction_i, branch_hit_i, branch_decision_i, csr_data_i, privilege_lvl_i, rs1_data_i, rs2_data_i, is_load_hazard_o, rs1_addr_o, rs2_addr_o, unsupported_instr_o, imm_o, csr_we_o, inputA_sel_o, inputB_sel_o, operation_sel_o
, alu_muldiv_sel_o, shift_sel_o, branch_hit_o, branch_decision_o, is_jalr_o, is_fencei_o, pc_o, is_branch_o, is_jal_o, csr_addr_o, csr_imm_o, rd_addr_o, regfile_we_o, regfile_input_sel_o, we_o, re_o, dsize_sel_o, signex_sel_o, is_amo_o, amo_type_o, rs1_addr2fwd_o
, rs2_addr2fwd_o, rs1_data2fwd_o, rs2_data2fwd_o, csr_addr2fwd_o, csr_data2fwd_o, sys_jump_o, sys_jump_csr_addr_o, fetch_valid_i, fetch_valid_o, xcpt_valid_i, xcpt_cause_i, xcpt_tval_i, xcpt_valid_o, xcpt_cause_o, xcpt_tval_o, \__MUX_procmux7487__WIRE_or/core/decodev467381_Y , \__MUX_procmux7502__WIRE_or/core/decodev463379_Y , \__MUX_procmux7505__WIRE_or/core/decodev455377_Y , __MUX_procmux7511__WIRE_rv32_sub, \__MUX_procmux7514__WIRE_or/core/decodev445374_Y , __MUX_procmux7137__WIRE_rv32_ecall
, __MUX_procmux7454__WIRE_stall_i, \__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y , __MUX_procmux7460__WIRE_rv32_csr, \__MUX_procmux7475__WIRE_or/core/decodev469382_Y , \__MUX_procmux7496__WIRE_or/core/decodev465380_Y , \__MUX_procmux7520__WIRE_or/core/decodev443373_Y , \__MUX_ternary/core/decodev384323__WIRE_eq/core/decodev384320_Y , \__MUX_ternary/core/decodev385322__WIRE_eq/core/decodev385321_Y , \__MUX_ternary/core/decodev417344__WIRE_rv32_imm_selu , \__MUX_ternary/core/decodev487388__WIRE_flush_i , metaReset_decode);
  (* src = "./core/decode.v:483.1-647.4" *)
  wire [31:0] _000_;
  (* src = "./core/decode.v:441.1-449.4" *)
  wire [1:0] _001_;
  (* src = "./core/decode.v:451.1-459.4" *)
  wire [1:0] _002_;
  (* src = "./core/decode.v:461.1-475.4" *)
  wire [2:0] _003_;
  (* src = "./core/decode.v:461.1-475.4" *)
  wire [2:0] _004_;
  (* src = "./core/decode.v:461.1-475.4" *)
  wire [2:0] _005_;
  (* src = "./core/decode.v:461.1-475.4" *)
  wire [2:0] _006_;
  (* src = "./core/decode.v:333.17-333.42" *)
  wire _007_;
  (* src = "./core/decode.v:392.9-392.35" *)
  wire [31:0] _008_;
  (* src = "./core/decode.v:393.11-393.37" *)
  wire [31:0] _009_;
  (* src = "./core/decode.v:394.11-394.37" *)
  wire [31:0] _010_;
  (* src = "./core/decode.v:395.11-395.37" *)
  wire [31:0] _011_;
  (* src = "./core/decode.v:396.11-396.37" *)
  wire [31:0] _012_;
  (* src = "./core/decode.v:631.34-631.92" *)
  wire _013_;
  (* src = "./core/decode.v:631.21-631.93" *)
  wire _014_;
  wire _015_;
  (* src = "./core/decode.v:362.34-362.74" *)
  wire _016_;
  (* src = "./core/decode.v:363.35-363.75" *)
  wire _017_;
  (* src = "./core/decode.v:364.33-364.73" *)
  wire _018_;
  (* src = "./core/decode.v:365.33-365.73" *)
  wire _019_;
  (* src = "./core/decode.v:434.24-434.47" *)
  wire _020_;
  (* src = "./core/decode.v:437.24-437.47" *)
  wire _021_;
  (* src = "./core/decode.v:631.62-631.92" *)
  wire _022_;
  (* src = "./core/decode.v:485.19-485.38" *)
  wire _023_;
  (* src = "./core/decode.v:485.30-485.38" *)
  wire _024_;
  (* src = "./core/decode.v:631.32-631.93" *)
  wire _025_;
  (* src = "./core/decode.v:425.23-425.45" *)
  wire _026_;
  (* src = "./core/decode.v:426.23-426.47" *)
  wire _027_;
  (* src = "./core/decode.v:426.23-426.60" *)
  wire _028_;
  (* src = "./core/decode.v:430.23-430.47" *)
  wire _029_;
  (* src = "./core/decode.v:430.23-430.61" *)
  wire _030_;
  (* src = "./core/decode.v:435.24-435.46" *)
  wire _031_;
  (* src = "./core/decode.v:435.24-435.59" *)
  wire _032_;
  (* src = "./core/decode.v:435.24-435.72" *)
  wire _033_;
  (* src = "./core/decode.v:435.24-436.32" *)
  wire _034_;
  (* src = "./core/decode.v:435.24-436.47" *)
  wire _035_;
  (* src = "./core/decode.v:435.24-436.62" *)
  wire _036_;
  (* src = "./core/decode.v:359.32-359.48" *)
  wire _037_;
  (* src = "./core/decode.v:327.22-327.45" *)
  wire _038_;
  (* src = "./core/decode.v:392.8-393.38" *)
  wire [31:0] _039_;
  (* src = "./core/decode.v:392.8-394.38" *)
  wire [31:0] _040_;
  (* src = "./core/decode.v:392.8-395.38" *)
  wire [31:0] _041_;
  (* src = "./core/decode.v:403.21-403.54" *)
  wire _042_;
  (* src = "./core/decode.v:403.21-403.68" *)
  wire _043_;
  (* src = "./core/decode.v:403.21-404.28" *)
  wire _044_;
  (* src = "./core/decode.v:403.21-404.39" *)
  wire _045_;
  (* src = "./core/decode.v:403.21-404.50" *)
  wire _046_;
  (* src = "./core/decode.v:403.21-404.61" *)
  wire _047_;
  (* src = "./core/decode.v:439.28-439.59" *)
  wire _048_;
  (* src = "./core/decode.v:443.9-443.30" *)
  wire _049_;
  (* src = "./core/decode.v:455.14-455.34" *)
  wire _050_;
  (* src = "./core/decode.v:631.35-631.58" *)
  wire _051_;
  (* src = "./core/decode.v:639.23-639.44" *)
  wire _052_;
  (* src = "./core/decode.v:640.32-640.83" *)
  wire [1:0] _053_;
  wire [11:0] _054_;
  wire [31:0] _055_;
  wire [31:0] _056_;
  wire [3:0] _057_;
  wire _058_;
  wire [1:0] _059_;
  wire _060_;
  wire _061_;
  wire [4:0] _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire [4:0] _066_;
  wire _067_;
  wire [4:0] _068_;
  wire [4:0] _069_;
  wire [1:0] _070_;
  wire _071_;
  wire _072_;
  wire [2:0] _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire [2:0] _081_;
  wire [1:0] _082_;
  wire [1:0] _083_;
  wire [31:0] _084_;
  wire [31:0] _085_;
  wire [31:0] _086_;
  wire _087_;
  wire [31:0] _088_;
  (* src = "./core/decode.v:384.27-385.61" *)
  (* unused_bits = "4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _089_;
  (* src = "./core/decode.v:385.26-385.61" *)
  wire [31:0] _090_;
  (* src = "./core/decode.v:487.17-487.36" *)
  wire [31:0] _091_;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux7137__WIRE_rv32_ecall;
  wire __MUX_procmux7137__WIRE_rv32_ecall;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux7454__WIRE_stall_i;
  wire __MUX_procmux7454__WIRE_stall_i;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ;
  wire \__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux7460__WIRE_rv32_csr;
  wire __MUX_procmux7460__WIRE_rv32_csr;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux7475__WIRE_or/core/decodev469382_Y ;
  wire \__MUX_procmux7475__WIRE_or/core/decodev469382_Y ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux7487__WIRE_or/core/decodev467381_Y ;
  wire \__MUX_procmux7487__WIRE_or/core/decodev467381_Y ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux7496__WIRE_or/core/decodev465380_Y ;
  wire \__MUX_procmux7496__WIRE_or/core/decodev465380_Y ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux7502__WIRE_or/core/decodev463379_Y ;
  wire \__MUX_procmux7502__WIRE_or/core/decodev463379_Y ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux7505__WIRE_or/core/decodev455377_Y ;
  wire \__MUX_procmux7505__WIRE_or/core/decodev455377_Y ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux7511__WIRE_rv32_sub;
  wire __MUX_procmux7511__WIRE_rv32_sub;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux7514__WIRE_or/core/decodev445374_Y ;
  wire \__MUX_procmux7514__WIRE_or/core/decodev445374_Y ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux7520__WIRE_or/core/decodev443373_Y ;
  wire \__MUX_procmux7520__WIRE_or/core/decodev443373_Y ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/decodev384323__WIRE_eq/core/decodev384320_Y ;
  wire \__MUX_ternary/core/decodev384323__WIRE_eq/core/decodev384320_Y ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/decodev385322__WIRE_eq/core/decodev385321_Y ;
  wire \__MUX_ternary/core/decodev385322__WIRE_eq/core/decodev385321_Y ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/decodev417344__WIRE_rv32_imm_selu ;
  wire \__MUX_ternary/core/decodev417344__WIRE_rv32_imm_selu ;
  (* decode = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/decodev487388__WIRE_flush_i ;
  wire \__MUX_ternary/core/decodev487388__WIRE_flush_i ;
  (* src = "./core/decode.v:168.19-168.33" *)
  wire alu_muldiv_sel;
  (* src = "./core/decode.v:104.29-104.45" *)
  output alu_muldiv_sel_o;
  reg alu_muldiv_sel_o;
  (* src = "./core/decode.v:129.29-129.39" *)
  output [4:0] amo_type_o;
  reg [4:0] amo_type_o;
  (* src = "./core/decode.v:78.29-78.46" *)
  input branch_decision_i;
  wire branch_decision_i;
  (* src = "./core/decode.v:107.29-107.46" *)
  output branch_decision_o;
  reg branch_decision_o;
  (* src = "./core/decode.v:77.29-77.41" *)
  input branch_hit_i;
  wire branch_hit_i;
  (* src = "./core/decode.v:106.29-106.41" *)
  output branch_hit_o;
  reg branch_hit_o;
  (* src = "./core/decode.v:65.29-65.34" *)
  input clk_i;
  wire clk_i;
  (* src = "./core/decode.v:136.29-136.43" *)
  output [11:0] csr_addr2fwd_o;
  reg [11:0] csr_addr2fwd_o;
  (* src = "./core/decode.v:117.29-117.39" *)
  output [11:0] csr_addr_o;
  wire [11:0] csr_addr_o;
  (* src = "./core/decode.v:137.29-137.43" *)
  output [31:0] csr_data2fwd_o;
  reg [31:0] csr_data2fwd_o;
  (* src = "./core/decode.v:81.29-81.39" *)
  input [31:0] csr_data_i;
  wire [31:0] csr_data_i;
  (* src = "./core/decode.v:118.29-118.38" *)
  output [4:0] csr_imm_o;
  reg [4:0] csr_imm_o;
  (* src = "./core/decode.v:100.29-100.37" *)
  output csr_we_o;
  reg csr_we_o;
  (* src = "./core/decode.v:126.29-126.40" *)
  output [1:0] dsize_sel_o;
  reg [1:0] dsize_sel_o;
  (* src = "./core/decode.v:144.29-144.42" *)
  input fetch_valid_i;
  wire fetch_valid_i;
  (* src = "./core/decode.v:145.29-145.42" *)
  output fetch_valid_o;
  reg fetch_valid_o;
  (* src = "./core/decode.v:72.29-72.36" *)
  input flush_i;
  wire flush_i;
  (* src = "./core/decode.v:157.19-157.22" *)
  wire [31:0] imm;
  (* src = "./core/decode.v:99.29-99.34" *)
  output [31:0] imm_o;
  reg [31:0] imm_o;
  (* src = "./core/decode.v:162.19-162.29" *)
  wire [1:0] inputA_sel;
  (* src = "./core/decode.v:101.29-101.41" *)
  output [1:0] inputA_sel_o;
  reg [1:0] inputA_sel_o;
  (* src = "./core/decode.v:163.19-163.29" *)
  wire [1:0] inputB_sel;
  (* src = "./core/decode.v:102.29-102.41" *)
  output [1:0] inputB_sel_o;
  reg [1:0] inputB_sel_o;
  (* src = "./core/decode.v:76.29-76.42" *)
  input [31:0] instruction_i;
  wire [31:0] instruction_i;
  (* src = "./core/decode.v:128.29-128.37" *)
  output is_amo_o;
  reg is_amo_o;
  (* src = "./core/decode.v:431.6-431.17" *)
  wire is_amo_type;
  (* src = "./core/decode.v:428.6-428.15" *)
  wire is_b_type;
  (* src = "./core/decode.v:113.29-113.40" *)
  output is_branch_o;
  reg is_branch_o;
  (* src = "./core/decode.v:430.6-430.17" *)
  wire is_csr_type;
  (* src = "./core/decode.v:429.6-429.14" *)
  wire is_fence;
  (* src = "./core/decode.v:109.29-109.40" *)
  output is_fencei_o;
  reg is_fencei_o;
  (* src = "./core/decode.v:426.6-426.15" *)
  wire is_i_type;
  (* src = "./core/decode.v:114.29-114.37" *)
  output is_jal_o;
  reg is_jal_o;
  (* src = "./core/decode.v:108.29-108.38" *)
  output is_jalr_o;
  reg is_jalr_o;
  (* src = "./core/decode.v:89.29-89.45" *)
  output is_load_hazard_o;
  wire is_load_hazard_o;
  (* src = "./core/decode.v:425.6-425.15" *)
  wire is_r_type;
  (* src = "./core/decode.v:434.6-434.20" *)
  wire is_rs1_rd_same;
  (* src = "./core/decode.v:437.6-437.20" *)
  wire is_rs2_rd_same;
  (* src = "./core/decode.v:427.6-427.15" *)
  wire is_s_type;
  (* meta_reset = 32'd1 *)
  input metaReset_decode;
  wire metaReset_decode;
  (* src = "./core/decode.v:257.6-257.19" *)
  wire opcode_1_0_11;
  (* src = "./core/decode.v:259.6-259.20" *)
  wire opcode_4_2_000;
  (* src = "./core/decode.v:260.6-260.20" *)
  wire opcode_4_2_001;
  (* src = "./core/decode.v:262.6-262.20" *)
  wire opcode_4_2_011;
  (* src = "./core/decode.v:263.6-263.20" *)
  wire opcode_4_2_100;
  (* src = "./core/decode.v:264.6-264.20" *)
  wire opcode_4_2_101;
  (* src = "./core/decode.v:268.6-268.19" *)
  wire opcode_6_5_00;
  (* src = "./core/decode.v:269.6-269.19" *)
  wire opcode_6_5_01;
  (* src = "./core/decode.v:271.6-271.19" *)
  wire opcode_6_5_11;
  (* src = "./core/decode.v:165.19-165.32" *)
  wire [2:0] operation_sel;
  (* src = "./core/decode.v:103.29-103.44" *)
  output [2:0] operation_sel_o;
  reg [2:0] operation_sel_o;
  (* src = "./core/decode.v:75.29-75.33" *)
  input [31:0] pc_i;
  wire [31:0] pc_i;
  (* src = "./core/decode.v:112.29-112.33" *)
  output [31:0] pc_o;
  reg [31:0] pc_o;
  (* src = "./core/decode.v:82.29-82.44" *)
  input [1:0] privilege_lvl_i;
  wire [1:0] privilege_lvl_i;
  (* src = "./core/decode.v:121.29-121.38" *)
  output [4:0] rd_addr_o;
  reg [4:0] rd_addr_o;
  (* src = "./core/decode.v:160.19-160.21" *)
  wire re;
  (* src = "./core/decode.v:125.29-125.33" *)
  output re_o;
  reg re_o;
  (* src = "./core/decode.v:164.19-164.36" *)
  wire [2:0] regfile_input_sel;
  (* src = "./core/decode.v:123.29-123.48" *)
  output [2:0] regfile_input_sel_o;
  reg [2:0] regfile_input_sel_o;
  (* src = "./core/decode.v:161.19-161.29" *)
  wire regfile_we;
  (* src = "./core/decode.v:122.29-122.41" *)
  output regfile_we_o;
  reg regfile_we_o;
  (* src = "./core/decode.v:132.29-132.43" *)
  output [4:0] rs1_addr2fwd_o;
  wire [4:0] rs1_addr2fwd_o;
  (* src = "./core/decode.v:92.29-92.39" *)
  output [4:0] rs1_addr_o;
  wire [4:0] rs1_addr_o;
  (* src = "./core/decode.v:134.29-134.43" *)
  output [31:0] rs1_data2fwd_o;
  reg [31:0] rs1_data2fwd_o;
  (* src = "./core/decode.v:85.29-85.39" *)
  input [31:0] rs1_data_i;
  wire [31:0] rs1_data_i;
  (* src = "./core/decode.v:133.29-133.43" *)
  output [4:0] rs2_addr2fwd_o;
  reg [4:0] rs2_addr2fwd_o;
  (* src = "./core/decode.v:93.29-93.39" *)
  output [4:0] rs2_addr_o;
  wire [4:0] rs2_addr_o;
  (* src = "./core/decode.v:135.29-135.43" *)
  output [31:0] rs2_data2fwd_o;
  reg [31:0] rs2_data2fwd_o;
  (* src = "./core/decode.v:86.29-86.39" *)
  input [31:0] rs2_data_i;
  wire [31:0] rs2_data_i;
  (* src = "./core/decode.v:66.29-66.34" *)
  input rst_i;
  wire rst_i;
  (* src = "./core/decode.v:323.6-323.14" *)
  wire rv32_amo;
  (* src = "./core/decode.v:320.6-320.16" *)
  wire rv32_auipc;
  (* src = "./core/decode.v:318.6-318.17" *)
  wire rv32_branch;
  (* src = "./core/decode.v:359.6-359.14" *)
  wire rv32_csr;
  (* src = "./core/decode.v:355.6-355.16" *)
  wire rv32_csrrc;
  (* src = "./core/decode.v:354.6-354.16" *)
  wire rv32_csrrs;
  (* src = "./core/decode.v:353.6-353.16" *)
  wire rv32_csrrw;
  (* src = "./core/decode.v:363.6-363.17" *)
  wire rv32_ebreak;
  (* src = "./core/decode.v:362.6-362.16" *)
  wire rv32_ecall;
  (* src = "./core/decode.v:347.6-347.16" *)
  wire rv32_fence;
  (* src = "./core/decode.v:348.6-348.17" *)
  wire rv32_fencei;
  (* src = "./core/decode.v:273.6-273.21" *)
  wire rv32_funct3_000;
  (* src = "./core/decode.v:274.6-274.21" *)
  wire rv32_funct3_001;
  (* src = "./core/decode.v:275.6-275.21" *)
  wire rv32_funct3_010;
  (* src = "./core/decode.v:276.6-276.21" *)
  wire rv32_funct3_011;
  (* src = "./core/decode.v:277.6-277.21" *)
  wire rv32_funct3_100;
  (* src = "./core/decode.v:278.6-278.21" *)
  wire rv32_funct3_101;
  (* src = "./core/decode.v:284.6-284.25" *)
  wire rv32_funct7_0000001;
  (* src = "./core/decode.v:283.6-283.25" *)
  wire rv32_funct7_0100000;
  (* src = "./core/decode.v:327.6-327.19" *)
  wire rv32_imm_seli;
  (* src = "./core/decode.v:331.6-331.19" *)
  wire rv32_imm_selj;
  (* src = "./core/decode.v:328.6-328.19" *)
  wire rv32_imm_sels;
  (* src = "./core/decode.v:330.6-330.19" *)
  wire rv32_imm_selu;
  (* src = "./core/decode.v:315.6-315.15" *)
  wire rv32_jalr;
  (* src = "./core/decode.v:370.6-370.13" *)
  wire rv32_lb;
  (* src = "./core/decode.v:373.6-373.14" *)
  wire rv32_lbu;
  (* src = "./core/decode.v:371.6-371.13" *)
  wire rv32_lh;
  (* src = "./core/decode.v:374.6-374.14" *)
  wire rv32_lhu;
  (* src = "./core/decode.v:316.6-316.15" *)
  wire rv32_load;
  (* src = "./core/decode.v:319.6-319.14" *)
  wire rv32_lui;
  (* src = "./core/decode.v:372.6-372.13" *)
  wire rv32_lw;
  (* src = "./core/decode.v:321.6-321.18" *)
  wire rv32_miscmem;
  (* src = "./core/decode.v:364.6-364.15" *)
  wire rv32_mret;
  (* src = "./core/decode.v:312.6-312.13" *)
  wire rv32_op;
  (* src = "./core/decode.v:313.6-313.17" *)
  wire rv32_op_imm;
  (* src = "./core/decode.v:365.6-365.15" *)
  wire rv32_sret;
  (* src = "./core/decode.v:333.6-333.14" *)
  wire rv32_sub;
  (* src = "./core/decode.v:361.6-361.17" *)
  wire rv32_sys_op;
  (* src = "./core/decode.v:322.6-322.17" *)
  wire rv32_system;
  (* src = "./core/decode.v:105.29-105.40" *)
  output shift_sel_o;
  reg shift_sel_o;
  (* src = "./core/decode.v:127.29-127.41" *)
  output signex_sel_o;
  reg signex_sel_o;
  (* src = "./core/decode.v:69.29-69.36" *)
  input stall_i;
  wire stall_i;
  (* src = "./core/decode.v:141.29-141.48" *)
  output [1:0] sys_jump_csr_addr_o;
  reg [1:0] sys_jump_csr_addr_o;
  (* src = "./core/decode.v:140.29-140.39" *)
  output sys_jump_o;
  reg sys_jump_o;
  (* src = "./core/decode.v:96.29-96.48" *)
  output unsupported_instr_o;
  wire unsupported_instr_o;
  (* src = "./core/decode.v:159.19-159.21" *)
  wire we;
  (* src = "./core/decode.v:124.29-124.33" *)
  output we_o;
  reg we_o;
  (* src = "./core/decode.v:384.14-384.24" *)
  wire [3:0] xcpt_cause;
  (* src = "./core/decode.v:149.29-149.41" *)
  input [3:0] xcpt_cause_i;
  wire [3:0] xcpt_cause_i;
  (* src = "./core/decode.v:152.29-152.41" *)
  output [3:0] xcpt_cause_o;
  reg [3:0] xcpt_cause_o;
  (* src = "./core/decode.v:150.29-150.40" *)
  input [31:0] xcpt_tval_i;
  wire [31:0] xcpt_tval_i;
  (* src = "./core/decode.v:153.29-153.40" *)
  output [31:0] xcpt_tval_o;
  reg [31:0] xcpt_tval_o;
  (* src = "./core/decode.v:148.29-148.41" *)
  input xcpt_valid_i;
  wire xcpt_valid_i;
  (* src = "./core/decode.v:151.29-151.41" *)
  output xcpt_valid_o;
  reg xcpt_valid_o;
  assign rv32_op = opcode_6_5_01 & (* src = "./core/decode.v:312.16-312.46" *) opcode_4_2_100;
  assign rv32_op_imm = opcode_6_5_00 & (* src = "./core/decode.v:313.20-313.50" *) opcode_4_2_100;
  assign rv32_imm_selj = opcode_6_5_11 & (* src = "./core/decode.v:314.17-314.47" *) opcode_4_2_011;
  assign rv32_jalr = opcode_6_5_11 & (* src = "./core/decode.v:315.18-315.48" *) opcode_4_2_001;
  assign rv32_load = opcode_6_5_00 & (* src = "./core/decode.v:316.18-316.48" *) opcode_4_2_000;
  assign rv32_imm_sels = opcode_6_5_01 & (* src = "./core/decode.v:317.19-317.49" *) opcode_4_2_000;
  assign rv32_branch = opcode_6_5_11 & (* src = "./core/decode.v:318.20-318.50" *) opcode_4_2_000;
  assign rv32_lui = opcode_6_5_01 & (* src = "./core/decode.v:319.17-319.47" *) opcode_4_2_101;
  assign rv32_auipc = opcode_6_5_00 & (* src = "./core/decode.v:320.19-320.49" *) opcode_4_2_101;
  assign rv32_miscmem = opcode_6_5_00 & (* src = "./core/decode.v:321.21-321.51" *) opcode_4_2_011;
  assign rv32_system = opcode_6_5_11 & (* src = "./core/decode.v:322.20-322.50" *) opcode_4_2_100;
  assign rv32_amo = opcode_6_5_01 & (* src = "./core/decode.v:323.17-323.47" *) opcode_4_2_011;
  assign alu_muldiv_sel = rv32_op & (* src = "./core/decode.v:325.14-325.43" *) rv32_funct7_0000001;
  assign _007_ = rv32_op & (* src = "./core/decode.v:333.17-333.42" *) rv32_funct3_000;
  assign rv32_sub = _007_ & (* src = "./core/decode.v:333.17-333.64" *) rv32_funct7_0100000;
  assign rv32_fence = rv32_miscmem & (* src = "./core/decode.v:347.20-347.50" *) rv32_funct3_000;
  assign rv32_fencei = rv32_miscmem & (* src = "./core/decode.v:348.20-348.50" *) rv32_funct3_001;
  assign rv32_csrrw = rv32_system & (* src = "./core/decode.v:353.19-353.48" *) rv32_funct3_001;
  assign rv32_csrrs = rv32_system & (* src = "./core/decode.v:354.19-354.48" *) rv32_funct3_010;
  assign rv32_csrrc = rv32_system & (* src = "./core/decode.v:355.19-355.48" *) rv32_funct3_011;
  assign rv32_csr = rv32_system & (* src = "./core/decode.v:359.17-359.49" *) _037_;
  assign rv32_sys_op = rv32_system & (* src = "./core/decode.v:361.20-361.49" *) rv32_funct3_000;
  assign rv32_ecall = rv32_sys_op & (* src = "./core/decode.v:362.19-362.75" *) _016_;
  assign rv32_ebreak = rv32_sys_op & (* src = "./core/decode.v:363.20-363.76" *) _017_;
  assign rv32_mret = rv32_sys_op & (* src = "./core/decode.v:364.18-364.74" *) _018_;
  assign rv32_sret = rv32_sys_op & (* src = "./core/decode.v:365.18-365.74" *) _019_;
  assign rv32_lb = rv32_load & (* src = "./core/decode.v:370.16-370.43" *) rv32_funct3_000;
  assign rv32_lh = rv32_load & (* src = "./core/decode.v:371.16-371.43" *) rv32_funct3_001;
  assign rv32_lw = rv32_load & (* src = "./core/decode.v:372.16-372.43" *) rv32_funct3_010;
  assign rv32_lbu = rv32_load & (* src = "./core/decode.v:373.17-373.44" *) rv32_funct3_100;
  assign rv32_lhu = rv32_load & (* src = "./core/decode.v:374.17-374.44" *) rv32_funct3_101;
  assign _008_ = { rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli, rv32_imm_seli } & (* src = "./core/decode.v:392.9-392.35" *) { instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31:20] };
  assign _009_ = { rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels, rv32_imm_sels } & (* src = "./core/decode.v:393.11-393.37" *) { instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31:25], instruction_i[11:7] };
  assign _010_ = { rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch, rv32_branch } & (* src = "./core/decode.v:394.11-394.37" *) { instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[7], instruction_i[30:25], instruction_i[11:8], 1'h0 };
  assign _011_ = { rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu, rv32_imm_selu } & (* src = "./core/decode.v:395.11-395.37" *) { instruction_i[31:12], 12'h000 };
  assign _012_ = { rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj, rv32_imm_selj } & (* src = "./core/decode.v:396.11-396.37" *) { instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[31], instruction_i[19:12], instruction_i[20], instruction_i[30:21], 1'h0 };
  assign _013_ = _051_ & (* src = "./core/decode.v:631.34-631.92" *) _022_;
  assign _014_ = rv32_csr & (* src = "./core/decode.v:631.21-631.93" *) _025_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) rs2_data2fwd_o <= 32'd0;
    else if (!stall_i) rs2_data2fwd_o <= _085_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) csr_addr2fwd_o <= 12'h000;
    else if (!stall_i) csr_addr2fwd_o <= _054_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) csr_data2fwd_o <= 32'd0;
    else if (!stall_i) csr_data2fwd_o <= _055_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) rs1_data2fwd_o <= 32'd0;
    else if (!stall_i) rs1_data2fwd_o <= _086_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) sys_jump_csr_addr_o <= 2'h0;
    else if (!stall_i) sys_jump_csr_addr_o <= _059_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) sys_jump_o <= 1'h0;
    else if (!stall_i) sys_jump_o <= _060_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) is_branch_o <= 1'h0;
    else if (!stall_i) is_branch_o <= _077_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) is_jal_o <= 1'h0;
    else if (!stall_i) is_jal_o <= _076_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) rd_addr_o <= 5'h00;
    else if (!stall_i) rd_addr_o <= _069_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) regfile_we_o <= 1'h1;
    else if (!stall_i) regfile_we_o <= _074_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) regfile_input_sel_o <= 3'h4;
    else if (!stall_i) regfile_input_sel_o <= _073_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) we_o <= 1'h0;
    else if (!stall_i) we_o <= _072_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) re_o <= 1'h0;
    else if (!stall_i) re_o <= _071_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) dsize_sel_o <= 2'h0;
    else if (!stall_i) dsize_sel_o <= _070_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) signex_sel_o <= 1'h0;
    else if (!stall_i) signex_sel_o <= _080_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) is_amo_o <= 1'h0;
    else if (!stall_i) is_amo_o <= _061_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) amo_type_o <= 5'h00;
    else if (!stall_i) amo_type_o <= _062_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) csr_imm_o <= 5'h00;
    else if (!stall_i) csr_imm_o <= _066_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) rs2_addr2fwd_o <= 5'h00;
    else if (!stall_i) rs2_addr2fwd_o <= _068_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) branch_hit_o <= 1'h0;
    else if (!stall_i) branch_hit_o <= _065_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) branch_decision_o <= 1'h0;
    else if (!stall_i) branch_decision_o <= _064_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (_015_) pc_o <= _000_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) fetch_valid_o <= 1'h0;
    else if (!stall_i) fetch_valid_o <= _087_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) xcpt_valid_o <= 1'h0;
    else if (!stall_i) xcpt_valid_o <= _058_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) xcpt_cause_o <= 4'h0;
    else if (!stall_i) xcpt_cause_o <= _057_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) xcpt_tval_o <= 32'd0;
    else if (!stall_i) xcpt_tval_o <= _056_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) imm_o <= 32'd0;
    else if (!stall_i) imm_o <= _084_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) csr_we_o <= 1'h0;
    else if (!stall_i) csr_we_o <= _067_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) inputA_sel_o <= 2'h2;
    else if (!stall_i) inputA_sel_o <= _083_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) inputB_sel_o <= 2'h0;
    else if (!stall_i) inputB_sel_o <= _082_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) operation_sel_o <= 3'h0;
    else if (!stall_i) operation_sel_o <= _081_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) alu_muldiv_sel_o <= 1'h0;
    else if (!stall_i) alu_muldiv_sel_o <= _079_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) shift_sel_o <= 1'h0;
    else if (!stall_i) shift_sel_o <= _078_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) is_jalr_o <= 1'h0;
    else if (!stall_i) is_jalr_o <= _075_;
  (* src = "./core/decode.v:483.1-647.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y ) is_fencei_o <= 1'h0;
    else if (!stall_i) is_fencei_o <= _063_;
  assign _015_ = { \__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y , stall_i } != 2'h1;
  assign opcode_1_0_11 = instruction_i[1:0] == (* src = "./core/decode.v:257.23-257.44" *) 2'h3;
  assign opcode_4_2_000 = ! (* src = "./core/decode.v:259.24-259.46" *) instruction_i[4:2];
  assign opcode_4_2_001 = instruction_i[4:2] == (* src = "./core/decode.v:260.24-260.46" *) 3'h1;
  assign opcode_4_2_011 = instruction_i[4:2] == (* src = "./core/decode.v:262.24-262.46" *) 3'h3;
  assign opcode_4_2_100 = instruction_i[4:2] == (* src = "./core/decode.v:263.24-263.46" *) 3'h4;
  assign opcode_4_2_101 = instruction_i[4:2] == (* src = "./core/decode.v:264.24-264.46" *) 3'h5;
  assign opcode_6_5_00 = ! (* src = "./core/decode.v:268.23-268.44" *) instruction_i[6:5];
  assign opcode_6_5_01 = instruction_i[6:5] == (* src = "./core/decode.v:269.23-269.44" *) 2'h1;
  assign opcode_6_5_11 = instruction_i[6:5] == (* src = "./core/decode.v:271.23-271.44" *) 2'h3;
  assign rv32_funct3_000 = ! (* src = "./core/decode.v:273.25-273.46" *) instruction_i[14:12];
  assign rv32_funct3_001 = instruction_i[14:12] == (* src = "./core/decode.v:274.25-274.46" *) 3'h1;
  assign rv32_funct3_010 = instruction_i[14:12] == (* src = "./core/decode.v:275.25-275.46" *) 3'h2;
  assign rv32_funct3_011 = instruction_i[14:12] == (* src = "./core/decode.v:276.25-276.46" *) 3'h3;
  assign rv32_funct3_100 = instruction_i[14:12] == (* src = "./core/decode.v:277.25-277.46" *) 3'h4;
  assign rv32_funct3_101 = instruction_i[14:12] == (* src = "./core/decode.v:278.25-278.46" *) 3'h5;
  assign rv32_funct7_0100000 = instruction_i[31:25] == (* src = "./core/decode.v:283.29-283.54" *) 7'h20;
  assign rv32_funct7_0000001 = instruction_i[31:25] == (* src = "./core/decode.v:284.29-284.54" *) 7'h01;
  assign _016_ = ! (* src = "./core/decode.v:362.34-362.74" *) instruction_i[31:20];
  assign _017_ = instruction_i[31:20] == (* src = "./core/decode.v:363.35-363.75" *) 12'h001;
  assign _018_ = instruction_i[31:20] == (* src = "./core/decode.v:364.33-364.73" *) 12'h302;
  assign _019_ = instruction_i[31:20] == (* src = "./core/decode.v:365.33-365.73" *) 12'h102;
  assign \__MUX_ternary/core/decodev384323__WIRE_eq/core/decodev384320_Y  = privilege_lvl_i == (* src = "./core/decode.v:384.28-384.52" *) 2'h3;
  assign \__MUX_ternary/core/decodev385322__WIRE_eq/core/decodev385321_Y  = privilege_lvl_i == (* src = "./core/decode.v:385.27-385.51" *) 2'h1;
  assign _020_ = instruction_i[19:15] == (* src = "./core/decode.v:434.24-434.47" *) rd_addr_o;
  assign _021_ = instruction_i[24:20] == (* src = "./core/decode.v:437.24-437.47" *) rd_addr_o;
  assign _022_ = ! (* src = "./core/decode.v:631.62-631.92" *) instruction_i[19:15];
  assign is_r_type = _026_ && (* src = "./core/decode.v:425.22-425.63" *) opcode_1_0_11;
  assign is_i_type = _028_ && (* src = "./core/decode.v:426.22-426.78" *) opcode_1_0_11;
  assign is_s_type = rv32_imm_sels && (* src = "./core/decode.v:427.22-427.49" *) opcode_1_0_11;
  assign is_b_type = rv32_branch && (* src = "./core/decode.v:428.22-428.50" *) opcode_1_0_11;
  assign is_fence = rv32_fence && (* src = "./core/decode.v:429.22-429.49" *) opcode_1_0_11;
  assign is_csr_type = _030_ && (* src = "./core/decode.v:430.22-430.79" *) opcode_1_0_11;
  assign is_amo_type = rv32_amo && (* src = "./core/decode.v:431.22-431.47" *) opcode_1_0_11;
  assign is_rs1_rd_same = _020_ && (* src = "./core/decode.v:434.23-436.63" *) _036_;
  assign is_rs2_rd_same = _021_ && (* src = "./core/decode.v:437.23-437.89" *) _032_;
  assign is_load_hazard_o = _048_ && (* src = "./core/decode.v:439.27-439.68" *) re_o;
  assign _023_ = flush_i && (* src = "./core/decode.v:485.19-485.38" *) _024_;
  assign _024_ = ! (* src = "./core/decode.v:485.30-485.38" *) stall_i;
  assign _025_ = ! (* src = "./core/decode.v:631.32-631.93" *) _013_;
  assign _026_ = rv32_op || (* src = "./core/decode.v:425.23-425.45" *) rv32_system;
  assign _027_ = rv32_load || (* src = "./core/decode.v:426.23-426.47" *) rv32_op_imm;
  assign _028_ = _027_ || (* src = "./core/decode.v:426.23-426.60" *) rv32_jalr;
  assign _029_ = rv32_csrrw || (* src = "./core/decode.v:430.23-430.47" *) rv32_csrrs;
  assign _030_ = _029_ || (* src = "./core/decode.v:430.23-430.61" *) rv32_csrrc;
  assign _033_ = _032_ || (* src = "./core/decode.v:435.24-435.72" *) is_i_type;
  assign _034_ = _033_ || (* src = "./core/decode.v:435.24-436.32" *) is_fence;
  assign _035_ = _034_ || (* src = "./core/decode.v:435.24-436.47" *) is_csr_type;
  assign _036_ = _035_ || (* src = "./core/decode.v:435.24-436.62" *) is_amo_type;
  assign _031_ = is_r_type || (* src = "./core/decode.v:437.53-437.75" *) is_s_type;
  assign _032_ = _031_ || (* src = "./core/decode.v:437.53-437.88" *) is_b_type;
  assign \__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y  = rst_i || (* src = "./core/decode.v:485.9-485.39" *) _023_;
  assign _037_ = ~ (* src = "./core/decode.v:359.32-359.48" *) rv32_funct3_000;
  assign _038_ = rv32_op_imm | (* src = "./core/decode.v:327.22-327.45" *) rv32_jalr;
  assign rv32_imm_seli = _038_ | (* src = "./core/decode.v:327.22-327.57" *) rv32_load;
  assign _039_ = _008_ | (* src = "./core/decode.v:392.8-393.38" *) _009_;
  assign _040_ = _039_ | (* src = "./core/decode.v:392.8-394.38" *) _010_;
  assign _041_ = _040_ | (* src = "./core/decode.v:392.8-395.38" *) _011_;
  assign imm = _041_ | (* src = "./core/decode.v:392.8-396.38" *) _012_;
  assign _042_ = rv32_imm_selu | (* src = "./core/decode.v:403.21-403.54" *) rv32_load;
  assign _043_ = _042_ | (* src = "./core/decode.v:403.21-403.68" *) rv32_op_imm;
  assign _044_ = _043_ | (* src = "./core/decode.v:403.21-404.28" *) rv32_op;
  assign _045_ = _044_ | (* src = "./core/decode.v:403.21-404.39" *) rv32_csr;
  assign _046_ = _045_ | (* src = "./core/decode.v:403.21-404.50" *) rv32_amo;
  assign _047_ = _046_ | (* src = "./core/decode.v:403.21-404.61" *) rv32_imm_selj;
  assign regfile_we = _047_ | (* src = "./core/decode.v:403.21-404.73" *) rv32_jalr;
  assign re = rv32_load | (* src = "./core/decode.v:406.13-406.33" *) rv32_amo;
  assign we = rv32_imm_sels | (* src = "./core/decode.v:407.13-407.37" *) rv32_fencei;
  assign rv32_imm_selu = rv32_lui | (* src = "./core/decode.v:417.25-417.46" *) rv32_auipc;
  assign _048_ = is_rs1_rd_same | (* src = "./core/decode.v:439.28-439.59" *) is_rs2_rd_same;
  assign _049_ = rv32_auipc | (* src = "./core/decode.v:443.9-443.30" *) rv32_imm_selj;
  assign \__MUX_procmux7520__WIRE_or/core/decodev443373_Y  = _049_ | (* src = "./core/decode.v:443.9-443.44" *) rv32_branch;
  assign \__MUX_procmux7514__WIRE_or/core/decodev445374_Y  = rv32_lui | (* src = "./core/decode.v:445.14-445.35" *) rv32_imm_sels;
  assign _050_ = rv32_imm_sels | (* src = "./core/decode.v:455.14-455.34" *) rv32_op;
  assign \__MUX_procmux7505__WIRE_or/core/decodev455377_Y  = _050_ | (* src = "./core/decode.v:455.14-455.45" *) rv32_amo;
  assign \__MUX_procmux7502__WIRE_or/core/decodev463379_Y  = rv32_lb | (* src = "./core/decode.v:463.9-463.27" *) rv32_lbu;
  assign \__MUX_procmux7496__WIRE_or/core/decodev465380_Y  = rv32_lh | (* src = "./core/decode.v:465.14-465.32" *) rv32_lhu;
  assign \__MUX_procmux7487__WIRE_or/core/decodev467381_Y  = rv32_lw | (* src = "./core/decode.v:467.14-467.32" *) rv32_amo;
  assign \__MUX_procmux7475__WIRE_or/core/decodev469382_Y  = rv32_imm_selj | (* src = "./core/decode.v:469.14-469.34" *) rv32_jalr;
  assign unsupported_instr_o = rv32_fence | (* src = "./core/decode.v:478.30-478.54" *) rv32_ebreak;
  assign _051_ = rv32_csrrs | (* src = "./core/decode.v:631.35-631.58" *) rv32_csrrc;
  assign _052_ = rv32_mret | (* src = "./core/decode.v:639.23-639.44" *) rv32_sret;
  assign _053_ = { rv32_mret, rv32_mret } | (* src = "./core/decode.v:640.32-640.83" *) { 1'h0, rv32_sret };
  assign _054_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 12'h000 : instruction_i[31:20];
  assign _055_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 32'd0 : csr_data_i;
  assign _056_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 32'd0 : xcpt_tval_i;
  assign _057_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) xcpt_cause : xcpt_cause_i;
  assign _058_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 1'h1 : xcpt_valid_i;
  assign _059_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 2'h0 : _053_;
  assign _060_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 1'h0 : _052_;
  assign _061_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 1'h0 : rv32_amo;
  assign _062_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 5'h00 : instruction_i[31:27];
  assign _063_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 1'h0 : rv32_fencei;
  assign _064_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 1'h0 : branch_decision_i;
  assign _065_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 1'h0 : branch_hit_i;
  assign _067_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 1'h0 : _014_;
  assign _068_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 5'h00 : instruction_i[24:20];
  assign _066_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 5'h00 : instruction_i[19:15];
  assign _069_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 5'h00 : instruction_i[11:7];
  assign _070_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 2'h0 : instruction_i[13:12];
  assign _071_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 1'h0 : re;
  assign _072_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 1'h0 : we;
  assign _073_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 3'h4 : regfile_input_sel;
  assign _074_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 1'h1 : regfile_we;
  assign _075_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 1'h0 : rv32_jalr;
  assign _076_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 1'h0 : rv32_imm_selj;
  assign _077_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 1'h0 : rv32_branch;
  assign _078_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 1'h0 : rv32_funct7_0100000;
  assign _079_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 1'h0 : alu_muldiv_sel;
  assign _080_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 1'h0 : instruction_i[14];
  assign _081_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 3'h0 : operation_sel;
  assign _082_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 2'h0 : inputB_sel;
  assign _083_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 2'h2 : inputA_sel;
  assign _084_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 32'd0 : imm;
  assign _085_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 32'd0 : rs2_data_i;
  assign _086_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 32'd0 : rs1_data_i;
  assign _087_ = rv32_ecall ? (* full_case = 32'd1 *) (* src = "./core/decode.v:566.14-566.24|./core/decode.v:566.10-646.8" *) 1'h1 : fetch_valid_i;
  assign _088_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/decode.v:526.14-526.21|./core/decode.v:526.10-646.8" *) 32'hxxxxxxxx : pc_i;
  assign _000_ = \__MUX_procmux7457__WIRE_logic_or/core/decodev485387_Y  ? (* full_case = 32'd1 *) (* src = "./core/decode.v:485.9-485.39|./core/decode.v:485.5-646.8" *) _091_ : _088_;
  assign _006_ = rv32_csr ? (* full_case = 32'd1 *) (* src = "./core/decode.v:471.14-471.22|./core/decode.v:471.10-474.31" *) 3'h5 : 3'h4;
  assign _005_ = \__MUX_procmux7475__WIRE_or/core/decodev469382_Y  ? (* full_case = 32'd1 *) (* src = "./core/decode.v:469.14-469.34|./core/decode.v:469.10-474.31" *) 3'h3 : _006_;
  assign _004_ = \__MUX_procmux7487__WIRE_or/core/decodev467381_Y  ? (* full_case = 32'd1 *) (* src = "./core/decode.v:467.14-467.32|./core/decode.v:467.10-474.31" *) 3'h2 : _005_;
  assign _003_ = \__MUX_procmux7496__WIRE_or/core/decodev465380_Y  ? (* full_case = 32'd1 *) (* src = "./core/decode.v:465.14-465.32|./core/decode.v:465.10-474.31" *) 3'h1 : _004_;
  assign regfile_input_sel = \__MUX_procmux7502__WIRE_or/core/decodev463379_Y  ? (* full_case = 32'd1 *) (* src = "./core/decode.v:463.9-463.27|./core/decode.v:463.5-474.31" *) 3'h0 : _003_;
  assign _002_ = \__MUX_procmux7505__WIRE_or/core/decodev455377_Y  ? (* full_case = 32'd1 *) (* src = "./core/decode.v:455.14-455.45|./core/decode.v:455.10-458.24" *) 2'h1 : 2'h0;
  assign inputB_sel = rv32_sub ? (* full_case = 32'd1 *) (* src = "./core/decode.v:453.9-453.17|./core/decode.v:453.5-458.24" *) 2'h2 : _002_;
  assign _001_ = \__MUX_procmux7514__WIRE_or/core/decodev445374_Y  ? (* full_case = 32'd1 *) (* src = "./core/decode.v:445.14-445.35|./core/decode.v:445.10-448.24" *) 2'h0 : 2'h2;
  assign inputA_sel = \__MUX_procmux7520__WIRE_or/core/decodev443373_Y  ? (* full_case = 32'd1 *) (* src = "./core/decode.v:443.9-443.44|./core/decode.v:443.5-448.24" *) 2'h1 : _001_;
  assign { _089_[31:4], xcpt_cause } = \__MUX_ternary/core/decodev384323__WIRE_eq/core/decodev384320_Y  ? (* src = "./core/decode.v:384.27-385.61" *) 32'd11 : _090_;
  assign _090_ = \__MUX_ternary/core/decodev385322__WIRE_eq/core/decodev385321_Y  ? (* src = "./core/decode.v:385.26-385.61" *) 32'd9 : 32'd8;
  assign operation_sel = rv32_imm_selu ? (* src = "./core/decode.v:417.24-418.28" *) 3'h0 : instruction_i[14:12];
  assign _091_ = flush_i ? (* src = "./core/decode.v:487.17-487.36" *) pc_i : 32'd0;
  assign __MUX_procmux7460__WIRE_rv32_csr = rv32_csr;
  assign __MUX_procmux7454__WIRE_stall_i = stall_i;
  assign __MUX_procmux7137__WIRE_rv32_ecall = rv32_ecall;
  assign __MUX_procmux7511__WIRE_rv32_sub = rv32_sub;
  assign \__MUX_ternary/core/decodev417344__WIRE_rv32_imm_selu  = rv32_imm_selu;
  assign \__MUX_ternary/core/decodev487388__WIRE_flush_i  = flush_i;
  assign _089_[3:0] = xcpt_cause;
  assign csr_addr_o = instruction_i[31:20];
  assign rs1_addr2fwd_o = csr_imm_o;
  assign rs1_addr_o = instruction_i[19:15];
  assign rs2_addr_o = instruction_i[24:20];
endmodule

(* dynports =  1  *)
(* hdlname = "\\execute" *)
(* src = "./core/execute.v:59.1-377.10" *)
module execute(clk_i, rst_i, stall_i, flush_i, imm_i, inputA_sel_i, inputB_sel_i, operation_sel_i, alu_muldiv_sel_i, shift_sel_i, is_branch_i, is_jal_i, is_jalr_i, branch_hit_i, branch_decision_i, regfile_we_i, regfile_input_sel_i, we_i, re_i, dsize_sel_i, signex_sel_i
, rd_addr_i, is_fencei_i, is_amo_i, amo_type_i, csr_imm_i, csr_we_i, csr_we_addr_i, rs1_data_i, rs2_data_i, csr_data_i, branch_restore_pc_o, branch_target_addr_o, is_branch_o, branch_taken_o, branch_misprediction_o, stall_from_exe_o, we_o, re_o, is_fencei_o, is_amo_o, amo_type_o
, rs2_data_o, addr_o, dsize_sel_o, regfile_input_sel_o, regfile_we_o, rd_addr_o, p_data_o, csr_we_o, csr_we_addr_o, csr_we_data_o, signex_sel_o, pc_i, pc_o, sys_jump_i, sys_jump_csr_addr_i, sys_jump_o, sys_jump_csr_addr_o, fetch_valid_i, fetch_valid_o, xcpt_valid_i, xcpt_cause_i
, xcpt_tval_i, xcpt_valid_o, xcpt_cause_o, xcpt_tval_o, \alu-ALU___MUX_ternary/core/aluv802579__WIRE_shift_sel_i , \muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9383__WIRE_eq/core/muldivv2912542_Y , \muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9385__WIRE_eq/core/muldivv2912543_Y , \muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9387__WIRE_eq/core/muldivv2002508_Y , \muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9389__WIRE_eq/core/muldivv2522520_Y , \muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9393__WIRE_autortlilcc2403ReduceOr9392 , \muldiv-MulDiv___MUX_procmux2811__WIRE_logic_or/core/muldivv2912544_Y , \muldiv-MulDiv___MUX_procmux2814__WIRE_operation_sel_i , \muldiv-MulDiv___MUX_procmux2816__WIRE_eq/core/muldivv2662524_Y , \muldiv-MulDiv___MUX_procmux2829__WIRE_is_b_zero , \muldiv-MulDiv___MUX_procmux2833__WIRE_and/core/muldivv2002509_Y , \muldiv-MulDiv___MUX_procmux2868__WIRE_or/core/muldivv1662495_Y , \muldiv-MulDiv___MUX_ternary/core/muldivv1162482__WIRE_is_a_neg , \muldiv-MulDiv___MUX_ternary/core/muldivv1172484__WIRE_is_b_neg , \muldiv-MulDiv___MUX_ternary/core/muldivv1302492__WIRE_or/core/muldivv1302487_Y , \muldiv-MulDiv___MUX_ternary/core/muldivv1662497__WIRE_req_i , \muldiv-MulDiv___MUX_ternary/core/muldivv1682498__WIRE_is_calc_done 
, \muldiv-MulDiv___MUX_ternary/core/muldivv1742500__WIRE_stall_i , \muldiv-MulDiv___MUX_ternary/core/muldivv2582522__WIRE_div_sub , \muldiv-MulDiv___MUX_ternary/core/muldivv2632523__WIRE_mull , \muldiv-MulDiv___MUX_ternary/core/muldivv2712528__WIRE_signed_adjust , \muldiv-MulDiv___MUX_ternary/core/muldivv2762540__WIRE_or/core/muldivv2762529_Y , \muldiv-MulDiv___MUX_ternary/core/muldivv2772539__WIRE_operation_mulhsu , \muldiv-MulDiv___MUX_ternary/core/muldivv852563__WIRE_a_i , \muldiv-MulDiv___MUX_ternary/core/muldivv852569__WIRE_b_i , \bcu-BCU___MUX_ternary/core/bcuv682429__WIRE_eq/core/bcuv682428_Y , \__MUX_ternary/core/executev247204__WIRE_alu_muldiv_sel_i , \alu-ALU___MUX_ternary/core/aluv782575__WIRE_lt/core/aluv782574_Y , \bcu-BCU___MUX_ternary/core/bcuv692431__WIRE_ne/core/bcuv692430_Y , \bcu-BCU___MUX_ternary/core/bcuv702433__WIRE_lt/core/bcuv702432_Y , \bcu-BCU___MUX_ternary/core/bcuv712435__WIRE_ge/core/bcuv712434_Y , \bcu-BCU___MUX_ternary/core/bcuv722437__WIRE_lt/core/bcuv722436_Y , \bcu-BCU___MUX_ternary/core/bcuv732439__WIRE_ge/core/bcuv732438_Y , \alu-ALU___MUX_ternary/core/aluv772573__WIRE_lt/core/aluv772572_Y , __MUX_autopmuxtreecc65recursive_mux_generator9873__WIRE_autortlilcc2430Or9872, __MUX_autopmuxtreecc65recursive_mux_generator9869__WIRE_procmux7669_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9867__WIRE_procmux7667_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9861__WIRE_autortlilcc2430Or9860
, __MUX_autopmuxtreecc65recursive_mux_generator9857__WIRE_procmux7674_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9855__WIRE_procmux7672_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9849__WIRE_procmux7677_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9847__WIRE_procmux7678_CMP, \__MUX_ternary/core/executev194193__WIRE_or/core/executev194192_Y , __MUX_autopmuxtreecc65recursive_mux_generator9885__WIRE_autortlilcc2430Or9884, __MUX_autopmuxtreecc65recursive_mux_generator9881__WIRE_procmux7526_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9879__WIRE_procmux7524_CMP, \__MUX_ternary/core/executev254207__WIRE_operation_sel_i , metaReset_execute);
  (* src = "./core/execute.v:188.24-188.42" *)
  wire [31:0] _00_;
  (* src = "./core/execute.v:244.26-244.54" *)
  wire _01_;
  (* src = "./core/execute.v:265.31-265.55" *)
  wire [31:0] _02_;
  wire [31:0] _03_;
  wire [31:0] _04_;
  wire [31:0] _05_;
  wire [31:0] _06_;
  wire [31:0] _07_;
  wire [31:0] _08_;
  wire [31:0] _09_;
  wire [31:0] _10_;
  (* src = "./core/execute.v:276.19-276.38" *)
  wire _11_;
  (* src = "./core/execute.v:196.38-196.51" *)
  wire _12_;
  (* src = "./core/execute.v:276.30-276.38" *)
  wire _13_;
  (* src = "./core/execute.v:276.9-276.39" *)
  wire _14_;
  (* src = "./core/execute.v:302.14-302.41" *)
  wire _15_;
  (* src = "./core/execute.v:188.24-188.35" *)
  wire [31:0] _16_;
  (* src = "./core/execute.v:265.44-265.55" *)
  wire [31:0] _17_;
  (* src = "./core/execute.v:244.25-244.66" *)
  wire _18_;
  (* src = "./core/execute.v:263.31-263.54" *)
  wire [31:0] _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  (* src = "./core/execute.v:245.49-245.83" *)
  wire _23_;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9847__WIRE_procmux7678_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9847__WIRE_procmux7678_CMP;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9849__WIRE_procmux7677_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9849__WIRE_procmux7677_CMP;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9855__WIRE_procmux7672_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9855__WIRE_procmux7672_CMP;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9857__WIRE_procmux7674_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9857__WIRE_procmux7674_CMP;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9861__WIRE_autortlilcc2430Or9860;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9861__WIRE_autortlilcc2430Or9860;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9867__WIRE_procmux7667_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9867__WIRE_procmux7667_CMP;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9869__WIRE_procmux7669_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9869__WIRE_procmux7669_CMP;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9873__WIRE_autortlilcc2430Or9872;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9873__WIRE_autortlilcc2430Or9872;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9879__WIRE_procmux7524_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9879__WIRE_procmux7524_CMP;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9881__WIRE_procmux7526_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9881__WIRE_procmux7526_CMP;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9885__WIRE_autortlilcc2430Or9884;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9885__WIRE_autortlilcc2430Or9884;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/executev194193__WIRE_or/core/executev194192_Y ;
  wire \__MUX_ternary/core/executev194193__WIRE_or/core/executev194192_Y ;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/executev247204__WIRE_alu_muldiv_sel_i ;
  wire \__MUX_ternary/core/executev247204__WIRE_alu_muldiv_sel_i ;
  (* execute = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/executev254207__WIRE_operation_sel_i ;
  wire \__MUX_ternary/core/executev254207__WIRE_operation_sel_i ;
  (* src = "./core/execute.v:127.29-127.35" *)
  output [31:0] addr_o;
  reg [31:0] addr_o;
  (* alu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \alu-ALU___MUX_ternary/core/aluv772573__WIRE_lt/core/aluv772572_Y ;
  wire \alu-ALU___MUX_ternary/core/aluv772573__WIRE_lt/core/aluv772572_Y ;
  (* alu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \alu-ALU___MUX_ternary/core/aluv782575__WIRE_lt/core/aluv782574_Y ;
  wire \alu-ALU___MUX_ternary/core/aluv782575__WIRE_lt/core/aluv782574_Y ;
  (* alu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \alu-ALU___MUX_ternary/core/aluv802579__WIRE_shift_sel_i ;
  wire \alu-ALU___MUX_ternary/core/aluv802579__WIRE_shift_sel_i ;
  (* src = "./core/execute.v:76.29-76.45" *)
  input alu_muldiv_sel_i;
  wire alu_muldiv_sel_i;
  (* src = "./core/execute.v:194.13-194.26" *)
  wire [2:0] alu_operation;
  (* src = "./core/execute.v:93.29-93.39" *)
  input [4:0] amo_type_i;
  wire [4:0] amo_type_i;
  (* src = "./core/execute.v:123.29-123.39" *)
  output [4:0] amo_type_o;
  reg [4:0] amo_type_o;
  (* bcu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \bcu-BCU___MUX_ternary/core/bcuv682429__WIRE_eq/core/bcuv682428_Y ;
  wire \bcu-BCU___MUX_ternary/core/bcuv682429__WIRE_eq/core/bcuv682428_Y ;
  (* bcu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \bcu-BCU___MUX_ternary/core/bcuv692431__WIRE_ne/core/bcuv692430_Y ;
  wire \bcu-BCU___MUX_ternary/core/bcuv692431__WIRE_ne/core/bcuv692430_Y ;
  (* bcu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \bcu-BCU___MUX_ternary/core/bcuv702433__WIRE_lt/core/bcuv702432_Y ;
  wire \bcu-BCU___MUX_ternary/core/bcuv702433__WIRE_lt/core/bcuv702432_Y ;
  (* bcu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \bcu-BCU___MUX_ternary/core/bcuv712435__WIRE_ge/core/bcuv712434_Y ;
  wire \bcu-BCU___MUX_ternary/core/bcuv712435__WIRE_ge/core/bcuv712434_Y ;
  (* bcu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \bcu-BCU___MUX_ternary/core/bcuv722437__WIRE_lt/core/bcuv722436_Y ;
  wire \bcu-BCU___MUX_ternary/core/bcuv722437__WIRE_lt/core/bcuv722436_Y ;
  (* bcu = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \bcu-BCU___MUX_ternary/core/bcuv732439__WIRE_ge/core/bcuv732438_Y ;
  wire \bcu-BCU___MUX_ternary/core/bcuv732439__WIRE_ge/core/bcuv732438_Y ;
  (* src = "./core/execute.v:82.29-82.46" *)
  input branch_decision_i;
  wire branch_decision_i;
  (* src = "./core/execute.v:81.29-81.41" *)
  input branch_hit_i;
  wire branch_hit_i;
  (* src = "./core/execute.v:112.29-112.51" *)
  output branch_misprediction_o;
  wire branch_misprediction_o;
  (* src = "./core/execute.v:106.29-106.48" *)
  output [31:0] branch_restore_pc_o;
  wire [31:0] branch_restore_pc_o;
  (* src = "./core/execute.v:111.29-111.43" *)
  output branch_taken_o;
  wire branch_taken_o;
  (* src = "./core/execute.v:107.29-107.49" *)
  output [31:0] branch_target_addr_o;
  wire [31:0] branch_target_addr_o;
  (* src = "./core/execute.v:62.29-62.34" *)
  input clk_i;
  wire clk_i;
  (* src = "./core/execute.v:168.19-168.33" *)
  wire compare_result;
  (* src = "./core/execute.v:103.29-103.39" *)
  input [31:0] csr_data_i;
  wire [31:0] csr_data_i;
  (* src = "./core/execute.v:96.29-96.38" *)
  input [4:0] csr_imm_i;
  wire [4:0] csr_imm_i;
  (* src = "./core/execute.v:254.19-254.29" *)
  wire [31:0] csr_inputB;
  (* src = "./core/execute.v:255.19-255.34" *)
  wire [31:0] csr_update_data;
  (* src = "./core/execute.v:98.29-98.42" *)
  input [11:0] csr_we_addr_i;
  wire [11:0] csr_we_addr_i;
  (* src = "./core/execute.v:136.29-136.42" *)
  output [11:0] csr_we_addr_o;
  reg [11:0] csr_we_addr_o;
  (* src = "./core/execute.v:137.29-137.42" *)
  output [31:0] csr_we_data_o;
  reg [31:0] csr_we_data_o;
  (* src = "./core/execute.v:97.29-97.37" *)
  input csr_we_i;
  wire csr_we_i;
  (* src = "./core/execute.v:135.29-135.37" *)
  output csr_we_o;
  reg csr_we_o;
  (* src = "./core/execute.v:88.29-88.40" *)
  input [1:0] dsize_sel_i;
  wire [1:0] dsize_sel_i;
  (* src = "./core/execute.v:128.29-128.40" *)
  output [1:0] dsize_sel_o;
  reg [1:0] dsize_sel_o;
  (* src = "./core/execute.v:153.29-153.42" *)
  input fetch_valid_i;
  wire fetch_valid_i;
  (* src = "./core/execute.v:154.29-154.42" *)
  output fetch_valid_o;
  reg fetch_valid_o;
  (* src = "./core/execute.v:69.29-69.36" *)
  input flush_i;
  wire flush_i;
  (* src = "./core/execute.v:72.29-72.34" *)
  input [31:0] imm_i;
  wire [31:0] imm_i;
  (* src = "./core/execute.v:165.19-165.25" *)
  wire [31:0] inputA;
  (* src = "./core/execute.v:73.29-73.41" *)
  input [1:0] inputA_sel_i;
  wire [1:0] inputA_sel_i;
  (* src = "./core/execute.v:165.27-165.33" *)
  wire [31:0] inputB;
  (* src = "./core/execute.v:74.29-74.41" *)
  input [1:0] inputB_sel_i;
  wire [1:0] inputB_sel_i;
  (* src = "./core/execute.v:92.29-92.37" *)
  input is_amo_i;
  wire is_amo_i;
  (* src = "./core/execute.v:122.29-122.37" *)
  output is_amo_o;
  reg is_amo_o;
  (* src = "./core/execute.v:78.29-78.40" *)
  input is_branch_i;
  wire is_branch_i;
  (* src = "./core/execute.v:110.29-110.40" *)
  output is_branch_o;
  wire is_branch_o;
  (* src = "./core/execute.v:91.29-91.40" *)
  input is_fencei_i;
  wire is_fencei_i;
  (* src = "./core/execute.v:121.29-121.40" *)
  output is_fencei_o;
  reg is_fencei_o;
  (* src = "./core/execute.v:79.29-79.37" *)
  input is_jal_i;
  wire is_jal_i;
  (* src = "./core/execute.v:80.29-80.38" *)
  input is_jalr_i;
  wire is_jalr_i;
  (* src = "./core/execute.v:171.19-171.27" *)
  wire [31:0] mem_addr;
  (* meta_reset = 32'd1 *)
  input metaReset_execute;
  wire metaReset_execute;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9383__WIRE_eq/core/muldivv2912542_Y ;
  wire \muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9383__WIRE_eq/core/muldivv2912542_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9385__WIRE_eq/core/muldivv2912543_Y ;
  wire \muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9385__WIRE_eq/core/muldivv2912543_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9387__WIRE_eq/core/muldivv2002508_Y ;
  wire \muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9387__WIRE_eq/core/muldivv2002508_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9389__WIRE_eq/core/muldivv2522520_Y ;
  wire \muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9389__WIRE_eq/core/muldivv2522520_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9393__WIRE_autortlilcc2403ReduceOr9392 ;
  wire \muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9393__WIRE_autortlilcc2403ReduceOr9392 ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \muldiv-MulDiv___MUX_procmux2811__WIRE_logic_or/core/muldivv2912544_Y ;
  wire \muldiv-MulDiv___MUX_procmux2811__WIRE_logic_or/core/muldivv2912544_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \muldiv-MulDiv___MUX_procmux2814__WIRE_operation_sel_i ;
  wire \muldiv-MulDiv___MUX_procmux2814__WIRE_operation_sel_i ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \muldiv-MulDiv___MUX_procmux2816__WIRE_eq/core/muldivv2662524_Y ;
  wire \muldiv-MulDiv___MUX_procmux2816__WIRE_eq/core/muldivv2662524_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \muldiv-MulDiv___MUX_procmux2829__WIRE_is_b_zero ;
  wire \muldiv-MulDiv___MUX_procmux2829__WIRE_is_b_zero ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \muldiv-MulDiv___MUX_procmux2833__WIRE_and/core/muldivv2002509_Y ;
  wire \muldiv-MulDiv___MUX_procmux2833__WIRE_and/core/muldivv2002509_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \muldiv-MulDiv___MUX_procmux2868__WIRE_or/core/muldivv1662495_Y ;
  wire \muldiv-MulDiv___MUX_procmux2868__WIRE_or/core/muldivv1662495_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \muldiv-MulDiv___MUX_ternary/core/muldivv1162482__WIRE_is_a_neg ;
  wire \muldiv-MulDiv___MUX_ternary/core/muldivv1162482__WIRE_is_a_neg ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \muldiv-MulDiv___MUX_ternary/core/muldivv1172484__WIRE_is_b_neg ;
  wire \muldiv-MulDiv___MUX_ternary/core/muldivv1172484__WIRE_is_b_neg ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \muldiv-MulDiv___MUX_ternary/core/muldivv1302492__WIRE_or/core/muldivv1302487_Y ;
  wire \muldiv-MulDiv___MUX_ternary/core/muldivv1302492__WIRE_or/core/muldivv1302487_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \muldiv-MulDiv___MUX_ternary/core/muldivv1662497__WIRE_req_i ;
  wire \muldiv-MulDiv___MUX_ternary/core/muldivv1662497__WIRE_req_i ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \muldiv-MulDiv___MUX_ternary/core/muldivv1682498__WIRE_is_calc_done ;
  wire \muldiv-MulDiv___MUX_ternary/core/muldivv1682498__WIRE_is_calc_done ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \muldiv-MulDiv___MUX_ternary/core/muldivv1742500__WIRE_stall_i ;
  wire \muldiv-MulDiv___MUX_ternary/core/muldivv1742500__WIRE_stall_i ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \muldiv-MulDiv___MUX_ternary/core/muldivv2582522__WIRE_div_sub ;
  wire \muldiv-MulDiv___MUX_ternary/core/muldivv2582522__WIRE_div_sub ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \muldiv-MulDiv___MUX_ternary/core/muldivv2632523__WIRE_mull ;
  wire \muldiv-MulDiv___MUX_ternary/core/muldivv2632523__WIRE_mull ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \muldiv-MulDiv___MUX_ternary/core/muldivv2712528__WIRE_signed_adjust ;
  wire \muldiv-MulDiv___MUX_ternary/core/muldivv2712528__WIRE_signed_adjust ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \muldiv-MulDiv___MUX_ternary/core/muldivv2762540__WIRE_or/core/muldivv2762529_Y ;
  wire \muldiv-MulDiv___MUX_ternary/core/muldivv2762540__WIRE_or/core/muldivv2762529_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \muldiv-MulDiv___MUX_ternary/core/muldivv2772539__WIRE_operation_mulhsu ;
  wire \muldiv-MulDiv___MUX_ternary/core/muldivv2772539__WIRE_operation_mulhsu ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \muldiv-MulDiv___MUX_ternary/core/muldivv852563__WIRE_a_i ;
  wire \muldiv-MulDiv___MUX_ternary/core/muldivv852563__WIRE_a_i ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \muldiv-MulDiv___MUX_ternary/core/muldivv852569__WIRE_b_i ;
  wire \muldiv-MulDiv___MUX_ternary/core/muldivv852569__WIRE_b_i ;
  (* src = "./core/execute.v:168.54-168.66" *)
  wire muldiv_ready;
  (* src = "./core/execute.v:167.19-167.32" *)
  wire [31:0] muldiv_result;
  (* src = "./core/execute.v:75.29-75.44" *)
  input [2:0] operation_sel_i;
  wire [2:0] operation_sel_i;
  (* src = "./core/execute.v:134.29-134.37" *)
  output [31:0] p_data_o;
  reg [31:0] p_data_o;
  (* src = "./core/execute.v:143.29-143.33" *)
  input [31:0] pc_i;
  wire [31:0] pc_i;
  (* src = "./core/execute.v:144.29-144.33" *)
  output [31:0] pc_o;
  reg [31:0] pc_o;
  (* src = "./core/execute.v:90.29-90.38" *)
  input [4:0] rd_addr_i;
  wire [4:0] rd_addr_i;
  (* src = "./core/execute.v:133.29-133.38" *)
  output [4:0] rd_addr_o;
  reg [4:0] rd_addr_o;
  (* src = "./core/execute.v:87.29-87.33" *)
  input re_i;
  wire re_i;
  (* src = "./core/execute.v:120.29-120.33" *)
  output re_o;
  reg re_o;
  (* src = "./core/execute.v:85.29-85.48" *)
  input [2:0] regfile_input_sel_i;
  wire [2:0] regfile_input_sel_i;
  (* src = "./core/execute.v:131.29-131.48" *)
  output [2:0] regfile_input_sel_o;
  reg [2:0] regfile_input_sel_o;
  (* src = "./core/execute.v:84.29-84.41" *)
  input regfile_we_i;
  wire regfile_we_i;
  (* src = "./core/execute.v:132.29-132.41" *)
  output regfile_we_o;
  reg regfile_we_o;
  (* src = "./core/execute.v:170.19-170.25" *)
  wire [31:0] result;
  (* src = "./core/execute.v:101.29-101.39" *)
  input [31:0] rs1_data_i;
  wire [31:0] rs1_data_i;
  (* src = "./core/execute.v:102.29-102.39" *)
  input [31:0] rs2_data_i;
  wire [31:0] rs2_data_i;
  (* src = "./core/execute.v:126.29-126.39" *)
  output [31:0] rs2_data_o;
  reg [31:0] rs2_data_o;
  (* src = "./core/execute.v:63.29-63.34" *)
  input rst_i;
  wire rst_i;
  (* src = "./core/execute.v:77.29-77.40" *)
  input shift_sel_i;
  wire shift_sel_i;
  (* src = "./core/execute.v:89.29-89.41" *)
  input signex_sel_i;
  wire signex_sel_i;
  (* src = "./core/execute.v:140.29-140.41" *)
  output signex_sel_o;
  reg signex_sel_o;
  (* src = "./core/execute.v:116.29-116.45" *)
  output stall_from_exe_o;
  wire stall_from_exe_o;
  (* src = "./core/execute.v:66.29-66.36" *)
  input stall_i;
  wire stall_i;
  (* src = "./core/execute.v:148.29-148.48" *)
  input [1:0] sys_jump_csr_addr_i;
  wire [1:0] sys_jump_csr_addr_i;
  (* src = "./core/execute.v:150.29-150.48" *)
  output [1:0] sys_jump_csr_addr_o;
  reg [1:0] sys_jump_csr_addr_o;
  (* src = "./core/execute.v:147.29-147.39" *)
  input sys_jump_i;
  wire sys_jump_i;
  (* src = "./core/execute.v:149.29-149.39" *)
  output sys_jump_o;
  reg sys_jump_o;
  (* src = "./core/execute.v:86.29-86.33" *)
  input we_i;
  wire we_i;
  (* src = "./core/execute.v:119.29-119.33" *)
  output we_o;
  reg we_o;
  (* src = "./core/execute.v:158.29-158.41" *)
  input [3:0] xcpt_cause_i;
  wire [3:0] xcpt_cause_i;
  (* src = "./core/execute.v:161.29-161.41" *)
  output [3:0] xcpt_cause_o;
  reg [3:0] xcpt_cause_o;
  (* src = "./core/execute.v:159.29-159.40" *)
  input [31:0] xcpt_tval_i;
  wire [31:0] xcpt_tval_i;
  (* src = "./core/execute.v:162.29-162.40" *)
  output [31:0] xcpt_tval_o;
  reg [31:0] xcpt_tval_o;
  (* src = "./core/execute.v:157.29-157.41" *)
  input xcpt_valid_i;
  wire xcpt_valid_i;
  (* src = "./core/execute.v:160.29-160.41" *)
  output xcpt_valid_o;
  reg xcpt_valid_o;
  assign _00_ = _16_ + (* src = "./core/execute.v:188.24-188.42" *) 1'h1;
  assign mem_addr = rs1_data_i + (* src = "./core/execute.v:238.19-238.37" *) imm_i;
  assign branch_restore_pc_o = pc_i + (* src = "./core/execute.v:240.30-240.40" *) 32'd4;
  assign _01_ = is_branch_i & (* src = "./core/execute.v:244.26-244.54" *) compare_result;
  assign branch_misprediction_o = branch_hit_i & (* src = "./core/execute.v:245.33-245.84" *) _23_;
  assign stall_from_exe_o = alu_muldiv_sel_i & (* src = "./core/execute.v:248.27-248.59" *) _12_;
  assign _02_ = csr_data_i & (* src = "./core/execute.v:265.31-265.55" *) _17_;
  (* src = "./core/execute.v:356.1-375.4" *)
  always_ff @(posedge clk_i)
    if (_14_) p_data_o <= 32'd0;
    else if (!_15_) p_data_o <= _10_;
  (* src = "./core/execute.v:274.1-354.4" *)
  always_ff @(posedge clk_i)
    if (_14_) rs2_data_o <= 32'd0;
    else if (!_15_) rs2_data_o <= rs2_data_i;
  (* src = "./core/execute.v:274.1-354.4" *)
  always_ff @(posedge clk_i)
    if (_14_) pc_o <= 32'd0;
    else if (!_15_) pc_o <= pc_i;
  (* src = "./core/execute.v:274.1-354.4" *)
  always_ff @(posedge clk_i)
    if (_14_) fetch_valid_o <= 1'h0;
    else if (!_15_) fetch_valid_o <= fetch_valid_i;
  (* src = "./core/execute.v:274.1-354.4" *)
  always_ff @(posedge clk_i)
    if (_14_) xcpt_valid_o <= 1'h0;
    else if (!_15_) xcpt_valid_o <= xcpt_valid_i;
  (* src = "./core/execute.v:274.1-354.4" *)
  always_ff @(posedge clk_i)
    if (_14_) xcpt_cause_o <= 4'h0;
    else if (!_15_) xcpt_cause_o <= xcpt_cause_i;
  (* src = "./core/execute.v:274.1-354.4" *)
  always_ff @(posedge clk_i)
    if (_14_) xcpt_tval_o <= 32'd0;
    else if (!_15_) xcpt_tval_o <= xcpt_tval_i;
  (* src = "./core/execute.v:274.1-354.4" *)
  always_ff @(posedge clk_i)
    if (_14_) csr_we_o <= 1'h0;
    else if (!_15_) csr_we_o <= csr_we_i;
  (* src = "./core/execute.v:274.1-354.4" *)
  always_ff @(posedge clk_i)
    if (_14_) is_fencei_o <= 1'h0;
    else if (!_15_) is_fencei_o <= is_fencei_i;
  (* src = "./core/execute.v:274.1-354.4" *)
  always_ff @(posedge clk_i)
    if (_14_) rd_addr_o <= 5'h00;
    else if (!_15_) rd_addr_o <= rd_addr_i;
  (* src = "./core/execute.v:274.1-354.4" *)
  always_ff @(posedge clk_i)
    if (_14_) regfile_we_o <= 1'h0;
    else if (!_15_) regfile_we_o <= regfile_we_i;
  (* src = "./core/execute.v:274.1-354.4" *)
  always_ff @(posedge clk_i)
    if (_14_) regfile_input_sel_o <= 3'h0;
    else if (!_15_) regfile_input_sel_o <= regfile_input_sel_i;
  (* src = "./core/execute.v:274.1-354.4" *)
  always_ff @(posedge clk_i)
    if (_14_) we_o <= 1'h0;
    else if (!_15_) we_o <= we_i;
  (* src = "./core/execute.v:274.1-354.4" *)
  always_ff @(posedge clk_i)
    if (_14_) re_o <= 1'h0;
    else if (!_15_) re_o <= re_i;
  (* src = "./core/execute.v:274.1-354.4" *)
  always_ff @(posedge clk_i)
    if (_14_) dsize_sel_o <= 2'h0;
    else if (!_15_) dsize_sel_o <= dsize_sel_i;
  (* src = "./core/execute.v:274.1-354.4" *)
  always_ff @(posedge clk_i)
    if (_14_) signex_sel_o <= 1'h0;
    else if (!_15_) signex_sel_o <= signex_sel_i;
  (* src = "./core/execute.v:274.1-354.4" *)
  always_ff @(posedge clk_i)
    if (_14_) is_amo_o <= 1'h0;
    else if (!_15_) is_amo_o <= is_amo_i;
  (* src = "./core/execute.v:274.1-354.4" *)
  always_ff @(posedge clk_i)
    if (_14_) amo_type_o <= 5'h00;
    else if (!_15_) amo_type_o <= amo_type_i;
  (* src = "./core/execute.v:274.1-354.4" *)
  always_ff @(posedge clk_i)
    if (_14_) sys_jump_o <= 1'h0;
    else if (!_15_) sys_jump_o <= sys_jump_i;
  (* src = "./core/execute.v:274.1-354.4" *)
  always_ff @(posedge clk_i)
    if (_14_) sys_jump_csr_addr_o <= 2'h0;
    else if (!_15_) sys_jump_csr_addr_o <= sys_jump_csr_addr_i;
  (* src = "./core/execute.v:274.1-354.4" *)
  always_ff @(posedge clk_i)
    if (_14_) addr_o <= 32'd0;
    else if (!_15_) addr_o <= mem_addr;
  (* src = "./core/execute.v:274.1-354.4" *)
  always_ff @(posedge clk_i)
    if (_14_) csr_we_addr_o <= 12'h000;
    else if (!_15_) csr_we_addr_o <= csr_we_addr_i;
  (* src = "./core/execute.v:274.1-354.4" *)
  always_ff @(posedge clk_i)
    if (_14_) csr_we_data_o <= 32'd0;
    else if (!_15_) csr_we_data_o <= csr_update_data;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9861__WIRE_autortlilcc2430Or9860 = _22_ | __MUX_autopmuxtreecc65recursive_mux_generator9855__WIRE_procmux7672_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9873__WIRE_autortlilcc2430Or9872 = _21_ | __MUX_autopmuxtreecc65recursive_mux_generator9867__WIRE_procmux7667_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9885__WIRE_autortlilcc2430Or9884 = _20_ | __MUX_autopmuxtreecc65recursive_mux_generator9879__WIRE_procmux7524_CMP;
  assign _03_ = __MUX_autopmuxtreecc65recursive_mux_generator9847__WIRE_procmux7678_CMP ? pc_i : 32'd0;
  assign inputA = __MUX_autopmuxtreecc65recursive_mux_generator9849__WIRE_procmux7677_CMP ? rs1_data_i : _03_;
  assign _04_ = __MUX_autopmuxtreecc65recursive_mux_generator9855__WIRE_procmux7672_CMP ? _00_ : rs2_data_i;
  assign _05_ = __MUX_autopmuxtreecc65recursive_mux_generator9857__WIRE_procmux7674_CMP ? imm_i : 32'd0;
  assign inputB = __MUX_autopmuxtreecc65recursive_mux_generator9861__WIRE_autortlilcc2430Or9860 ? _04_ : _05_;
  assign _06_ = __MUX_autopmuxtreecc65recursive_mux_generator9867__WIRE_procmux7667_CMP ? _02_ : _19_;
  assign _07_ = __MUX_autopmuxtreecc65recursive_mux_generator9869__WIRE_procmux7669_CMP ? csr_inputB : csr_data_i;
  assign csr_update_data = __MUX_autopmuxtreecc65recursive_mux_generator9873__WIRE_autortlilcc2430Or9872 ? _06_ : _07_;
  assign _08_ = __MUX_autopmuxtreecc65recursive_mux_generator9879__WIRE_procmux7524_CMP ? csr_data_i : result;
  assign _09_ = __MUX_autopmuxtreecc65recursive_mux_generator9881__WIRE_procmux7526_CMP ? branch_restore_pc_o : 32'd0;
  assign _10_ = __MUX_autopmuxtreecc65recursive_mux_generator9885__WIRE_autortlilcc2430Or9884 ? _08_ : _09_;
  assign _11_ = flush_i && (* src = "./core/execute.v:358.19-358.38" *) _13_;
  assign _12_ = ! (* src = "./core/execute.v:248.46-248.59" *) muldiv_ready;
  assign _13_ = ! (* src = "./core/execute.v:358.30-358.38" *) stall_i;
  assign _14_ = rst_i || (* src = "./core/execute.v:358.9-358.39" *) _11_;
  assign _15_ = stall_i || (* src = "./core/execute.v:362.14-362.41" *) stall_from_exe_o;
  assign _16_ = ~ (* src = "./core/execute.v:188.24-188.35" *) rs2_data_i;
  assign _17_ = ~ (* src = "./core/execute.v:265.44-265.55" *) csr_inputB;
  assign \__MUX_ternary/core/executev194193__WIRE_or/core/executev194192_Y  = is_branch_o | (* src = "./core/execute.v:194.30-194.64" *) is_jalr_i;
  assign is_branch_o = is_branch_i | (* src = "./core/execute.v:243.22-243.44" *) is_jal_i;
  assign _18_ = _01_ | (* src = "./core/execute.v:244.25-244.66" *) is_jal_i;
  assign branch_taken_o = _18_ | (* src = "./core/execute.v:244.25-244.78" *) is_jalr_i;
  assign _19_ = csr_data_i | (* src = "./core/execute.v:263.31-263.54" *) csr_inputB;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9879__WIRE_procmux7524_CMP = regfile_input_sel_i == (* full_case = 32'd1 *) (* src = "./core/execute.v:0.0-0.0|./core/execute.v:368.9-373.16" *) 3'h5;
  assign _20_ = regfile_input_sel_i == (* full_case = 32'd1 *) (* src = "./core/execute.v:0.0-0.0|./core/execute.v:368.9-373.16" *) 3'h4;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9881__WIRE_procmux7526_CMP = regfile_input_sel_i == (* full_case = 32'd1 *) (* src = "./core/execute.v:0.0-0.0|./core/execute.v:368.9-373.16" *) 3'h3;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9867__WIRE_procmux7667_CMP = operation_sel_i[1:0] == (* full_case = 32'd1 *) (* src = "./core/execute.v:0.0-0.0|./core/execute.v:259.5-268.12" *) 2'h3;
  assign _21_ = operation_sel_i[1:0] == (* full_case = 32'd1 *) (* src = "./core/execute.v:0.0-0.0|./core/execute.v:259.5-268.12" *) 2'h2;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9869__WIRE_procmux7669_CMP = operation_sel_i[1:0] == (* full_case = 32'd1 *) (* src = "./core/execute.v:0.0-0.0|./core/execute.v:259.5-268.12" *) 2'h1;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9855__WIRE_procmux7672_CMP = inputB_sel_i == (* full_case = 32'd1 *) (* src = "./core/execute.v:0.0-0.0|./core/execute.v:185.5-190.12" *) 2'h2;
  assign _22_ = inputB_sel_i == (* full_case = 32'd1 *) (* src = "./core/execute.v:0.0-0.0|./core/execute.v:185.5-190.12" *) 2'h1;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9857__WIRE_procmux7674_CMP = ! (* full_case = 32'd1 *) (* src = "./core/execute.v:0.0-0.0|./core/execute.v:185.5-190.12" *) inputB_sel_i;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9849__WIRE_procmux7677_CMP = inputA_sel_i == (* full_case = 32'd1 *) (* src = "./core/execute.v:0.0-0.0|./core/execute.v:175.5-180.12" *) 2'h2;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9847__WIRE_procmux7678_CMP = inputA_sel_i == (* full_case = 32'd1 *) (* src = "./core/execute.v:0.0-0.0|./core/execute.v:175.5-180.12" *) 2'h1;
  assign alu_operation = \__MUX_ternary/core/executev194193__WIRE_or/core/executev194192_Y  ? (* src = "./core/execute.v:194.29-194.91" *) 3'h0 : operation_sel_i;
  assign result = alu_muldiv_sel_i ? (* src = "./core/execute.v:247.17-247.62" *) muldiv_result : branch_target_addr_o;
  assign csr_inputB = operation_sel_i[2] ? (* src = "./core/execute.v:254.32-254.84" *) { 27'h0000000, csr_imm_i } : rs1_data_i;
  assign _23_ = branch_decision_i ^ (* src = "./core/execute.v:245.49-245.83" *) branch_taken_o;
  (* module_not_derived = 32'd1 *)
  (* src = "./core/execute.v:202.5-208.2" *)
  alu ALU (
    .\__MUX_ternary/core/aluv772573__WIRE_lt/core/aluv772572_Y (\alu-ALU___MUX_ternary/core/aluv772573__WIRE_lt/core/aluv772572_Y ),
    .\__MUX_ternary/core/aluv782575__WIRE_lt/core/aluv782574_Y (\alu-ALU___MUX_ternary/core/aluv782575__WIRE_lt/core/aluv782574_Y ),
    .\__MUX_ternary/core/aluv802579__WIRE_shift_sel_i (\alu-ALU___MUX_ternary/core/aluv802579__WIRE_shift_sel_i ),
    .a_i(inputA),
    .alu_result_o(branch_target_addr_o),
    .b_i(inputB),
    .metaReset_alu(metaReset_execute),
    .operation_sel_i(alu_operation),
    .shift_sel_i(shift_sel_i)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./core/execute.v:228.5-233.2" *)
  bcu BCU (
    .\__MUX_ternary/core/bcuv682429__WIRE_eq/core/bcuv682428_Y (\bcu-BCU___MUX_ternary/core/bcuv682429__WIRE_eq/core/bcuv682428_Y ),
    .\__MUX_ternary/core/bcuv692431__WIRE_ne/core/bcuv692430_Y (\bcu-BCU___MUX_ternary/core/bcuv692431__WIRE_ne/core/bcuv692430_Y ),
    .\__MUX_ternary/core/bcuv702433__WIRE_lt/core/bcuv702432_Y (\bcu-BCU___MUX_ternary/core/bcuv702433__WIRE_lt/core/bcuv702432_Y ),
    .\__MUX_ternary/core/bcuv712435__WIRE_ge/core/bcuv712434_Y (\bcu-BCU___MUX_ternary/core/bcuv712435__WIRE_ge/core/bcuv712434_Y ),
    .\__MUX_ternary/core/bcuv722437__WIRE_lt/core/bcuv722436_Y (\bcu-BCU___MUX_ternary/core/bcuv722437__WIRE_lt/core/bcuv722436_Y ),
    .\__MUX_ternary/core/bcuv732439__WIRE_ge/core/bcuv732438_Y (\bcu-BCU___MUX_ternary/core/bcuv732439__WIRE_ge/core/bcuv732438_Y ),
    .a_i(rs1_data_i),
    .b_i(rs2_data_i),
    .compare_result_o(compare_result),
    .metaReset_bcu(metaReset_execute),
    .operation_sel_i(operation_sel_i)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./core/execute.v:213.8-223.2" *)
  muldiv MulDiv (
    .\__MUX_autopmuxtreecc65recursive_mux_generator9383__WIRE_eq/core/muldivv2912542_Y (\muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9383__WIRE_eq/core/muldivv2912542_Y ),
    .\__MUX_autopmuxtreecc65recursive_mux_generator9385__WIRE_eq/core/muldivv2912543_Y (\muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9385__WIRE_eq/core/muldivv2912543_Y ),
    .\__MUX_autopmuxtreecc65recursive_mux_generator9387__WIRE_eq/core/muldivv2002508_Y (\muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9387__WIRE_eq/core/muldivv2002508_Y ),
    .\__MUX_autopmuxtreecc65recursive_mux_generator9389__WIRE_eq/core/muldivv2522520_Y (\muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9389__WIRE_eq/core/muldivv2522520_Y ),
    .__MUX_autopmuxtreecc65recursive_mux_generator9393__WIRE_autortlilcc2403ReduceOr9392(\muldiv-MulDiv___MUX_autopmuxtreecc65recursive_mux_generator9393__WIRE_autortlilcc2403ReduceOr9392 ),
    .\__MUX_procmux2811__WIRE_logic_or/core/muldivv2912544_Y (\muldiv-MulDiv___MUX_procmux2811__WIRE_logic_or/core/muldivv2912544_Y ),
    .__MUX_procmux2814__WIRE_operation_sel_i(\muldiv-MulDiv___MUX_procmux2814__WIRE_operation_sel_i ),
    .\__MUX_procmux2816__WIRE_eq/core/muldivv2662524_Y (\muldiv-MulDiv___MUX_procmux2816__WIRE_eq/core/muldivv2662524_Y ),
    .__MUX_procmux2829__WIRE_is_b_zero(\muldiv-MulDiv___MUX_procmux2829__WIRE_is_b_zero ),
    .\__MUX_procmux2833__WIRE_and/core/muldivv2002509_Y (\muldiv-MulDiv___MUX_procmux2833__WIRE_and/core/muldivv2002509_Y ),
    .\__MUX_procmux2868__WIRE_or/core/muldivv1662495_Y (\muldiv-MulDiv___MUX_procmux2868__WIRE_or/core/muldivv1662495_Y ),
    .\__MUX_ternary/core/muldivv1162482__WIRE_is_a_neg (\muldiv-MulDiv___MUX_ternary/core/muldivv1162482__WIRE_is_a_neg ),
    .\__MUX_ternary/core/muldivv1172484__WIRE_is_b_neg (\muldiv-MulDiv___MUX_ternary/core/muldivv1172484__WIRE_is_b_neg ),
    .\__MUX_ternary/core/muldivv1302492__WIRE_or/core/muldivv1302487_Y (\muldiv-MulDiv___MUX_ternary/core/muldivv1302492__WIRE_or/core/muldivv1302487_Y ),
    .\__MUX_ternary/core/muldivv1662497__WIRE_req_i (\muldiv-MulDiv___MUX_ternary/core/muldivv1662497__WIRE_req_i ),
    .\__MUX_ternary/core/muldivv1682498__WIRE_is_calc_done (\muldiv-MulDiv___MUX_ternary/core/muldivv1682498__WIRE_is_calc_done ),
    .\__MUX_ternary/core/muldivv1742500__WIRE_stall_i (\muldiv-MulDiv___MUX_ternary/core/muldivv1742500__WIRE_stall_i ),
    .\__MUX_ternary/core/muldivv2582522__WIRE_div_sub (\muldiv-MulDiv___MUX_ternary/core/muldivv2582522__WIRE_div_sub ),
    .\__MUX_ternary/core/muldivv2632523__WIRE_mull (\muldiv-MulDiv___MUX_ternary/core/muldivv2632523__WIRE_mull ),
    .\__MUX_ternary/core/muldivv2712528__WIRE_signed_adjust (\muldiv-MulDiv___MUX_ternary/core/muldivv2712528__WIRE_signed_adjust ),
    .\__MUX_ternary/core/muldivv2762540__WIRE_or/core/muldivv2762529_Y (\muldiv-MulDiv___MUX_ternary/core/muldivv2762540__WIRE_or/core/muldivv2762529_Y ),
    .\__MUX_ternary/core/muldivv2772539__WIRE_operation_mulhsu (\muldiv-MulDiv___MUX_ternary/core/muldivv2772539__WIRE_operation_mulhsu ),
    .\__MUX_ternary/core/muldivv852563__WIRE_a_i (\muldiv-MulDiv___MUX_ternary/core/muldivv852563__WIRE_a_i ),
    .\__MUX_ternary/core/muldivv852569__WIRE_b_i (\muldiv-MulDiv___MUX_ternary/core/muldivv852569__WIRE_b_i ),
    .a_i(inputA),
    .b_i(inputB),
    .clk_i(clk_i),
    .metaReset_muldiv(metaReset_execute),
    .muldiv_result_o(muldiv_result),
    .operation_sel_i(operation_sel_i),
    .ready_o(muldiv_ready),
    .req_i(stall_from_exe_o),
    .rst_i(rst_i),
    .stall_i(stall_i)
  );
  assign \__MUX_ternary/core/executev254207__WIRE_operation_sel_i  = operation_sel_i[2];
  assign \__MUX_ternary/core/executev247204__WIRE_alu_muldiv_sel_i  = alu_muldiv_sel_i;
endmodule

(* dynports =  1  *)
(* hdlname = "\\fetch" *)
(* src = "./core/fetch.v:72.1-175.10" *)
module fetch(clk_i, rst_i, stall_i, flush_i, instruction_i, pc_i, branch_hit_i, branch_decision_i, pc_o, instruction_o, branch_hit_o, branch_decision_o, fetch_valid_o, xcpt_valid_o, xcpt_cause_o, xcpt_tval_o, __MUX_procmux7128__WIRE_fetch_valid_o, __MUX_procmux7134__WIRE_rst_i, __MUX_procmux7072__WIRE_flush_i, __MUX_procmux7107__WIRE_flush_delay, __MUX_procmux7119__WIRE_stall_delay
, metaReset_fetch);
  (* src = "./core/fetch.v:118.1-131.4" *)
  wire [31:0] _00_;
  (* src = "./core/fetch.v:118.1-131.4" *)
  wire [31:0] _01_;
  (* src = "./core/fetch.v:118.1-131.4" *)
  wire [31:0] _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  (* fetch = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux7072__WIRE_flush_i;
  wire __MUX_procmux7072__WIRE_flush_i;
  (* fetch = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux7107__WIRE_flush_delay;
  wire __MUX_procmux7107__WIRE_flush_delay;
  (* fetch = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux7119__WIRE_stall_delay;
  wire __MUX_procmux7119__WIRE_stall_delay;
  (* fetch = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux7128__WIRE_fetch_valid_o;
  wire __MUX_procmux7128__WIRE_fetch_valid_o;
  (* fetch = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux7134__WIRE_rst_i;
  wire __MUX_procmux7134__WIRE_rst_i;
  (* src = "./core/fetch.v:92.29-92.46" *)
  input branch_decision_i;
  wire branch_decision_i;
  (* src = "./core/fetch.v:98.29-98.46" *)
  output branch_decision_o;
  reg branch_decision_o;
  (* src = "./core/fetch.v:91.29-91.41" *)
  input branch_hit_i;
  wire branch_hit_i;
  (* src = "./core/fetch.v:97.29-97.41" *)
  output branch_hit_o;
  reg branch_hit_o;
  (* src = "./core/fetch.v:75.29-75.34" *)
  input clk_i;
  wire clk_i;
  (* src = "./core/fetch.v:101.29-101.42" *)
  output fetch_valid_o;
  reg fetch_valid_o;
  (* src = "./core/fetch.v:108.5-108.16" *)
  reg flush_delay;
  (* src = "./core/fetch.v:82.29-82.36" *)
  input flush_i;
  wire flush_i;
  (* src = "./core/fetch.v:109.13-109.30" *)
  reg [31:0] instruction_delay;
  (* src = "./core/fetch.v:85.29-85.42" *)
  input [31:0] instruction_i;
  wire [31:0] instruction_i;
  (* src = "./core/fetch.v:96.29-96.42" *)
  output [31:0] instruction_o;
  wire [31:0] instruction_o;
  (* meta_reset = 32'd1 *)
  input metaReset_fetch;
  wire metaReset_fetch;
  (* src = "./core/fetch.v:88.29-88.33" *)
  input [31:0] pc_i;
  wire [31:0] pc_i;
  (* src = "./core/fetch.v:95.29-95.33" *)
  output [31:0] pc_o;
  reg [31:0] pc_o;
  (* src = "./core/fetch.v:76.29-76.34" *)
  input rst_i;
  wire rst_i;
  (* src = "./core/fetch.v:107.5-107.16" *)
  reg stall_delay;
  (* src = "./core/fetch.v:79.29-79.36" *)
  input stall_i;
  wire stall_i;
  (* src = "./core/fetch.v:103.29-103.41" *)
  output [3:0] xcpt_cause_o;
  wire [3:0] xcpt_cause_o;
  (* src = "./core/fetch.v:104.29-104.40" *)
  output [31:0] xcpt_tval_o;
  wire [31:0] xcpt_tval_o;
  (* src = "./core/fetch.v:102.29-102.41" *)
  output xcpt_valid_o;
  wire xcpt_valid_o;
  (* src = "./core/fetch.v:133.1-163.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) branch_decision_o <= 1'h0;
    else if (!stall_i) branch_decision_o <= _05_;
  (* src = "./core/fetch.v:133.1-163.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) pc_o <= 32'd0;
    else if (!stall_i) pc_o <= pc_i;
  (* src = "./core/fetch.v:133.1-163.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) fetch_valid_o <= 1'h0;
    else if (!stall_i) fetch_valid_o <= _07_;
  (* src = "./core/fetch.v:111.1-116.4" *)
  always_ff @(posedge clk_i)
    if (!stall_delay) instruction_delay <= instruction_i;
  (* src = "./core/fetch.v:133.1-163.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) branch_hit_o <= 1'h0;
    else if (!stall_i) branch_hit_o <= _06_;
  assign _03_ = metaReset_fetch ? 1'h0 : stall_i;
  assign _04_ = metaReset_fetch ? 1'h0 : flush_i;
  (* src = "./core/fetch.v:111.1-116.4" *)
  always_ff @(posedge clk_i)
    stall_delay <= _03_;
  (* src = "./core/fetch.v:111.1-116.4" *)
  always_ff @(posedge clk_i)
    flush_delay <= _04_;
  assign _05_ = flush_i ? (* full_case = 32'd1 *) (* src = "./core/fetch.v:149.14-149.21|./core/fetch.v:149.10-162.8" *) 1'h0 : branch_decision_i;
  assign _06_ = flush_i ? (* full_case = 32'd1 *) (* src = "./core/fetch.v:149.14-149.21|./core/fetch.v:149.10-162.8" *) 1'h0 : branch_hit_i;
  assign _07_ = flush_i ? (* full_case = 32'd1 *) (* src = "./core/fetch.v:149.14-149.21|./core/fetch.v:149.10-162.8" *) 1'h0 : 1'h1;
  assign _02_ = flush_delay ? (* full_case = 32'd1 *) (* src = "./core/fetch.v:127.14-127.25|./core/fetch.v:127.10-130.39" *) 32'd19 : instruction_i;
  assign _01_ = stall_delay ? (* full_case = 32'd1 *) (* src = "./core/fetch.v:125.14-125.25|./core/fetch.v:125.10-130.39" *) instruction_delay : _02_;
  assign _00_ = fetch_valid_o ? (* full_case = 32'd1 *) (* src = "./core/fetch.v:122.14-122.28|./core/fetch.v:122.10-130.39" *) _01_ : 32'd19;
  assign instruction_o = rst_i ? (* full_case = 32'd1 *) (* src = "./core/fetch.v:120.9-120.14|./core/fetch.v:120.5-130.39" *) 32'd19 : _00_;
  assign __MUX_procmux7134__WIRE_rst_i = rst_i;
  assign __MUX_procmux7128__WIRE_fetch_valid_o = fetch_valid_o;
  assign __MUX_procmux7119__WIRE_stall_delay = stall_delay;
  assign __MUX_procmux7107__WIRE_flush_delay = flush_delay;
  assign __MUX_procmux7072__WIRE_flush_i = flush_i;
  assign xcpt_cause_o = 4'h0;
  assign xcpt_tval_o = 32'd0;
  assign xcpt_valid_o = 1'h0;
endmodule

(* dynports =  1  *)
(* hdlname = "\\forwarding_unit" *)
(* src = "./core/forwarding_unit.v:60.1-149.10" *)
module forwarding_unit(rs1_addr_i, rs2_addr_i, csr_addr_i, rs1_data_i, rs2_data_i, csr_data_i, exe_rd_addr_i, exe_regfile_we_i, exe_regfile_input_sel_i, exe_p_data_i, exe_csr_addr_i, exe_csr_we_i, exe_csr_data_i, wbk_rd_addr_i, wbk_regfile_we_i, wbk_rd_data_i, wbk_csr_addr_i, wbk_csr_we_i, wbk_csr_data_i, rs1_o, rs2_o
, csr_data_o, \__MUX_ternary/core/forwarding_unitv1292412__WIRE_rs1_MEM_WB_fwd , \__MUX_ternary/core/forwarding_unitv1282413__WIRE_rs1_EXE_MEM_fwd , \__MUX_ternary/core/forwarding_unitv1332415__WIRE_rs2_EXE_MEM_fwd , \__MUX_ternary/core/forwarding_unitv1342414__WIRE_rs2_MEM_WB_fwd , \__MUX_ternary/core/forwarding_unitv1382417__WIRE_csr_EXE_MEM_fwd , \__MUX_ternary/core/forwarding_unitv1392416__WIRE_csr_MEM_WB_fwd , metaReset_forwarding_unit);
  (* src = "./core/forwarding_unit.v:116.26-116.67" *)
  wire _00_;
  (* src = "./core/forwarding_unit.v:117.26-117.67" *)
  wire _01_;
  (* src = "./core/forwarding_unit.v:119.25-119.65" *)
  wire _02_;
  (* src = "./core/forwarding_unit.v:120.25-120.65" *)
  wire _03_;
  (* src = "./core/forwarding_unit.v:129.10-130.20" *)
  wire [31:0] _04_;
  (* src = "./core/forwarding_unit.v:134.10-135.20" *)
  wire [31:0] _05_;
  (* src = "./core/forwarding_unit.v:139.10-140.20" *)
  wire [31:0] _06_;
  (* forwarding_unit = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/forwarding_unitv1282413__WIRE_rs1_EXE_MEM_fwd ;
  wire \__MUX_ternary/core/forwarding_unitv1282413__WIRE_rs1_EXE_MEM_fwd ;
  (* forwarding_unit = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/forwarding_unitv1292412__WIRE_rs1_MEM_WB_fwd ;
  wire \__MUX_ternary/core/forwarding_unitv1292412__WIRE_rs1_MEM_WB_fwd ;
  (* forwarding_unit = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/forwarding_unitv1332415__WIRE_rs2_EXE_MEM_fwd ;
  wire \__MUX_ternary/core/forwarding_unitv1332415__WIRE_rs2_EXE_MEM_fwd ;
  (* forwarding_unit = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/forwarding_unitv1342414__WIRE_rs2_MEM_WB_fwd ;
  wire \__MUX_ternary/core/forwarding_unitv1342414__WIRE_rs2_MEM_WB_fwd ;
  (* forwarding_unit = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/forwarding_unitv1382417__WIRE_csr_EXE_MEM_fwd ;
  wire \__MUX_ternary/core/forwarding_unitv1382417__WIRE_csr_EXE_MEM_fwd ;
  (* forwarding_unit = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/forwarding_unitv1392416__WIRE_csr_MEM_WB_fwd ;
  wire \__MUX_ternary/core/forwarding_unitv1392416__WIRE_csr_MEM_WB_fwd ;
  (* src = "./core/forwarding_unit.v:99.40-99.55" *)
  wire csr_EXE_MEM_fwd;
  (* src = "./core/forwarding_unit.v:100.38-100.52" *)
  wire csr_MEM_WB_fwd;
  (* src = "./core/forwarding_unit.v:65.25-65.35" *)
  input [11:0] csr_addr_i;
  wire [11:0] csr_addr_i;
  (* src = "./core/forwarding_unit.v:68.25-68.35" *)
  input [31:0] csr_data_i;
  wire [31:0] csr_data_i;
  (* src = "./core/forwarding_unit.v:92.25-92.35" *)
  output [31:0] csr_data_o;
  wire [31:0] csr_data_o;
  (* src = "./core/forwarding_unit.v:76.25-76.39" *)
  input [11:0] exe_csr_addr_i;
  wire [11:0] exe_csr_addr_i;
  (* src = "./core/forwarding_unit.v:78.25-78.39" *)
  input [31:0] exe_csr_data_i;
  wire [31:0] exe_csr_data_i;
  (* src = "./core/forwarding_unit.v:77.25-77.37" *)
  input exe_csr_we_i;
  wire exe_csr_we_i;
  (* src = "./core/forwarding_unit.v:74.25-74.37" *)
  input [31:0] exe_p_data_i;
  wire [31:0] exe_p_data_i;
  (* src = "./core/forwarding_unit.v:71.25-71.38" *)
  input [4:0] exe_rd_addr_i;
  wire [4:0] exe_rd_addr_i;
  (* src = "./core/forwarding_unit.v:73.25-73.48" *)
  input [2:0] exe_regfile_input_sel_i;
  wire [2:0] exe_regfile_input_sel_i;
  (* src = "./core/forwarding_unit.v:72.25-72.41" *)
  input exe_regfile_we_i;
  wire exe_regfile_we_i;
  (* src = "./core/forwarding_unit.v:95.54-95.78" *)
  wire is_csr_addr_EXE_MEM_same;
  (* src = "./core/forwarding_unit.v:96.52-96.75" *)
  wire is_csr_addr_MEM_WB_same;
  (* src = "./core/forwarding_unit.v:97.6-97.28" *)
  wire is_rd_EXE_MEM_not_zero;
  (* src = "./core/forwarding_unit.v:97.30-97.51" *)
  wire is_rd_MEM_WB_not_zero;
  (* src = "./core/forwarding_unit.v:95.6-95.28" *)
  wire is_rs1_rd_EXE_MEM_same;
  (* src = "./core/forwarding_unit.v:96.6-96.27" *)
  wire is_rs1_rd_MEM_WB_same;
  (* src = "./core/forwarding_unit.v:95.30-95.52" *)
  wire is_rs2_rd_EXE_MEM_same;
  (* src = "./core/forwarding_unit.v:96.29-96.50" *)
  wire is_rs2_rd_MEM_WB_same;
  (* meta_reset = 32'd1 *)
  input metaReset_forwarding_unit;
  wire metaReset_forwarding_unit;
  (* src = "./core/forwarding_unit.v:99.6-99.21" *)
  wire rs1_EXE_MEM_fwd;
  (* src = "./core/forwarding_unit.v:100.6-100.20" *)
  wire rs1_MEM_WB_fwd;
  (* src = "./core/forwarding_unit.v:63.25-63.35" *)
  input [4:0] rs1_addr_i;
  wire [4:0] rs1_addr_i;
  (* src = "./core/forwarding_unit.v:66.25-66.35" *)
  input [31:0] rs1_data_i;
  wire [31:0] rs1_data_i;
  (* src = "./core/forwarding_unit.v:90.25-90.30" *)
  output [31:0] rs1_o;
  wire [31:0] rs1_o;
  (* src = "./core/forwarding_unit.v:99.23-99.38" *)
  wire rs2_EXE_MEM_fwd;
  (* src = "./core/forwarding_unit.v:100.22-100.36" *)
  wire rs2_MEM_WB_fwd;
  (* src = "./core/forwarding_unit.v:64.25-64.35" *)
  input [4:0] rs2_addr_i;
  wire [4:0] rs2_addr_i;
  (* src = "./core/forwarding_unit.v:67.25-67.35" *)
  input [31:0] rs2_data_i;
  wire [31:0] rs2_data_i;
  (* src = "./core/forwarding_unit.v:91.25-91.30" *)
  output [31:0] rs2_o;
  wire [31:0] rs2_o;
  (* src = "./core/forwarding_unit.v:85.25-85.39" *)
  input [11:0] wbk_csr_addr_i;
  wire [11:0] wbk_csr_addr_i;
  (* src = "./core/forwarding_unit.v:87.25-87.39" *)
  input [31:0] wbk_csr_data_i;
  wire [31:0] wbk_csr_data_i;
  (* src = "./core/forwarding_unit.v:86.25-86.37" *)
  input wbk_csr_we_i;
  wire wbk_csr_we_i;
  (* src = "./core/forwarding_unit.v:81.25-81.38" *)
  input [4:0] wbk_rd_addr_i;
  wire [4:0] wbk_rd_addr_i;
  (* src = "./core/forwarding_unit.v:83.25-83.38" *)
  input [31:0] wbk_rd_data_i;
  wire [31:0] wbk_rd_data_i;
  (* src = "./core/forwarding_unit.v:82.25-82.41" *)
  input wbk_regfile_we_i;
  wire wbk_regfile_we_i;
  assign _00_ = exe_regfile_we_i & (* src = "./core/forwarding_unit.v:116.26-116.67" *) is_rs1_rd_EXE_MEM_same;
  assign rs1_EXE_MEM_fwd = _00_ & (* src = "./core/forwarding_unit.v:116.26-116.92" *) is_rd_EXE_MEM_not_zero;
  assign _01_ = exe_regfile_we_i & (* src = "./core/forwarding_unit.v:117.26-117.67" *) is_rs2_rd_EXE_MEM_same;
  assign rs2_EXE_MEM_fwd = _01_ & (* src = "./core/forwarding_unit.v:117.26-117.92" *) is_rd_EXE_MEM_not_zero;
  assign csr_EXE_MEM_fwd = exe_csr_we_i & (* src = "./core/forwarding_unit.v:118.26-118.65" *) is_csr_addr_EXE_MEM_same;
  assign _02_ = wbk_regfile_we_i & (* src = "./core/forwarding_unit.v:119.25-119.65" *) is_rs1_rd_MEM_WB_same;
  assign rs1_MEM_WB_fwd = _02_ & (* src = "./core/forwarding_unit.v:119.25-119.89" *) is_rd_MEM_WB_not_zero;
  assign _03_ = wbk_regfile_we_i & (* src = "./core/forwarding_unit.v:120.25-120.65" *) is_rs2_rd_MEM_WB_same;
  assign rs2_MEM_WB_fwd = _03_ & (* src = "./core/forwarding_unit.v:120.25-120.89" *) is_rd_MEM_WB_not_zero;
  assign csr_MEM_WB_fwd = wbk_csr_we_i & (* src = "./core/forwarding_unit.v:121.25-121.63" *) is_csr_addr_MEM_WB_same;
  assign is_rs1_rd_EXE_MEM_same = rs1_addr_i == (* src = "./core/forwarding_unit.v:106.34-106.61" *) exe_rd_addr_i;
  assign is_rs2_rd_EXE_MEM_same = rs2_addr_i == (* src = "./core/forwarding_unit.v:107.34-107.61" *) exe_rd_addr_i;
  assign is_csr_addr_EXE_MEM_same = csr_addr_i == (* src = "./core/forwarding_unit.v:108.36-108.64" *) exe_csr_addr_i;
  assign is_rs1_rd_MEM_WB_same = rs1_addr_i == (* src = "./core/forwarding_unit.v:109.33-109.60" *) wbk_rd_addr_i;
  assign is_rs2_rd_MEM_WB_same = rs2_addr_i == (* src = "./core/forwarding_unit.v:110.33-110.60" *) wbk_rd_addr_i;
  assign is_csr_addr_MEM_WB_same = csr_addr_i == (* src = "./core/forwarding_unit.v:111.35-111.63" *) wbk_csr_addr_i;
  assign is_rd_EXE_MEM_not_zero = | (* src = "./core/forwarding_unit.v:113.35-113.50" *) exe_rd_addr_i;
  assign is_rd_MEM_WB_not_zero = | (* src = "./core/forwarding_unit.v:114.34-114.49" *) wbk_rd_addr_i;
  assign rs1_o = rs1_EXE_MEM_fwd ? (* src = "./core/forwarding_unit.v:128.8-130.20" *) exe_p_data_i : _04_;
  assign _04_ = rs1_MEM_WB_fwd ? (* src = "./core/forwarding_unit.v:129.10-130.20" *) wbk_rd_data_i : rs1_data_i;
  assign rs2_o = rs2_EXE_MEM_fwd ? (* src = "./core/forwarding_unit.v:133.8-135.20" *) exe_p_data_i : _05_;
  assign _05_ = rs2_MEM_WB_fwd ? (* src = "./core/forwarding_unit.v:134.10-135.20" *) wbk_rd_data_i : rs2_data_i;
  assign csr_data_o = csr_EXE_MEM_fwd ? (* src = "./core/forwarding_unit.v:138.8-140.20" *) exe_csr_data_i : _06_;
  assign _06_ = csr_MEM_WB_fwd ? (* src = "./core/forwarding_unit.v:139.10-140.20" *) wbk_csr_data_i : csr_data_i;
  assign \__MUX_ternary/core/forwarding_unitv1392416__WIRE_csr_MEM_WB_fwd  = csr_MEM_WB_fwd;
  assign \__MUX_ternary/core/forwarding_unitv1382417__WIRE_csr_EXE_MEM_fwd  = csr_EXE_MEM_fwd;
  assign \__MUX_ternary/core/forwarding_unitv1342414__WIRE_rs2_MEM_WB_fwd  = rs2_MEM_WB_fwd;
  assign \__MUX_ternary/core/forwarding_unitv1332415__WIRE_rs2_EXE_MEM_fwd  = rs2_EXE_MEM_fwd;
  assign \__MUX_ternary/core/forwarding_unitv1292412__WIRE_rs1_MEM_WB_fwd  = rs1_MEM_WB_fwd;
  assign \__MUX_ternary/core/forwarding_unitv1282413__WIRE_rs1_EXE_MEM_fwd  = rs1_EXE_MEM_fwd;
endmodule

(* dynports =  1  *)
(* hdlname = "\\memory" *)
(* src = "./core/memory.v:59.1-212.10" *)
module memory(mem_addr_i, dsize_sel_i, unaligned_data_i, we_i, re_i, data_o, byte_sel_o, mem_align_exception_o, pc_i, pc_o, sys_jump_i, sys_jump_csr_addr_i, sys_jump_o, sys_jump_csr_addr_o, fetch_valid_i, fetch_valid_o, xcpt_valid_i, xcpt_cause_i, xcpt_tval_i, xcpt_valid_o, xcpt_cause_o
, xcpt_tval_o, \__MUX_ternary/core/memoryv108185__WIRE_we_i , \__MUX_procmux7782__WIRE_logic_and/core/memoryv105184_Y , __MUX_procmux7744__WIRE_procmux7745_CMP, __MUX_procmux7699__WIRE_procmux7700_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9953__WIRE_procmux7697_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9921__WIRE_autortlilcc2430Or9920, __MUX_autopmuxtreecc65recursive_mux_generator9917__WIRE_procmux7681_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9915__WIRE_procmux7741_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9893__WIRE_autortlilcc2430Or9892, __MUX_autopmuxtreecc65recursive_mux_generator9889__WIRE_procmux7721_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9887__WIRE_procmux7683_CMP, metaReset_memory);
  (* src = "./core/memory.v:120.1-210.4" *)
  wire [3:0] _00_;
  (* src = "./core/memory.v:120.1-210.4" *)
  wire [31:0] _01_;
  (* src = "./core/memory.v:120.1-210.4" *)
  wire _02_;
  (* src = "./core/memory.v:120.1-210.4" *)
  wire [3:0] _03_;
  (* src = "./core/memory.v:120.1-210.4" *)
  wire [31:0] _04_;
  (* src = "./core/memory.v:120.1-210.4" *)
  wire _05_;
  (* src = "./core/memory.v:120.1-210.4" *)
  wire [3:0] _06_;
  (* src = "./core/memory.v:120.1-210.4" *)
  wire [31:0] _07_;
  (* src = "./core/memory.v:120.1-210.4" *)
  wire _08_;
  (* src = "./core/memory.v:120.1-210.4" *)
  wire [3:0] _09_;
  (* src = "./core/memory.v:120.1-210.4" *)
  wire [31:0] _10_;
  wire [31:0] _11_;
  wire [31:0] _12_;
  wire [3:0] _13_;
  wire [3:0] _14_;
  wire _15_;
  wire _16_;
  wire [31:0] _17_;
  wire [31:0] _18_;
  wire [31:0] _19_;
  wire [3:0] _20_;
  wire [3:0] _21_;
  wire [3:0] _22_;
  wire _23_;
  wire [31:0] _24_;
  wire [31:0] _25_;
  wire [3:0] _26_;
  wire [3:0] _27_;
  wire _28_;
  (* src = "./core/memory.v:105.35-105.47" *)
  wire _29_;
  (* src = "./core/memory.v:108.24-108.38" *)
  (* unused_bits = "4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _30_;
  (* memory = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9887__WIRE_procmux7683_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9887__WIRE_procmux7683_CMP;
  (* memory = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9889__WIRE_procmux7721_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9889__WIRE_procmux7721_CMP;
  (* memory = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9893__WIRE_autortlilcc2430Or9892;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9893__WIRE_autortlilcc2430Or9892;
  (* memory = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9915__WIRE_procmux7741_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9915__WIRE_procmux7741_CMP;
  (* memory = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9917__WIRE_procmux7681_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9917__WIRE_procmux7681_CMP;
  (* memory = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9921__WIRE_autortlilcc2430Or9920;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9921__WIRE_autortlilcc2430Or9920;
  (* memory = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9953__WIRE_procmux7697_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9953__WIRE_procmux7697_CMP;
  (* memory = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux7699__WIRE_procmux7700_CMP;
  wire __MUX_procmux7699__WIRE_procmux7700_CMP;
  (* memory = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux7744__WIRE_procmux7745_CMP;
  wire __MUX_procmux7744__WIRE_procmux7745_CMP;
  (* memory = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux7782__WIRE_logic_and/core/memoryv105184_Y ;
  wire \__MUX_procmux7782__WIRE_logic_and/core/memoryv105184_Y ;
  (* memory = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/memoryv108185__WIRE_we_i ;
  wire \__MUX_ternary/core/memoryv108185__WIRE_we_i ;
  (* src = "./core/memory.v:70.29-70.39" *)
  output [3:0] byte_sel_o;
  wire [3:0] byte_sel_o;
  (* src = "./core/memory.v:69.29-69.35" *)
  output [31:0] data_o;
  wire [31:0] data_o;
  (* src = "./core/memory.v:63.29-63.40" *)
  input [1:0] dsize_sel_i;
  wire [1:0] dsize_sel_i;
  (* src = "./core/memory.v:86.29-86.42" *)
  input fetch_valid_i;
  wire fetch_valid_i;
  (* src = "./core/memory.v:87.29-87.42" *)
  output fetch_valid_o;
  wire fetch_valid_o;
  (* src = "./core/memory.v:62.29-62.39" *)
  input [31:0] mem_addr_i;
  wire [31:0] mem_addr_i;
  (* src = "./core/memory.v:73.29-73.50" *)
  output mem_align_exception_o;
  wire mem_align_exception_o;
  (* meta_reset = 32'd1 *)
  input metaReset_memory;
  wire metaReset_memory;
  (* src = "./core/memory.v:76.29-76.33" *)
  input [31:0] pc_i;
  wire [31:0] pc_i;
  (* src = "./core/memory.v:77.29-77.33" *)
  output [31:0] pc_o;
  wire [31:0] pc_o;
  (* src = "./core/memory.v:66.29-66.33" *)
  input re_i;
  wire re_i;
  (* src = "./core/memory.v:81.29-81.48" *)
  input [1:0] sys_jump_csr_addr_i;
  wire [1:0] sys_jump_csr_addr_i;
  (* src = "./core/memory.v:83.29-83.48" *)
  output [1:0] sys_jump_csr_addr_o;
  wire [1:0] sys_jump_csr_addr_o;
  (* src = "./core/memory.v:80.29-80.39" *)
  input sys_jump_i;
  wire sys_jump_i;
  (* src = "./core/memory.v:82.29-82.39" *)
  output sys_jump_o;
  wire sys_jump_o;
  (* src = "./core/memory.v:64.29-64.45" *)
  input [31:0] unaligned_data_i;
  wire [31:0] unaligned_data_i;
  (* src = "./core/memory.v:65.29-65.33" *)
  input we_i;
  wire we_i;
  (* src = "./core/memory.v:91.29-91.41" *)
  input [3:0] xcpt_cause_i;
  wire [3:0] xcpt_cause_i;
  (* src = "./core/memory.v:94.29-94.41" *)
  output [3:0] xcpt_cause_o;
  wire [3:0] xcpt_cause_o;
  (* src = "./core/memory.v:92.29-92.40" *)
  input [31:0] xcpt_tval_i;
  wire [31:0] xcpt_tval_i;
  (* src = "./core/memory.v:95.29-95.40" *)
  output [31:0] xcpt_tval_o;
  wire [31:0] xcpt_tval_o;
  (* src = "./core/memory.v:90.29-90.41" *)
  input xcpt_valid_i;
  wire xcpt_valid_i;
  (* src = "./core/memory.v:93.29-93.41" *)
  output xcpt_valid_o;
  wire xcpt_valid_o;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9893__WIRE_autortlilcc2430Or9892 = __MUX_procmux7699__WIRE_procmux7700_CMP | __MUX_autopmuxtreecc65recursive_mux_generator9887__WIRE_procmux7683_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9921__WIRE_autortlilcc2430Or9920 = __MUX_autopmuxtreecc65recursive_mux_generator9953__WIRE_procmux7697_CMP | __MUX_autopmuxtreecc65recursive_mux_generator9915__WIRE_procmux7741_CMP;
  assign _11_ = __MUX_autopmuxtreecc65recursive_mux_generator9887__WIRE_procmux7683_CMP ? _10_ : _07_;
  assign _12_ = __MUX_autopmuxtreecc65recursive_mux_generator9889__WIRE_procmux7721_CMP ? _04_ : _01_;
  assign data_o = __MUX_autopmuxtreecc65recursive_mux_generator9893__WIRE_autortlilcc2430Or9892 ? _11_ : _12_;
  assign _13_ = __MUX_autopmuxtreecc65recursive_mux_generator9887__WIRE_procmux7683_CMP ? _09_ : _06_;
  assign _14_ = __MUX_autopmuxtreecc65recursive_mux_generator9889__WIRE_procmux7721_CMP ? _03_ : _00_;
  assign byte_sel_o = __MUX_autopmuxtreecc65recursive_mux_generator9893__WIRE_autortlilcc2430Or9892 ? _13_ : _14_;
  assign _15_ = __MUX_autopmuxtreecc65recursive_mux_generator9887__WIRE_procmux7683_CMP ? _05_ : _08_;
  assign _16_ = __MUX_autopmuxtreecc65recursive_mux_generator9889__WIRE_procmux7721_CMP ? _05_ : _02_;
  assign mem_align_exception_o = __MUX_autopmuxtreecc65recursive_mux_generator9893__WIRE_autortlilcc2430Or9892 ? _15_ : _16_;
  assign _17_ = __MUX_autopmuxtreecc65recursive_mux_generator9915__WIRE_procmux7741_CMP ? unaligned_data_i : { 16'h0000, unaligned_data_i[15:0] };
  assign _18_ = __MUX_autopmuxtreecc65recursive_mux_generator9917__WIRE_procmux7681_CMP ? { 24'h000000, unaligned_data_i[7:0] } : 32'd0;
  assign _19_ = __MUX_autopmuxtreecc65recursive_mux_generator9921__WIRE_autortlilcc2430Or9920 ? _17_ : _18_;
  assign _20_ = __MUX_autopmuxtreecc65recursive_mux_generator9915__WIRE_procmux7741_CMP ? 4'hf : 4'h3;
  assign _21_ = __MUX_autopmuxtreecc65recursive_mux_generator9917__WIRE_procmux7681_CMP ? 4'h1 : 4'h0;
  assign _22_ = __MUX_autopmuxtreecc65recursive_mux_generator9921__WIRE_autortlilcc2430Or9920 ? _20_ : _21_;
  assign _05_ = __MUX_autopmuxtreecc65recursive_mux_generator9917__WIRE_procmux7681_CMP ? 1'h0 : 1'h1;
  assign _23_ = __MUX_autopmuxtreecc65recursive_mux_generator9921__WIRE_autortlilcc2430Or9920 ? 1'h0 : _05_;
  assign _24_ = __MUX_autopmuxtreecc65recursive_mux_generator9917__WIRE_procmux7681_CMP ? { 8'h00, unaligned_data_i[7:0], 16'h0000 } : 32'd0;
  assign _25_ = __MUX_autopmuxtreecc65recursive_mux_generator9953__WIRE_procmux7697_CMP ? { unaligned_data_i[15:0], 16'h0000 } : _24_;
  assign _26_ = __MUX_autopmuxtreecc65recursive_mux_generator9917__WIRE_procmux7681_CMP ? 4'h4 : 4'h0;
  assign _27_ = __MUX_autopmuxtreecc65recursive_mux_generator9953__WIRE_procmux7697_CMP ? 4'hc : _26_;
  assign _28_ = __MUX_autopmuxtreecc65recursive_mux_generator9953__WIRE_procmux7697_CMP ? 1'h0 : _05_;
  assign \__MUX_procmux7782__WIRE_logic_and/core/memoryv105184_Y  = mem_align_exception_o && (* src = "./core/memory.v:105.9-105.48" *) _29_;
  assign _29_ = we_i || (* src = "./core/memory.v:105.35-105.47" *) re_i;
  assign _09_ = __MUX_autopmuxtreecc65recursive_mux_generator9917__WIRE_procmux7681_CMP ? (* full_case = 32'd1 *) (* src = "./core/memory.v:0.0-0.0|./core/memory.v:194.13-207.20" *) 4'h8 : 4'h0;
  assign _10_ = __MUX_autopmuxtreecc65recursive_mux_generator9917__WIRE_procmux7681_CMP ? (* full_case = 32'd1 *) (* src = "./core/memory.v:0.0-0.0|./core/memory.v:194.13-207.20" *) { unaligned_data_i[7:0], 24'h000000 } : 32'd0;
  assign _08_ = __MUX_procmux7699__WIRE_procmux7700_CMP ? (* full_case = 32'd1 *) (* src = "./core/memory.v:0.0-0.0|./core/memory.v:122.5-209.12" *) _28_ : 1'hx;
  assign _06_ = __MUX_procmux7699__WIRE_procmux7700_CMP ? (* full_case = 32'd1 *) (* src = "./core/memory.v:0.0-0.0|./core/memory.v:122.5-209.12" *) _27_ : 4'hx;
  assign _07_ = __MUX_procmux7699__WIRE_procmux7700_CMP ? (* full_case = 32'd1 *) (* src = "./core/memory.v:0.0-0.0|./core/memory.v:122.5-209.12" *) _25_ : 32'hxxxxxxxx;
  assign _03_ = __MUX_autopmuxtreecc65recursive_mux_generator9917__WIRE_procmux7681_CMP ? (* full_case = 32'd1 *) (* src = "./core/memory.v:0.0-0.0|./core/memory.v:154.13-167.20" *) 4'h2 : 4'h0;
  assign _04_ = __MUX_autopmuxtreecc65recursive_mux_generator9917__WIRE_procmux7681_CMP ? (* full_case = 32'd1 *) (* src = "./core/memory.v:0.0-0.0|./core/memory.v:154.13-167.20" *) { 16'h0000, unaligned_data_i[7:0], 8'h00 } : 32'd0;
  assign _02_ = __MUX_procmux7744__WIRE_procmux7745_CMP ? (* full_case = 32'd1 *) (* src = "./core/memory.v:0.0-0.0|./core/memory.v:122.5-209.12" *) _23_ : 1'hx;
  assign _00_ = __MUX_procmux7744__WIRE_procmux7745_CMP ? (* full_case = 32'd1 *) (* src = "./core/memory.v:0.0-0.0|./core/memory.v:122.5-209.12" *) _22_ : 4'hx;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9915__WIRE_procmux7741_CMP = dsize_sel_i == (* full_case = 32'd1 *) (* src = "./core/memory.v:0.0-0.0|./core/memory.v:125.13-150.20" *) 2'h2;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9953__WIRE_procmux7697_CMP = dsize_sel_i == (* full_case = 32'd1 *) (* src = "./core/memory.v:0.0-0.0|./core/memory.v:125.13-150.20" *) 2'h1;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9917__WIRE_procmux7681_CMP = ! (* full_case = 32'd1 *) (* src = "./core/memory.v:0.0-0.0|./core/memory.v:125.13-150.20" *) dsize_sel_i;
  assign _01_ = __MUX_procmux7744__WIRE_procmux7745_CMP ? (* full_case = 32'd1 *) (* src = "./core/memory.v:0.0-0.0|./core/memory.v:122.5-209.12" *) _19_ : 32'hxxxxxxxx;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9887__WIRE_procmux7683_CMP = mem_addr_i[1:0] == (* full_case = 32'd1 *) (* src = "./core/memory.v:0.0-0.0|./core/memory.v:122.5-209.12" *) 2'h3;
  assign __MUX_procmux7699__WIRE_procmux7700_CMP = mem_addr_i[1:0] == (* full_case = 32'd1 *) (* src = "./core/memory.v:0.0-0.0|./core/memory.v:122.5-209.12" *) 2'h2;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9889__WIRE_procmux7721_CMP = mem_addr_i[1:0] == (* full_case = 32'd1 *) (* src = "./core/memory.v:0.0-0.0|./core/memory.v:122.5-209.12" *) 2'h1;
  assign __MUX_procmux7744__WIRE_procmux7745_CMP = ! (* full_case = 32'd1 *) (* src = "./core/memory.v:0.0-0.0|./core/memory.v:122.5-209.12" *) mem_addr_i[1:0];
  assign xcpt_tval_o = \__MUX_procmux7782__WIRE_logic_and/core/memoryv105184_Y  ? (* full_case = 32'd1 *) (* src = "./core/memory.v:105.9-105.48|./core/memory.v:105.5-116.8" *) mem_addr_i : xcpt_tval_i;
  assign xcpt_cause_o = \__MUX_procmux7782__WIRE_logic_and/core/memoryv105184_Y  ? (* full_case = 32'd1 *) (* src = "./core/memory.v:105.9-105.48|./core/memory.v:105.5-116.8" *) _30_[3:0] : xcpt_cause_i;
  assign xcpt_valid_o = \__MUX_procmux7782__WIRE_logic_and/core/memoryv105184_Y  ? (* full_case = 32'd1 *) (* src = "./core/memory.v:105.9-105.48|./core/memory.v:105.5-116.8" *) 1'h1 : xcpt_valid_i;
  assign _30_ = we_i ? (* src = "./core/memory.v:108.24-108.38" *) 32'd6 : 32'd4;
  assign \__MUX_ternary/core/memoryv108185__WIRE_we_i  = we_i;
  assign fetch_valid_o = fetch_valid_i;
  assign pc_o = pc_i;
  assign sys_jump_csr_addr_o = sys_jump_csr_addr_i;
  assign sys_jump_o = sys_jump_i;
endmodule

(* dynports =  1  *)
(* hdlname = "\\muldiv" *)
(* src = "./core/muldiv.v:69.1-309.10" *)
module muldiv(clk_i, rst_i, stall_i, a_i, b_i, req_i, operation_sel_i, muldiv_result_o, ready_o, \__MUX_autopmuxtreecc65recursive_mux_generator9383__WIRE_eq/core/muldivv2912542_Y , \__MUX_ternary/core/muldivv1302492__WIRE_or/core/muldivv1302487_Y , \__MUX_ternary/core/muldivv1172484__WIRE_is_b_neg , \__MUX_ternary/core/muldivv1162482__WIRE_is_a_neg , \__MUX_procmux2868__WIRE_or/core/muldivv1662495_Y , \__MUX_autopmuxtreecc65recursive_mux_generator9389__WIRE_eq/core/muldivv2522520_Y , \__MUX_autopmuxtreecc65recursive_mux_generator9385__WIRE_eq/core/muldivv2912543_Y , \__MUX_ternary/core/muldivv852563__WIRE_a_i , \__MUX_ternary/core/muldivv2772539__WIRE_operation_mulhsu , \__MUX_ternary/core/muldivv2762540__WIRE_or/core/muldivv2762529_Y , \__MUX_ternary/core/muldivv2712528__WIRE_signed_adjust , \__MUX_ternary/core/muldivv2632523__WIRE_mull 
, \__MUX_ternary/core/muldivv2582522__WIRE_div_sub , \__MUX_ternary/core/muldivv1742500__WIRE_stall_i , \__MUX_ternary/core/muldivv852569__WIRE_b_i , \__MUX_ternary/core/muldivv1682498__WIRE_is_calc_done , \__MUX_ternary/core/muldivv1662497__WIRE_req_i , \__MUX_procmux2833__WIRE_and/core/muldivv2002509_Y , __MUX_procmux2829__WIRE_is_b_zero, \__MUX_procmux2816__WIRE_eq/core/muldivv2662524_Y , __MUX_procmux2814__WIRE_operation_sel_i, \__MUX_procmux2811__WIRE_logic_or/core/muldivv2912544_Y , __MUX_autopmuxtreecc65recursive_mux_generator9393__WIRE_autortlilcc2403ReduceOr9392, \__MUX_autopmuxtreecc65recursive_mux_generator9387__WIRE_eq/core/muldivv2002508_Y , metaReset_muldiv);
  (* src = "./core/muldiv.v:219.1-284.4" *)
  wire [5:0] _000_;
  (* src = "./core/muldiv.v:289.1-295.4" *)
  wire _001_;
  (* src = "./core/muldiv.v:219.1-284.4" *)
  (* unused_bits = "32" *)
  wire [64:0] _002_;
  (* src = "./core/muldiv.v:210.70-210.90" *)
  (* unused_bits = "2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _003_;
  (* src = "./core/muldiv.v:300.30-300.56" *)
  wire [31:0] _004_;
  (* src = "./core/muldiv.v:301.27-301.91" *)
  wire [31:0] _005_;
  (* src = "./core/muldiv.v:302.27-302.74" *)
  wire [31:0] _006_;
  (* src = "./core/muldiv.v:303.27-303.75" *)
  wire [31:0] _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire [2:0] _024_;
  wire [2:0] _025_;
  wire [2:0] _026_;
  wire [2:0] _027_;
  (* src = "./core/muldiv.v:131.43-131.48" *)
  wire _028_;
  (* src = "./core/muldiv.v:200.9-200.41" *)
  wire _029_;
  (* src = "./core/muldiv.v:207.17-207.32" *)
  wire [63:0] _030_;
  (* src = "./core/muldiv.v:187.33-187.39" *)
  wire [32:0] _031_;
  (* src = "./core/muldiv.v:270.43-270.53" *)
  wire [31:0] _032_;
  (* src = "./core/muldiv.v:271.47-271.56" *)
  wire [31:0] _033_;
  (* src = "./core/muldiv.v:276.76-276.88" *)
  wire [64:0] _034_;
  (* src = "./core/muldiv.v:85.25-85.29" *)
  wire [31:0] _035_;
  (* src = "./core/muldiv.v:85.25-85.29" *)
  wire [31:0] _036_;
  (* src = "./core/muldiv.v:109.31-109.64" *)
  wire _037_;
  (* src = "./core/muldiv.v:109.31-109.80" *)
  wire _038_;
  (* src = "./core/muldiv.v:109.31-109.96" *)
  wire _039_;
  (* src = "./core/muldiv.v:110.31-110.61" *)
  wire _040_;
  (* src = "./core/muldiv.v:110.31-110.77" *)
  wire _041_;
  (* src = "./core/muldiv.v:130.25-130.55" *)
  wire _042_;
  (* src = "./core/muldiv.v:130.25-130.74" *)
  wire _043_;
  (* src = "./core/muldiv.v:300.28-301.92" *)
  wire [31:0] _044_;
  (* src = "./core/muldiv.v:300.28-302.75" *)
  wire [31:0] _045_;
  (* src = "./core/muldiv.v:300.28-303.76" *)
  wire [31:0] _046_;
  (* src = "./core/muldiv.v:301.31-301.82" *)
  wire _047_;
  (* src = "./core/muldiv.v:302.31-302.61" *)
  wire _048_;
  (* src = "./core/muldiv.v:303.31-303.61" *)
  wire _049_;
  wire [31:0] _050_;
  wire [31:0] _051_;
  wire [31:0] _052_;
  wire [31:0] _053_;
  wire [31:0] _054_;
  wire [31:0] _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire [31:0] _060_;
  wire [31:0] _061_;
  wire [31:0] _062_;
  wire [31:0] _063_;
  wire [31:0] _064_;
  wire [31:0] _065_;
  wire [31:0] _066_;
  wire [31:0] _067_;
  wire [31:0] _068_;
  wire [31:0] _069_;
  wire [5:0] _070_;
  wire [5:0] _071_;
  wire [5:0] _072_;
  wire [5:0] _073_;
  (* src = "./core/muldiv.v:131.51-131.69" *)
  wire _074_;
  (* src = "./core/muldiv.v:131.43-131.48" *)
  wire _075_;
  (* src = "./core/muldiv.v:254.16-254.25" *)
  (* unused_bits = "6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _076_;
  (* src = "./core/muldiv.v:166.30-166.70" *)
  wire [2:0] _077_;
  (* src = "./core/muldiv.v:166.21-166.79" *)
  wire [2:0] _078_;
  (* src = "./core/muldiv.v:168.21-168.59" *)
  wire [2:0] _079_;
  (* src = "./core/muldiv.v:172.21-172.48" *)
  wire [2:0] _080_;
  (* src = "./core/muldiv.v:258.23-258.85" *)
  wire [64:0] _081_;
  (* src = "./core/muldiv.v:263.23-263.85" *)
  wire [64:0] _082_;
  (* src = "./core/muldiv.v:270.31-270.65" *)
  wire [31:0] _083_;
  (* src = "./core/muldiv.v:271.30-271.67" *)
  wire [31:0] _084_;
  (* src = "./core/muldiv.v:276.59-276.102" *)
  wire [64:0] _085_;
  (* src = "./core/muldiv.v:276.23-277.95" *)
  wire [64:0] _086_;
  (* src = "./core/muldiv.v:277.43-277.81" *)
  wire [64:0] _087_;
  (* src = "./core/muldiv.v:277.23-277.95" *)
  wire [64:0] _088_;
  (* src = "./core/muldiv.v:152.13-152.14" *)
  reg [2:0] S;
  (* src = "./core/muldiv.v:152.16-152.21" *)
  wire [2:0] S_nxt;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_autopmuxtreecc65recursive_mux_generator9383__WIRE_eq/core/muldivv2912542_Y ;
  wire \__MUX_autopmuxtreecc65recursive_mux_generator9383__WIRE_eq/core/muldivv2912542_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_autopmuxtreecc65recursive_mux_generator9385__WIRE_eq/core/muldivv2912543_Y ;
  wire \__MUX_autopmuxtreecc65recursive_mux_generator9385__WIRE_eq/core/muldivv2912543_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_autopmuxtreecc65recursive_mux_generator9387__WIRE_eq/core/muldivv2002508_Y ;
  wire \__MUX_autopmuxtreecc65recursive_mux_generator9387__WIRE_eq/core/muldivv2002508_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_autopmuxtreecc65recursive_mux_generator9389__WIRE_eq/core/muldivv2522520_Y ;
  wire \__MUX_autopmuxtreecc65recursive_mux_generator9389__WIRE_eq/core/muldivv2522520_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9393__WIRE_autortlilcc2403ReduceOr9392;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9393__WIRE_autortlilcc2403ReduceOr9392;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux2811__WIRE_logic_or/core/muldivv2912544_Y ;
  wire \__MUX_procmux2811__WIRE_logic_or/core/muldivv2912544_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux2814__WIRE_operation_sel_i;
  wire __MUX_procmux2814__WIRE_operation_sel_i;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux2816__WIRE_eq/core/muldivv2662524_Y ;
  wire \__MUX_procmux2816__WIRE_eq/core/muldivv2662524_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output __MUX_procmux2829__WIRE_is_b_zero;
  wire __MUX_procmux2829__WIRE_is_b_zero;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux2833__WIRE_and/core/muldivv2002509_Y ;
  wire \__MUX_procmux2833__WIRE_and/core/muldivv2002509_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_procmux2868__WIRE_or/core/muldivv1662495_Y ;
  wire \__MUX_procmux2868__WIRE_or/core/muldivv1662495_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/muldivv1162482__WIRE_is_a_neg ;
  wire \__MUX_ternary/core/muldivv1162482__WIRE_is_a_neg ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/muldivv1172484__WIRE_is_b_neg ;
  wire \__MUX_ternary/core/muldivv1172484__WIRE_is_b_neg ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/muldivv1302492__WIRE_or/core/muldivv1302487_Y ;
  wire \__MUX_ternary/core/muldivv1302492__WIRE_or/core/muldivv1302487_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/muldivv1662497__WIRE_req_i ;
  wire \__MUX_ternary/core/muldivv1662497__WIRE_req_i ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/muldivv1682498__WIRE_is_calc_done ;
  wire \__MUX_ternary/core/muldivv1682498__WIRE_is_calc_done ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/muldivv1742500__WIRE_stall_i ;
  wire \__MUX_ternary/core/muldivv1742500__WIRE_stall_i ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/muldivv2582522__WIRE_div_sub ;
  wire \__MUX_ternary/core/muldivv2582522__WIRE_div_sub ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/muldivv2632523__WIRE_mull ;
  wire \__MUX_ternary/core/muldivv2632523__WIRE_mull ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/muldivv2712528__WIRE_signed_adjust ;
  wire \__MUX_ternary/core/muldivv2712528__WIRE_signed_adjust ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/muldivv2762540__WIRE_or/core/muldivv2762529_Y ;
  wire \__MUX_ternary/core/muldivv2762540__WIRE_or/core/muldivv2762529_Y ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/muldivv2772539__WIRE_operation_mulhsu ;
  wire \__MUX_ternary/core/muldivv2772539__WIRE_operation_mulhsu ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/muldivv852563__WIRE_a_i ;
  wire \__MUX_ternary/core/muldivv852563__WIRE_a_i ;
  (* muldiv = 32'd1 *)
  (* mux_wire = 32'd1 *)
  output \__MUX_ternary/core/muldivv852569__WIRE_b_i ;
  wire \__MUX_ternary/core/muldivv852569__WIRE_b_i ;
  (* src = "./core/muldiv.v:74.29-74.32" *)
  input [31:0] a_i;
  wire [31:0] a_i;
  (* src = "./core/muldiv.v:0.0-0.0" *)
  wire [31:0] \abs$func$./core/muldiv.v:116$2457.$result ;
  (* src = "./core/muldiv.v:0.0-0.0" *)
  wire [31:0] \abs$func$./core/muldiv.v:117$2458.$result ;
  (* src = "./core/muldiv.v:186.15-186.24" *)
  wire [32:0] adder_opa;
  (* src = "./core/muldiv.v:186.26-186.35" *)
  wire [32:0] adder_opb;
  (* src = "./core/muldiv.v:190.15-190.24" *)
  wire [32:0] adder_tmp;
  (* src = "./core/muldiv.v:75.29-75.32" *)
  input [31:0] b_i;
  wire [31:0] b_i;
  (* src = "./core/muldiv.v:71.29-71.34" *)
  input clk_i;
  wire clk_i;
  (* src = "./core/muldiv.v:122.19-122.22" *)
  reg [5:0] cnt;
  (* src = "./core/muldiv.v:184.6-184.13" *)
  wire div_sub;
  (* src = "./core/muldiv.v:128.21-128.37" *)
  reg [1:0] fast_mul_counter;
  (* src = "./core/muldiv.v:127.21-127.32" *)
  reg [63:0] fast_result;
  (* src = "./core/muldiv.v:104.6-104.14" *)
  wire is_a_neg;
  (* src = "./core/muldiv.v:103.18-103.27" *)
  wire is_a_zero;
  (* src = "./core/muldiv.v:104.16-104.24" *)
  wire is_b_neg;
  (* src = "./core/muldiv.v:103.29-103.38" *)
  wire is_b_zero;
  (* src = "./core/muldiv.v:119.19-119.31" *)
  wire is_calc_done;
  (* meta_reset = 32'd1 *)
  input metaReset_muldiv;
  wire metaReset_muldiv;
  (* src = "./core/muldiv.v:127.34-127.38" *)
  reg [63:0] mul0;
  (* src = "./core/muldiv.v:127.40-127.44" *)
  reg [63:0] mul1;
  (* src = "./core/muldiv.v:78.29-78.44" *)
  output [31:0] muldiv_result_o;
  reg [31:0] muldiv_result_o;
  (* src = "./core/muldiv.v:137.19-137.23" *)
  reg [31:0] mull;
  (* src = "./core/muldiv.v:114.19-114.23" *)
  wire [31:0] op_a;
  (* src = "./core/muldiv.v:126.21-126.27" *)
  reg [31:0] op_a_r;
  (* src = "./core/muldiv.v:114.25-114.29" *)
  wire [31:0] op_b;
  (* src = "./core/muldiv.v:126.29-126.35" *)
  reg [31:0] op_b_r;
  (* src = "./core/muldiv.v:92.6-92.19" *)
  wire operation_div;
  (* src = "./core/muldiv.v:92.21-92.35" *)
  wire operation_divu;
  (* src = "./core/muldiv.v:91.6-91.19" *)
  wire operation_mul;
  (* src = "./core/muldiv.v:91.21-91.35" *)
  wire operation_mulh;
  (* src = "./core/muldiv.v:91.37-91.53" *)
  wire operation_mulhsu;
  (* src = "./core/muldiv.v:91.55-91.70" *)
  wire operation_mulhu;
  (* src = "./core/muldiv.v:92.37-92.50" *)
  wire operation_rem;
  (* src = "./core/muldiv.v:92.52-92.66" *)
  wire operation_remu;
  (* src = "./core/muldiv.v:77.29-77.44" *)
  input [2:0] operation_sel_i;
  wire [2:0] operation_sel_i;
  (* src = "./core/muldiv.v:79.29-79.36" *)
  output ready_o;
  reg ready_o;
  (* src = "./core/muldiv.v:120.19-120.24" *)
  reg [31:0] reg32;
  (* src = "./core/muldiv.v:137.41-137.50" *)
  reg [31:0] remainder;
  (* src = "./core/muldiv.v:76.29-76.34" *)
  input req_i;
  wire req_i;
  (* src = "./core/muldiv.v:72.29-72.34" *)
  input rst_i;
  wire rst_i;
  (* src = "./core/muldiv.v:104.26-104.39" *)
  wire signed_adjust;
  (* src = "./core/muldiv.v:73.29-73.36" *)
  input stall_i;
  wire stall_i;
  assign adder_tmp = adder_opa + (* src = "./core/muldiv.v:190.27-190.48" *) { 1'h0, remainder[30:0], adder_opb[0] };
  assign _003_ = fast_mul_counter + (* src = "./core/muldiv.v:210.70-210.90" *) 32'd1;
  assign is_a_neg = a_i[31] & (* src = "./core/muldiv.v:109.20-109.97" *) _039_;
  assign is_b_neg = b_i[31] & (* src = "./core/muldiv.v:110.20-110.78" *) _041_;
  assign \__MUX_procmux2833__WIRE_and/core/muldivv2002509_Y  = \__MUX_autopmuxtreecc65recursive_mux_generator9387__WIRE_eq/core/muldivv2002508_Y  & (* src = "./core/muldiv.v:221.10-221.31" *) req_i;
  assign _004_ = { operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul, operation_mul } & (* src = "./core/muldiv.v:300.30-300.56" *) mull;
  assign _005_ = { _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_, _047_ } & (* src = "./core/muldiv.v:301.27-301.91" *) { remainder[30:0], adder_opb[0] };
  assign _006_ = { _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_, _048_ } & (* src = "./core/muldiv.v:302.27-302.74" *) mull;
  assign _007_ = { _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_, _049_ } & (* src = "./core/muldiv.v:303.27-303.75" *) remainder;
  (* src = "./core/muldiv.v:219.1-284.4" *)
  always_ff @(posedge clk_i)
    if (_018_) remainder <= _002_[64:33];
  (* src = "./core/muldiv.v:219.1-284.4" *)
  always_ff @(posedge clk_i)
    if (_019_) mull <= _002_[31:0];
  reg \adder_opb_reg[0] ;
  (* src = "./core/muldiv.v:219.1-284.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_procmux2833__WIRE_and/core/muldivv2002509_Y ) \adder_opb_reg[0]  <= 1'h0;
    else if (_020_) \adder_opb_reg[0]  <= _059_;
  assign adder_opb[0] = \adder_opb_reg[0] ;
  (* src = "./core/muldiv.v:154.1-160.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) S <= 3'h0;
    else S <= S_nxt;
  (* src = "./core/muldiv.v:219.1-284.4" *)
  always_ff @(posedge clk_i)
    if (_021_) reg32 <= _069_;
  (* src = "./core/muldiv.v:219.1-284.4" *)
  always_ff @(posedge clk_i)
    if (_022_) cnt <= _000_;
  (* src = "./core/muldiv.v:198.1-212.4" *)
  always_ff @(posedge clk_i)
    if (!_029_) op_a_r <= op_a;
  (* src = "./core/muldiv.v:198.1-212.4" *)
  always_ff @(posedge clk_i)
    if (!_029_) op_b_r <= op_b;
  (* src = "./core/muldiv.v:297.1-307.4" *)
  always_ff @(posedge clk_i)
    if (\__MUX_autopmuxtreecc65recursive_mux_generator9383__WIRE_eq/core/muldivv2912542_Y ) muldiv_result_o <= _046_;
  (* src = "./core/muldiv.v:198.1-212.4" *)
  always_ff @(posedge clk_i)
    if (_029_) fast_result <= 64'h0000000000000000;
    else fast_result <= mul1;
  (* src = "./core/muldiv.v:198.1-212.4" *)
  always_ff @(posedge clk_i)
    if (!_029_) mul0 <= _030_;
  (* src = "./core/muldiv.v:198.1-212.4" *)
  always_ff @(posedge clk_i)
    if (!_029_) mul1 <= mul0;
  (* src = "./core/muldiv.v:198.1-212.4" *)
  always_ff @(posedge clk_i)
    if (_029_) fast_mul_counter <= 2'h0;
    else if (!_074_) fast_mul_counter <= _003_[1:0];
  assign _023_ = metaReset_muldiv ? 1'h0 : _001_;
  assign _008_ = { \__MUX_autopmuxtreecc65recursive_mux_generator9389__WIRE_eq/core/muldivv2522520_Y , \__MUX_procmux2816__WIRE_eq/core/muldivv2662524_Y , \__MUX_procmux2833__WIRE_and/core/muldivv2002509_Y , is_a_neg, operation_sel_i[2] } != 5'h09;
  assign _009_ = | { \__MUX_autopmuxtreecc65recursive_mux_generator9389__WIRE_eq/core/muldivv2522520_Y , \__MUX_procmux2816__WIRE_eq/core/muldivv2662524_Y , \__MUX_procmux2833__WIRE_and/core/muldivv2002509_Y  };
  assign _010_ = { \__MUX_autopmuxtreecc65recursive_mux_generator9389__WIRE_eq/core/muldivv2522520_Y , \__MUX_procmux2816__WIRE_eq/core/muldivv2662524_Y , \__MUX_procmux2833__WIRE_and/core/muldivv2002509_Y , signed_adjust, operation_sel_i[2] } != 5'h09;
  assign _011_ = { \__MUX_autopmuxtreecc65recursive_mux_generator9389__WIRE_eq/core/muldivv2522520_Y , \__MUX_procmux2816__WIRE_eq/core/muldivv2662524_Y , operation_sel_i[2] } != 3'h3;
  assign _012_ = | { \__MUX_autopmuxtreecc65recursive_mux_generator9389__WIRE_eq/core/muldivv2522520_Y , \__MUX_procmux2816__WIRE_eq/core/muldivv2662524_Y  };
  assign _013_ = { \__MUX_procmux2868__WIRE_or/core/muldivv1662495_Y , operation_sel_i[2] } != 2'h2;
  assign _014_ = { is_b_zero, operation_sel_i[2] } != 2'h3;
  assign _015_ = { \__MUX_procmux2868__WIRE_or/core/muldivv1662495_Y , \__MUX_procmux2833__WIRE_and/core/muldivv2002509_Y , operation_sel_i[2] } != 3'h6;
  assign _016_ = { \__MUX_procmux2833__WIRE_and/core/muldivv2002509_Y , is_b_zero, operation_sel_i[2] } != 3'h7;
  assign _017_ = | { \__MUX_autopmuxtreecc65recursive_mux_generator9389__WIRE_eq/core/muldivv2522520_Y , \__MUX_procmux2833__WIRE_and/core/muldivv2002509_Y  };
  assign _018_ = & { _008_, _009_ };
  assign _019_ = & { _010_, _009_ };
  assign _020_ = & { _012_, _011_ };
  assign _021_ = & { _014_, _013_, \__MUX_procmux2833__WIRE_and/core/muldivv2002509_Y  };
  assign _022_ = & { _017_, _016_, _015_ };
  assign __MUX_autopmuxtreecc65recursive_mux_generator9393__WIRE_autortlilcc2403ReduceOr9392 = | { \__MUX_autopmuxtreecc65recursive_mux_generator9385__WIRE_eq/core/muldivv2912543_Y , \__MUX_autopmuxtreecc65recursive_mux_generator9383__WIRE_eq/core/muldivv2912542_Y , \__MUX_procmux2816__WIRE_eq/core/muldivv2662524_Y  };
  assign _024_ = \__MUX_autopmuxtreecc65recursive_mux_generator9383__WIRE_eq/core/muldivv2912542_Y  ? _080_ : 3'h3;
  assign _025_ = \__MUX_autopmuxtreecc65recursive_mux_generator9385__WIRE_eq/core/muldivv2912543_Y  ? _080_ : _024_;
  assign _026_ = \__MUX_autopmuxtreecc65recursive_mux_generator9387__WIRE_eq/core/muldivv2002508_Y  ? _078_ : 3'h0;
  assign _027_ = \__MUX_autopmuxtreecc65recursive_mux_generator9389__WIRE_eq/core/muldivv2522520_Y  ? _079_ : _026_;
  assign S_nxt = __MUX_autopmuxtreecc65recursive_mux_generator9393__WIRE_autortlilcc2403ReduceOr9392 ? _025_ : _027_;
  assign operation_rem = operation_sel_i == (* src = "./core/muldiv.v:100.25-100.50" *) 3'h6;
  assign operation_remu = operation_sel_i == (* src = "./core/muldiv.v:101.26-101.51" *) 3'h7;
  assign is_a_zero = ! (* src = "./core/muldiv.v:107.21-107.33" *) a_i;
  assign is_b_zero = ! (* src = "./core/muldiv.v:108.21-108.33" *) b_i;
  assign operation_mul = ! (* src = "./core/muldiv.v:94.25-94.50" *) operation_sel_i;
  assign operation_mulh = operation_sel_i == (* src = "./core/muldiv.v:95.26-95.51" *) 3'h1;
  assign operation_mulhsu = operation_sel_i == (* src = "./core/muldiv.v:96.28-96.53" *) 3'h2;
  assign operation_mulhu = operation_sel_i == (* src = "./core/muldiv.v:97.27-97.52" *) 3'h3;
  assign operation_div = operation_sel_i == (* src = "./core/muldiv.v:98.25-98.50" *) 3'h4;
  assign operation_divu = operation_sel_i == (* src = "./core/muldiv.v:99.26-99.51" *) 3'h5;
  assign div_sub = { remainder[30:0], adder_opb[0] } >= (* src = "./core/muldiv.v:184.17-184.40" *) reg32;
  assign _028_ = ! (* src = "./core/muldiv.v:131.43-131.48" *) _075_;
  assign _029_ = rst_i || (* src = "./core/muldiv.v:200.9-200.41" *) \__MUX_procmux2833__WIRE_and/core/muldivv2002509_Y ;
  assign \__MUX_procmux2811__WIRE_logic_or/core/muldivv2912544_Y  = \__MUX_autopmuxtreecc65recursive_mux_generator9383__WIRE_eq/core/muldivv2912542_Y  || (* src = "./core/muldiv.v:291.9-291.36" *) \__MUX_autopmuxtreecc65recursive_mux_generator9385__WIRE_eq/core/muldivv2912543_Y ;
  assign _030_ = op_a_r * (* src = "./core/muldiv.v:207.17-207.32" *) op_b_r;
  assign _031_ = - (* src = "./core/muldiv.v:187.33-187.39" *) { 1'h0, reg32 };
  assign _032_ = - (* src = "./core/muldiv.v:270.43-270.53" *) remainder;
  assign _033_ = - (* src = "./core/muldiv.v:271.47-271.56" *) mull;
  assign _034_ = - (* src = "./core/muldiv.v:277.55-277.67" *) { 1'h0, fast_result };
  assign _035_ = - (* src = "./core/muldiv.v:85.25-85.29" *) a_i;
  assign _036_ = - (* src = "./core/muldiv.v:85.25-85.29" *) b_i;
  assign _038_ = _037_ | (* src = "./core/muldiv.v:109.31-109.80" *) operation_div;
  assign _039_ = _038_ | (* src = "./core/muldiv.v:109.31-109.96" *) operation_rem;
  assign _040_ = operation_mulh | (* src = "./core/muldiv.v:110.31-110.61" *) operation_div;
  assign _041_ = _040_ | (* src = "./core/muldiv.v:110.31-110.77" *) operation_rem;
  assign _042_ = operation_mul | (* src = "./core/muldiv.v:130.25-130.55" *) operation_mulh;
  assign _043_ = _042_ | (* src = "./core/muldiv.v:130.25-130.74" *) operation_mulhsu;
  assign \__MUX_ternary/core/muldivv1302492__WIRE_or/core/muldivv1302487_Y  = _043_ | (* src = "./core/muldiv.v:130.25-131.40" *) operation_mulhu;
  assign \__MUX_procmux2868__WIRE_or/core/muldivv1662495_Y  = is_a_zero | (* src = "./core/muldiv.v:240.17-240.38" *) is_b_zero;
  assign \__MUX_ternary/core/muldivv2762540__WIRE_or/core/muldivv2762529_Y  = operation_mulh | (* src = "./core/muldiv.v:276.24-276.56" *) operation_mulhu;
  assign _044_ = _004_ | (* src = "./core/muldiv.v:300.28-301.92" *) _005_;
  assign _045_ = _044_ | (* src = "./core/muldiv.v:300.28-302.75" *) _006_;
  assign _046_ = _045_ | (* src = "./core/muldiv.v:300.28-303.76" *) _007_;
  assign _037_ = operation_mulh | (* src = "./core/muldiv.v:301.31-301.64" *) operation_mulhsu;
  assign _047_ = _037_ | (* src = "./core/muldiv.v:301.31-301.82" *) operation_mulhu;
  assign _048_ = operation_div | (* src = "./core/muldiv.v:302.31-302.61" *) operation_divu;
  assign _049_ = operation_rem | (* src = "./core/muldiv.v:303.31-303.61" *) operation_remu;
  (* src = "./core/muldiv.v:289.1-295.4" *)
  always_ff @(posedge clk_i)
    ready_o <= _023_;
  assign _001_ = \__MUX_procmux2811__WIRE_logic_or/core/muldivv2912544_Y  ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:291.9-291.36|./core/muldiv.v:291.5-294.22" *) 1'h1 : 1'h0;
  assign _050_ = operation_sel_i[2] ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:268.13-268.23|./core/muldiv.v:268.9-282.12" *) _083_ : _086_[64:33];
  assign _051_ = \__MUX_procmux2816__WIRE_eq/core/muldivv2662524_Y  ? (* src = "./core/muldiv.v:266.14-266.32|./core/muldiv.v:266.10-283.8" *) _050_ : 32'hxxxxxxxx;
  assign _052_ = operation_sel_i[2] ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:255.13-255.23|./core/muldiv.v:255.9-264.12" *) _081_[64:33] : _082_[64:33];
  assign _053_ = \__MUX_autopmuxtreecc65recursive_mux_generator9389__WIRE_eq/core/muldivv2522520_Y  ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:252.14-252.25|./core/muldiv.v:252.10-283.8" *) _052_ : _051_;
  assign _054_ = is_b_zero ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:225.17-225.26|./core/muldiv.v:225.13-236.16" *) a_i : 32'd0;
  assign _055_ = operation_sel_i[2] ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:223.13-223.23|./core/muldiv.v:223.9-250.12" *) _054_ : 32'd0;
  assign _002_[64:33] = \__MUX_procmux2833__WIRE_and/core/muldivv2002509_Y  ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:221.10-221.31|./core/muldiv.v:221.5-283.8" *) _055_ : _053_;
  assign _056_ = operation_sel_i[2] ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:268.13-268.23|./core/muldiv.v:268.9-282.12" *) 1'hx : _086_[32];
  assign _057_ = \__MUX_procmux2816__WIRE_eq/core/muldivv2662524_Y  ? (* src = "./core/muldiv.v:266.14-266.32|./core/muldiv.v:266.10-283.8" *) _056_ : 1'hx;
  assign _058_ = operation_sel_i[2] ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:255.13-255.23|./core/muldiv.v:255.9-264.12" *) _081_[32] : _082_[32];
  assign _059_ = \__MUX_autopmuxtreecc65recursive_mux_generator9389__WIRE_eq/core/muldivv2522520_Y  ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:252.14-252.25|./core/muldiv.v:252.10-283.8" *) _058_ : _057_;
  assign _060_ = operation_sel_i[2] ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:268.13-268.23|./core/muldiv.v:268.9-282.12" *) _084_ : _086_[31:0];
  assign _061_ = \__MUX_procmux2816__WIRE_eq/core/muldivv2662524_Y  ? (* src = "./core/muldiv.v:266.14-266.32|./core/muldiv.v:266.10-283.8" *) _060_ : 32'hxxxxxxxx;
  assign _062_ = operation_sel_i[2] ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:255.13-255.23|./core/muldiv.v:255.9-264.12" *) _081_[31:0] : _082_[31:0];
  assign _063_ = \__MUX_autopmuxtreecc65recursive_mux_generator9389__WIRE_eq/core/muldivv2522520_Y  ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:252.14-252.25|./core/muldiv.v:252.10-283.8" *) _062_ : _061_;
  assign _064_ = \__MUX_procmux2868__WIRE_or/core/muldivv1662495_Y  ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:240.17-240.38|./core/muldiv.v:240.13-249.16" *) 32'd0 : op_b;
  assign _065_ = is_b_zero ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:225.17-225.26|./core/muldiv.v:225.13-236.16" *) 32'd4294967295 : op_a;
  assign _066_ = operation_sel_i[2] ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:223.13-223.23|./core/muldiv.v:223.9-250.12" *) _065_ : _064_;
  assign _002_[31:0] = \__MUX_procmux2833__WIRE_and/core/muldivv2002509_Y  ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:221.10-221.31|./core/muldiv.v:221.5-283.8" *) _066_ : _063_;
  assign _067_ = \__MUX_procmux2868__WIRE_or/core/muldivv1662495_Y  ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:240.17-240.38|./core/muldiv.v:240.13-249.16" *) 32'hxxxxxxxx : op_a;
  assign _068_ = is_b_zero ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:225.17-225.26|./core/muldiv.v:225.13-236.16" *) 32'hxxxxxxxx : op_b;
  assign _069_ = operation_sel_i[2] ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:223.13-223.23|./core/muldiv.v:223.9-250.12" *) _068_ : _067_;
  assign _070_ = \__MUX_autopmuxtreecc65recursive_mux_generator9389__WIRE_eq/core/muldivv2522520_Y  ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:252.14-252.25|./core/muldiv.v:252.10-283.8" *) _076_[5:0] : 6'hxx;
  assign _071_ = \__MUX_procmux2868__WIRE_or/core/muldivv1662495_Y  ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:240.17-240.38|./core/muldiv.v:240.13-249.16" *) 6'hxx : 6'h1f;
  assign _072_ = is_b_zero ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:225.17-225.26|./core/muldiv.v:225.13-236.16" *) 6'hxx : 6'h20;
  assign _073_ = operation_sel_i[2] ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:223.13-223.23|./core/muldiv.v:223.9-250.12" *) _072_ : _071_;
  assign _000_ = \__MUX_procmux2833__WIRE_and/core/muldivv2002509_Y  ? (* full_case = 32'd1 *) (* src = "./core/muldiv.v:221.10-221.31|./core/muldiv.v:221.5-283.8" *) _073_ : _070_;
  assign \__MUX_autopmuxtreecc65recursive_mux_generator9385__WIRE_eq/core/muldivv2912543_Y  = S == (* full_case = 32'd1 *) (* src = "./core/muldiv.v:0.0-0.0|./core/muldiv.v:164.5-177.12" *) 3'h4;
  assign \__MUX_autopmuxtreecc65recursive_mux_generator9383__WIRE_eq/core/muldivv2912542_Y  = S == (* full_case = 32'd1 *) (* src = "./core/muldiv.v:0.0-0.0|./core/muldiv.v:164.5-177.12" *) 3'h3;
  assign \__MUX_procmux2816__WIRE_eq/core/muldivv2662524_Y  = S == (* full_case = 32'd1 *) (* src = "./core/muldiv.v:0.0-0.0|./core/muldiv.v:164.5-177.12" *) 3'h2;
  assign \__MUX_autopmuxtreecc65recursive_mux_generator9389__WIRE_eq/core/muldivv2522520_Y  = S == (* full_case = 32'd1 *) (* src = "./core/muldiv.v:0.0-0.0|./core/muldiv.v:164.5-177.12" *) 3'h1;
  assign \__MUX_autopmuxtreecc65recursive_mux_generator9387__WIRE_eq/core/muldivv2002508_Y  = ! (* full_case = 32'd1 *) (* src = "./core/muldiv.v:0.0-0.0|./core/muldiv.v:164.5-177.12" *) S;
  assign _074_ = & (* src = "./core/muldiv.v:210.30-210.48" *) fast_mul_counter;
  assign _075_ = | (* src = "./core/muldiv.v:131.43-131.48" *) cnt;
  assign _076_ = cnt - (* src = "./core/muldiv.v:254.16-254.25" *) 32'd1;
  assign op_a = is_a_neg ? (* src = "./core/muldiv.v:116.15-116.44" *) \abs$func$./core/muldiv.v:116$2457.$result  : a_i;
  assign op_b = is_b_neg ? (* src = "./core/muldiv.v:117.15-117.44" *) \abs$func$./core/muldiv.v:117$2458.$result  : b_i;
  assign is_calc_done = \__MUX_ternary/core/muldivv1302492__WIRE_or/core/muldivv1302487_Y  ? (* src = "./core/muldiv.v:130.23-131.69" *) _074_ : _028_;
  assign _077_ = \__MUX_procmux2868__WIRE_or/core/muldivv1662495_Y  ? (* src = "./core/muldiv.v:166.30-166.70" *) 3'h3 : 3'h1;
  assign _078_ = req_i ? (* src = "./core/muldiv.v:166.21-166.79" *) _077_ : 3'h0;
  assign _079_ = is_calc_done ? (* src = "./core/muldiv.v:168.21-168.59" *) 3'h2 : 3'h1;
  assign _080_ = stall_i ? (* src = "./core/muldiv.v:174.21-174.48" *) 3'h4 : 3'h0;
  assign adder_opa = operation_sel_i[2] ? (* src = "./core/muldiv.v:187.20-187.47" *) _031_ : { 1'h0, reg32 };
  assign _081_ = div_sub ? (* src = "./core/muldiv.v:258.23-258.85" *) { adder_tmp[31:0], mull, 1'h1 } : { remainder[30:0], adder_opb[0], mull, 1'h0 };
  assign _082_ = mull[0] ? (* src = "./core/muldiv.v:263.23-263.85" *) { 1'h0, adder_tmp, mull[31:1] } : { 1'h0, remainder, adder_opb[0], mull[31:1] };
  assign _083_ = is_a_neg ? (* src = "./core/muldiv.v:270.31-270.65" *) _032_ : 32'hxxxxxxxx;
  assign _084_ = signed_adjust ? (* src = "./core/muldiv.v:271.30-271.67" *) _033_ : 32'hxxxxxxxx;
  assign _085_ = signed_adjust ? (* src = "./core/muldiv.v:276.59-276.102" *) _034_ : { 1'h0, fast_result };
  assign _086_ = \__MUX_ternary/core/muldivv2762540__WIRE_or/core/muldivv2762529_Y  ? (* src = "./core/muldiv.v:276.23-277.95" *) _085_ : _088_;
  assign _087_ = is_a_neg ? (* src = "./core/muldiv.v:277.43-277.81" *) _034_ : { 1'h0, fast_result };
  assign _088_ = operation_mulhsu ? (* src = "./core/muldiv.v:277.23-277.95" *) _087_ : { 1'h0, fast_result };
  assign \abs$func$./core/muldiv.v:116$2457.$result  = a_i[31] ? (* src = "./core/muldiv.v:85.11-85.35" *) _035_ : { 1'h0, a_i[30:0] };
  assign \abs$func$./core/muldiv.v:117$2458.$result  = b_i[31] ? (* src = "./core/muldiv.v:85.11-85.35" *) _036_ : { 1'h0, b_i[30:0] };
  assign signed_adjust = is_a_neg ^ (* src = "./core/muldiv.v:111.24-111.43" *) is_b_neg;
  assign \__MUX_ternary/core/muldivv1662497__WIRE_req_i  = req_i;
  assign \__MUX_ternary/core/muldivv1172484__WIRE_is_b_neg  = is_b_neg;
  assign \__MUX_ternary/core/muldivv1162482__WIRE_is_a_neg  = is_a_neg;
  assign __MUX_procmux2829__WIRE_is_b_zero = is_b_zero;
  assign __MUX_procmux2814__WIRE_operation_sel_i = operation_sel_i[2];
  assign \__MUX_ternary/core/muldivv1682498__WIRE_is_calc_done  = is_calc_done;
  assign \__MUX_ternary/core/muldivv1742500__WIRE_stall_i  = stall_i;
  assign \__MUX_ternary/core/muldivv2582522__WIRE_div_sub  = div_sub;
  assign \__MUX_ternary/core/muldivv2632523__WIRE_mull  = mull[0];
  assign \__MUX_ternary/core/muldivv2712528__WIRE_signed_adjust  = signed_adjust;
  assign \__MUX_ternary/core/muldivv2772539__WIRE_operation_mulhsu  = operation_mulhsu;
  assign \__MUX_ternary/core/muldivv852563__WIRE_a_i  = a_i[31];
  assign \__MUX_ternary/core/muldivv852569__WIRE_b_i  = b_i[31];
  assign adder_opb[32:1] = { 1'h0, remainder[30:0] };
endmodule

(* hdlname = "\\pipeline_control" *)
(* src = "./core/pipeline_control.v:63.1-112.10" *)
module pipeline_control(unsupported_instr_i, is_load_hazard, branch_hit_i, branch_taken_i, branch_misprediction_i, is_fencei_i, sys_jump_i, flush2fet_o, flush2dec_o, flush2exe_o, flush2wbk_o, data_hazard_o, metaReset_pipeline_control);
  (* src = "./core/pipeline_control.v:97.28-97.58" *)
  wire _00_;
  (* src = "./core/pipeline_control.v:97.45-97.58" *)
  wire _01_;
  (* src = "./core/pipeline_control.v:106.22-106.47" *)
  wire _02_;
  (* src = "./core/pipeline_control.v:107.22-107.78" *)
  wire _03_;
  (* src = "./core/pipeline_control.v:93.6-93.18" *)
  wire branch_flush;
  (* src = "./core/pipeline_control.v:67.18-67.30" *)
  input branch_hit_i;
  wire branch_hit_i;
  (* src = "./core/pipeline_control.v:71.18-71.40" *)
  input branch_misprediction_i;
  wire branch_misprediction_i;
  (* src = "./core/pipeline_control.v:70.18-70.32" *)
  input branch_taken_i;
  wire branch_taken_i;
  (* src = "./core/pipeline_control.v:90.18-90.31" *)
  output data_hazard_o;
  wire data_hazard_o;
  (* src = "./core/pipeline_control.v:81.18-81.29" *)
  output flush2dec_o;
  wire flush2dec_o;
  (* src = "./core/pipeline_control.v:84.18-84.29" *)
  output flush2exe_o;
  wire flush2exe_o;
  (* src = "./core/pipeline_control.v:78.18-78.29" *)
  output flush2fet_o;
  wire flush2fet_o;
  (* src = "./core/pipeline_control.v:87.18-87.29" *)
  output flush2wbk_o;
  wire flush2wbk_o;
  (* src = "./core/pipeline_control.v:72.18-72.29" *)
  input is_fencei_i;
  wire is_fencei_i;
  (* src = "./core/pipeline_control.v:66.18-66.32" *)
  input is_load_hazard;
  wire is_load_hazard;
  (* meta_reset = 32'd1 *)
  input metaReset_pipeline_control;
  wire metaReset_pipeline_control;
  (* src = "./core/pipeline_control.v:75.18-75.28" *)
  input sys_jump_i;
  wire sys_jump_i;
  (* src = "./core/pipeline_control.v:65.18-65.37" *)
  input unsupported_instr_i;
  wire unsupported_instr_i;
  assign _00_ = branch_taken_i & (* src = "./core/pipeline_control.v:97.28-97.58" *) _01_;
  assign _01_ = ! (* src = "./core/pipeline_control.v:97.45-97.58" *) branch_hit_i;
  assign _02_ = branch_flush | (* src = "./core/pipeline_control.v:107.22-107.47" *) sys_jump_i;
  assign flush2fet_o = _02_ | (* src = "./core/pipeline_control.v:107.22-107.61" *) is_fencei_i;
  assign _03_ = flush2fet_o | (* src = "./core/pipeline_control.v:107.22-107.78" *) is_load_hazard;
  assign flush2dec_o = _03_ | (* src = "./core/pipeline_control.v:107.22-107.100" *) unsupported_instr_i;
  assign flush2exe_o = is_fencei_i | (* src = "./core/pipeline_control.v:108.22-108.46" *) sys_jump_i;
  assign branch_flush = _00_ | (* src = "./core/pipeline_control.v:97.27-97.84" *) branch_misprediction_i;
  assign data_hazard_o = is_load_hazard;
  assign flush2wbk_o = sys_jump_i;
endmodule

(* dynports =  1  *)
(* hdlname = "\\program_counter" *)
(* src = "./core/program_counter.v:69.1-161.10" *)
module program_counter(clk_i, rst_i, init_pc_addr_i, irq_taken_i, PC_handler_i, stall_i, bpu_branch_hit_i, bpu_branch_decision_i, bpu_branch_target_addr_i, sys_jump_i, sys_jump_data_i, dec_branch_hit_i, dec_branch_decision_i, dec_pc_i, exe_branch_misprediction_i, exe_branch_taken_i, exe_branch_target_addr_i, exe_branch_restore_addr_i, is_fencei_i, pc_o, __MUX_procmux7069__WIRE_rst_i
, \__MUX_procmux7048__WIRE_and/core/program_counterv142410_Y , __MUX_procmux7051__WIRE_sys_jump_i, __MUX_procmux7054__WIRE_exe_branch_misprediction_i, \__MUX_procmux7057__WIRE_and/core/program_counterv136408_Y , __MUX_procmux7060__WIRE_is_fencei_i, __MUX_procmux7063__WIRE_irq_taken_i, __MUX_procmux7066__WIRE_stall_i, \__MUX_ternary/core/program_counterv139409__WIRE_dec_branch_decision_i , metaReset_program_counter);
  (* src = "./core/program_counter.v:122.1-154.4" *)
  wire [31:0] _00_;
  wire _01_;
  (* src = "./core/program_counter.v:136.30-136.47" *)
  wire _02_;
  wire [31:0] _03_;
  wire [31:0] _04_;
  wire [31:0] _05_;
  wire [31:0] _06_;
  wire [31:0] _07_;
  wire [31:0] _08_;
  wire [31:0] _09_;
  (* src = "./core/program_counter.v:139.17-139.93" *)
  wire [31:0] _10_;
  (* src = "./core/program_counter.v:80.25-80.37" *)
  input [31:0] PC_handler_i;
  wire [31:0] PC_handler_i;
  (* mux_wire = 32'd1 *)
  (* program_counter = 32'd1 *)
  output \__MUX_procmux7048__WIRE_and/core/program_counterv142410_Y ;
  wire \__MUX_procmux7048__WIRE_and/core/program_counterv142410_Y ;
  (* mux_wire = 32'd1 *)
  (* program_counter = 32'd1 *)
  output __MUX_procmux7051__WIRE_sys_jump_i;
  wire __MUX_procmux7051__WIRE_sys_jump_i;
  (* mux_wire = 32'd1 *)
  (* program_counter = 32'd1 *)
  output __MUX_procmux7054__WIRE_exe_branch_misprediction_i;
  wire __MUX_procmux7054__WIRE_exe_branch_misprediction_i;
  (* mux_wire = 32'd1 *)
  (* program_counter = 32'd1 *)
  output \__MUX_procmux7057__WIRE_and/core/program_counterv136408_Y ;
  wire \__MUX_procmux7057__WIRE_and/core/program_counterv136408_Y ;
  (* mux_wire = 32'd1 *)
  (* program_counter = 32'd1 *)
  output __MUX_procmux7060__WIRE_is_fencei_i;
  wire __MUX_procmux7060__WIRE_is_fencei_i;
  (* mux_wire = 32'd1 *)
  (* program_counter = 32'd1 *)
  output __MUX_procmux7063__WIRE_irq_taken_i;
  wire __MUX_procmux7063__WIRE_irq_taken_i;
  (* mux_wire = 32'd1 *)
  (* program_counter = 32'd1 *)
  output __MUX_procmux7066__WIRE_stall_i;
  wire __MUX_procmux7066__WIRE_stall_i;
  (* mux_wire = 32'd1 *)
  (* program_counter = 32'd1 *)
  output __MUX_procmux7069__WIRE_rst_i;
  wire __MUX_procmux7069__WIRE_rst_i;
  (* mux_wire = 32'd1 *)
  (* program_counter = 32'd1 *)
  output \__MUX_ternary/core/program_counterv139409__WIRE_dec_branch_decision_i ;
  wire \__MUX_ternary/core/program_counterv139409__WIRE_dec_branch_decision_i ;
  (* src = "./core/program_counter.v:87.25-87.46" *)
  input bpu_branch_decision_i;
  wire bpu_branch_decision_i;
  (* src = "./core/program_counter.v:86.25-86.41" *)
  input bpu_branch_hit_i;
  wire bpu_branch_hit_i;
  (* src = "./core/program_counter.v:88.25-88.49" *)
  input [31:0] bpu_branch_target_addr_i;
  wire [31:0] bpu_branch_target_addr_i;
  (* src = "./core/program_counter.v:72.25-72.30" *)
  input clk_i;
  wire clk_i;
  (* src = "./core/program_counter.v:96.25-96.46" *)
  input dec_branch_decision_i;
  wire dec_branch_decision_i;
  (* src = "./core/program_counter.v:95.25-95.41" *)
  input dec_branch_hit_i;
  wire dec_branch_hit_i;
  (* src = "./core/program_counter.v:97.25-97.33" *)
  input [31:0] dec_pc_i;
  wire [31:0] dec_pc_i;
  (* src = "./core/program_counter.v:100.25-100.51" *)
  input exe_branch_misprediction_i;
  wire exe_branch_misprediction_i;
  (* src = "./core/program_counter.v:103.25-103.50" *)
  input [31:0] exe_branch_restore_addr_i;
  wire [31:0] exe_branch_restore_addr_i;
  (* src = "./core/program_counter.v:101.25-101.43" *)
  input exe_branch_taken_i;
  wire exe_branch_taken_i;
  (* src = "./core/program_counter.v:102.25-102.49" *)
  input [31:0] exe_branch_target_addr_i;
  wire [31:0] exe_branch_target_addr_i;
  (* src = "./core/program_counter.v:76.25-76.39" *)
  input [31:0] init_pc_addr_i;
  wire [31:0] init_pc_addr_i;
  (* src = "./core/program_counter.v:79.25-79.36" *)
  input irq_taken_i;
  wire irq_taken_i;
  (* src = "./core/program_counter.v:104.25-104.36" *)
  input is_fencei_i;
  wire is_fencei_i;
  (* meta_reset = 32'd1 *)
  input metaReset_program_counter;
  wire metaReset_program_counter;
  (* src = "./core/program_counter.v:118.19-118.31" *)
  wire [31:0] pc_increment;
  (* src = "./core/program_counter.v:107.25-107.29" *)
  output [31:0] pc_o;
  reg [31:0] pc_o;
  (* src = "./core/program_counter.v:73.25-73.30" *)
  input rst_i;
  wire rst_i;
  (* src = "./core/program_counter.v:83.25-83.32" *)
  input stall_i;
  wire stall_i;
  (* src = "./core/program_counter.v:92.25-92.40" *)
  input [31:0] sys_jump_data_i;
  wire [31:0] sys_jump_data_i;
  (* src = "./core/program_counter.v:91.25-91.35" *)
  input sys_jump_i;
  wire sys_jump_i;
  assign pc_increment = pc_o + (* src = "./core/program_counter.v:120.23-120.39" *) 3'h4;
  assign \__MUX_procmux7057__WIRE_and/core/program_counterv136408_Y  = exe_branch_taken_i & (* src = "./core/program_counter.v:136.9-136.47" *) _02_;
  assign \__MUX_procmux7048__WIRE_and/core/program_counterv142410_Y  = bpu_branch_hit_i & (* src = "./core/program_counter.v:142.14-142.54" *) bpu_branch_decision_i;
  (* src = "./core/program_counter.v:122.1-154.4" *)
  always_ff @(posedge clk_i)
    if (_01_) pc_o <= _00_;
  assign _01_ = { stall_i, rst_i } != 2'h2;
  assign _02_ = ! (* src = "./core/program_counter.v:136.30-136.47" *) dec_branch_hit_i;
  assign _03_ = \__MUX_procmux7048__WIRE_and/core/program_counterv142410_Y  ? (* full_case = 32'd1 *) (* src = "./core/program_counter.v:142.14-142.54|./core/program_counter.v:142.10-145.30" *) bpu_branch_target_addr_i : pc_increment;
  assign _04_ = sys_jump_i ? (* full_case = 32'd1 *) (* src = "./core/program_counter.v:140.14-140.24|./core/program_counter.v:140.10-145.30" *) sys_jump_data_i : _03_;
  assign _05_ = exe_branch_misprediction_i ? (* full_case = 32'd1 *) (* src = "./core/program_counter.v:138.14-138.40|./core/program_counter.v:138.10-145.30" *) _10_ : _04_;
  assign _06_ = \__MUX_procmux7057__WIRE_and/core/program_counterv136408_Y  ? (* full_case = 32'd1 *) (* src = "./core/program_counter.v:136.9-136.47|./core/program_counter.v:136.5-145.30" *) exe_branch_target_addr_i : _05_;
  assign _07_ = is_fencei_i ? (* full_case = 32'd1 *) (* src = "./core/program_counter.v:133.9-133.20|./core/program_counter.v:133.5-145.30" *) dec_pc_i : _06_;
  assign _08_ = irq_taken_i ? (* full_case = 32'd1 *) (* src = "./core/program_counter.v:128.14-128.25|./core/program_counter.v:128.10-145.30" *) PC_handler_i : _07_;
  assign _09_ = stall_i ? (* full_case = 32'd1 *) (* src = "./core/program_counter.v:126.14-126.21|./core/program_counter.v:126.10-145.30" *) 32'hxxxxxxxx : _08_;
  assign _00_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/program_counter.v:124.9-124.14|./core/program_counter.v:124.5-145.30" *) init_pc_addr_i : _09_;
  assign _10_ = dec_branch_decision_i ? (* src = "./core/program_counter.v:139.17-139.93" *) exe_branch_restore_addr_i : exe_branch_target_addr_i;
  assign __MUX_procmux7069__WIRE_rst_i = rst_i;
  assign __MUX_procmux7066__WIRE_stall_i = stall_i;
  assign __MUX_procmux7063__WIRE_irq_taken_i = irq_taken_i;
  assign __MUX_procmux7060__WIRE_is_fencei_i = is_fencei_i;
  assign __MUX_procmux7054__WIRE_exe_branch_misprediction_i = exe_branch_misprediction_i;
  assign __MUX_procmux7051__WIRE_sys_jump_i = sys_jump_i;
  assign \__MUX_ternary/core/program_counterv139409__WIRE_dec_branch_decision_i  = dec_branch_decision_i;
endmodule

(* dynports =  1  *)
(* hdlname = "\\reg_file" *)
(* src = "./core/reg_file.v:57.1-136.10" *)
module reg_file(clk_i, rst_i, rs1_addr_i, rs2_addr_i, rd_we_i, rd_addr_i, rd_data_i, rs1_data_o, rs2_data_o, \__MUX_ternary/core/reg_filev85449__WIRE_and/core/reg_filev85447_Y , \__MUX_ternary/core/reg_filev86453__WIRE_and/core/reg_filev86451_Y , __MUX_procmux6922__WIRE_we, __MUX_procmux7036__WIRE_rst_i, metaReset_reg_file);
  (* src = "./core/reg_file.v:123.1-134.4" *)
  wire [31:0] _00_;
  (* src = "./core/reg_file.v:123.1-134.4" *)
  wire [4:0] _01_;
  (* src = "./core/reg_file.v:123.1-134.4" *)
  wire [31:0] _02_;
  (* src = "./core/reg_file.v:123.1-134.4" *)
  wire [31:0] _03_;
  (* src = "./core/reg_file.v:123.1-134.4" *)
  wire [4:0] _04_;
  (* src = "./core/reg_file.v:123.1-134.4" *)
  wire [31:0] _05_;
  (* src = "./core/reg_file.v:123.1-134.4" *)
  wire [31:0] _06_;
  (* src = "./core/reg_file.v:85.28-85.51" *)
  wire _07_;
  (* src = "./core/reg_file.v:86.28-86.51" *)
  wire _08_;
  (* src = "./core/reg_file.v:85.68-85.69" *)
  wire [31:0] _09_;
  (* src = "./core/reg_file.v:86.68-86.69" *)
  wire [31:0] _10_;
  (* src = "./core/reg_file.v:80.23-80.34" *)
  wire _11_;
  (* mux_wire = 32'd1 *)
  (* reg_file = 32'd1 *)
  output __MUX_procmux6922__WIRE_we;
  wire __MUX_procmux6922__WIRE_we;
  (* mux_wire = 32'd1 *)
  (* reg_file = 32'd1 *)
  output __MUX_procmux7036__WIRE_rst_i;
  wire __MUX_procmux7036__WIRE_rst_i;
  (* mux_wire = 32'd1 *)
  (* reg_file = 32'd1 *)
  output \__MUX_ternary/core/reg_filev85449__WIRE_and/core/reg_filev85447_Y ;
  wire \__MUX_ternary/core/reg_filev85449__WIRE_and/core/reg_filev85447_Y ;
  (* mux_wire = 32'd1 *)
  (* reg_file = 32'd1 *)
  output \__MUX_ternary/core/reg_filev86453__WIRE_and/core/reg_filev86451_Y ;
  wire \__MUX_ternary/core/reg_filev86453__WIRE_and/core/reg_filev86451_Y ;
  (* src = "./core/reg_file.v:63.26-63.31" *)
  input clk_i;
  wire clk_i;
  (* meta_reset = 32'd1 *)
  input metaReset_reg_file;
  wire metaReset_reg_file;
  (* src = "./core/reg_file.v:72.26-72.35" *)
  input [4:0] rd_addr_i;
  wire [4:0] rd_addr_i;
  (* src = "./core/reg_file.v:73.26-73.35" *)
  input [31:0] rd_data_i;
  wire [31:0] rd_data_i;
  (* src = "./core/reg_file.v:71.26-71.33" *)
  input rd_we_i;
  wire rd_we_i;
  (* src = "./core/reg_file.v:67.26-67.36" *)
  input [4:0] rs1_addr_i;
  wire [4:0] rs1_addr_i;
  (* src = "./core/reg_file.v:76.26-76.36" *)
  output [31:0] rs1_data_o;
  wire [31:0] rs1_data_o;
  (* src = "./core/reg_file.v:68.26-68.36" *)
  input [4:0] rs2_addr_i;
  wire [4:0] rs2_addr_i;
  (* src = "./core/reg_file.v:77.26-77.36" *)
  output [31:0] rs2_data_o;
  wire [31:0] rs2_data_o;
  (* src = "./core/reg_file.v:64.26-64.31" *)
  input rst_i;
  wire rst_i;
  (* src = "./core/reg_file.v:80.6-80.8" *)
  wire we;
  (* src = "./core/reg_file.v:83.18-83.19" *)
  reg [31:0] x [31:0];
  always_ff @(posedge clk_i) begin
    if (_00_[31])
      x[32'd0] <= 32'd0;
    if (_00_[31])
      x[32'd1] <= 32'd0;
    if (_00_[31])
      x[32'd2] <= 32'd0;
    if (_00_[31])
      x[32'd3] <= 32'd0;
    if (_00_[31])
      x[32'd4] <= 32'd0;
    if (_00_[31])
      x[32'd5] <= 32'd0;
    if (_00_[31])
      x[32'd6] <= 32'd0;
    if (_00_[31])
      x[32'd7] <= 32'd0;
    if (_00_[31])
      x[32'd8] <= 32'd0;
    if (_00_[31])
      x[32'd9] <= 32'd0;
    if (_00_[31])
      x[32'd10] <= 32'd0;
    if (_00_[31])
      x[32'd11] <= 32'd0;
    if (_00_[31])
      x[32'd12] <= 32'd0;
    if (_00_[31])
      x[32'd13] <= 32'd0;
    if (_00_[31])
      x[32'd14] <= 32'd0;
    if (_00_[31])
      x[32'd15] <= 32'd0;
    if (_00_[31])
      x[32'd16] <= 32'd0;
    if (_00_[31])
      x[32'd17] <= 32'd0;
    if (_00_[31])
      x[32'd18] <= 32'd0;
    if (_00_[31])
      x[32'd19] <= 32'd0;
    if (_00_[31])
      x[32'd20] <= 32'd0;
    if (_00_[31])
      x[32'd21] <= 32'd0;
    if (_00_[31])
      x[32'd22] <= 32'd0;
    if (_00_[31])
      x[32'd23] <= 32'd0;
    if (_00_[31])
      x[32'd24] <= 32'd0;
    if (_00_[31])
      x[32'd25] <= 32'd0;
    if (_00_[31])
      x[32'd26] <= 32'd0;
    if (_00_[31])
      x[32'd27] <= 32'd0;
    if (_00_[31])
      x[32'd28] <= 32'd0;
    if (_00_[31])
      x[32'd29] <= 32'd0;
    if (_00_[31])
      x[32'd30] <= 32'd0;
    if (_00_[31])
      x[32'd31] <= 32'd0;
  end
  always_ff @(posedge clk_i) begin
    if (_03_[31])
      x[_01_] <= _02_;
  end
  assign _10_ = x[rs2_addr_i];
  assign _09_ = x[rs1_addr_i];
  assign we = rd_we_i & (* src = "./core/reg_file.v:80.11-80.35" *) _11_;
  assign \__MUX_ternary/core/reg_filev85449__WIRE_and/core/reg_filev85447_Y  = we & (* src = "./core/reg_file.v:85.22-85.52" *) _07_;
  assign \__MUX_ternary/core/reg_filev86453__WIRE_and/core/reg_filev86451_Y  = we & (* src = "./core/reg_file.v:86.22-86.52" *) _08_;
  assign _07_ = rs1_addr_i == (* src = "./core/reg_file.v:85.28-85.51" *) rd_addr_i;
  assign _08_ = rs2_addr_i == (* src = "./core/reg_file.v:86.28-86.51" *) rd_addr_i;
  assign _06_[31] = we ? (* full_case = 32'd1 *) (* src = "./core/reg_file.v:129.13-129.15|./core/reg_file.v:129.9-132.12" *) 1'h1 : 1'h0;
  assign _05_ = we ? (* full_case = 32'd1 *) (* src = "./core/reg_file.v:129.13-129.15|./core/reg_file.v:129.9-132.12" *) rd_data_i : 32'hxxxxxxxx;
  assign _04_ = we ? (* full_case = 32'd1 *) (* src = "./core/reg_file.v:129.13-129.15|./core/reg_file.v:129.9-132.12" *) rd_addr_i : 5'hxx;
  assign _00_[31] = rst_i ? (* full_case = 32'd1 *) (* src = "./core/reg_file.v:125.9-125.14|./core/reg_file.v:125.5-133.8" *) 1'h1 : 1'h0;
  assign _03_[31] = rst_i ? (* full_case = 32'd1 *) (* src = "./core/reg_file.v:125.9-125.14|./core/reg_file.v:125.5-133.8" *) 1'h0 : _06_[31];
  assign _02_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/reg_file.v:125.9-125.14|./core/reg_file.v:125.5-133.8" *) 32'hxxxxxxxx : _05_;
  assign _01_ = rst_i ? (* full_case = 32'd1 *) (* src = "./core/reg_file.v:125.9-125.14|./core/reg_file.v:125.5-133.8" *) 5'hxx : _04_;
  assign _11_ = | (* src = "./core/reg_file.v:80.23-80.34" *) rd_addr_i;
  assign rs1_data_o = \__MUX_ternary/core/reg_filev85449__WIRE_and/core/reg_filev85447_Y  ? (* src = "./core/reg_file.v:85.21-85.81" *) rd_data_i : _09_;
  assign rs2_data_o = \__MUX_ternary/core/reg_filev86453__WIRE_and/core/reg_filev86451_Y  ? (* src = "./core/reg_file.v:86.21-86.81" *) rd_data_i : _10_;
  assign __MUX_procmux7036__WIRE_rst_i = rst_i;
  assign __MUX_procmux6922__WIRE_we = we;
  assign _00_[30:0] = { _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31], _00_[31] };
  assign _03_[30:0] = { _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31], _03_[31] };
  assign _06_[30:0] = { _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31], _06_[31] };
endmodule

(* dynports =  1  *)
(* hdlname = "\\writeback" *)
(* src = "./core/writeback.v:57.1-271.10" *)
module writeback(clk_i, rst_i, stall_i, flush_i, regfile_we_i, rd_addr_i, regfile_input_sel_i, signex_sel_i, addr_alignment_i, p_data_i, csr_we_i, csr_we_addr_i, csr_we_data_i, m_data_i, rd_we_o, rd_addr_o, rd_data_o, pc_i, pc_o, sys_jump_i, sys_jump_csr_addr_i
, sys_jump_o, sys_jump_csr_addr_o, fetch_valid_i, fetch_valid_o, csr_we_o, csr_we_addr_o, csr_we_data_o, xcpt_valid_i, xcpt_cause_i, xcpt_tval_i, xcpt_valid_o, xcpt_cause_o, xcpt_tval_o, \__MUX_ternary/core/writebackv245180__WIRE_signex_sel_r , __MUX_procmux7801__WIRE_xcpt_valid_i, __MUX_autopmuxtreecc65recursive_mux_generator9989__WIRE_autortlilcc2430Or9988, __MUX_autopmuxtreecc65recursive_mux_generator9985__WIRE_procmux7794_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9983__WIRE_procmux7792_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9977__WIRE_autortlilcc2430Or9976, __MUX_autopmuxtreecc65recursive_mux_generator9973__WIRE_procmux7798_CMP, __MUX_autopmuxtreecc65recursive_mux_generator9971__WIRE_procmux7796_CMP
, metaReset_writeback);
  wire [31:0] _00_;
  wire [31:0] _01_;
  wire [31:0] _02_;
  wire [31:0] _03_;
  (* src = "./core/writeback.v:138.19-138.38" *)
  wire _04_;
  (* src = "./core/writeback.v:138.30-138.38" *)
  wire _05_;
  (* src = "./core/writeback.v:138.9-138.39" *)
  wire _06_;
  wire _07_;
  wire _08_;
  wire [31:0] _09_;
  wire _10_;
  wire [1:0] _11_;
  wire _12_;
  wire [31:0] _13_;
  wire [31:0] _14_;
  wire _15_;
  wire [31:0] _16_;
  wire [1:0] _17_;
  wire _18_;
  wire [2:0] _19_;
  wire [4:0] _20_;
  wire _21_;
  (* src = "./core/writeback.v:245.27-247.71" *)
  wire [31:0] _22_;
  (* src = "./core/writeback.v:248.27-250.73" *)
  wire [31:0] _23_;
  (* mux_wire = 32'd1 *)
  (* writeback = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9971__WIRE_procmux7796_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9971__WIRE_procmux7796_CMP;
  (* mux_wire = 32'd1 *)
  (* writeback = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9973__WIRE_procmux7798_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9973__WIRE_procmux7798_CMP;
  (* mux_wire = 32'd1 *)
  (* writeback = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9977__WIRE_autortlilcc2430Or9976;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9977__WIRE_autortlilcc2430Or9976;
  (* mux_wire = 32'd1 *)
  (* writeback = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9983__WIRE_procmux7792_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9983__WIRE_procmux7792_CMP;
  (* mux_wire = 32'd1 *)
  (* writeback = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9985__WIRE_procmux7794_CMP;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9985__WIRE_procmux7794_CMP;
  (* mux_wire = 32'd1 *)
  (* writeback = 32'd1 *)
  output __MUX_autopmuxtreecc65recursive_mux_generator9989__WIRE_autortlilcc2430Or9988;
  wire __MUX_autopmuxtreecc65recursive_mux_generator9989__WIRE_autortlilcc2430Or9988;
  (* mux_wire = 32'd1 *)
  (* writeback = 32'd1 *)
  output __MUX_procmux7801__WIRE_xcpt_valid_i;
  wire __MUX_procmux7801__WIRE_xcpt_valid_i;
  (* mux_wire = 32'd1 *)
  (* writeback = 32'd1 *)
  output \__MUX_ternary/core/writebackv245180__WIRE_signex_sel_r ;
  wire \__MUX_ternary/core/writebackv245180__WIRE_signex_sel_r ;
  (* src = "./core/writeback.v:74.25-74.41" *)
  input [1:0] addr_alignment_i;
  wire [1:0] addr_alignment_i;
  (* src = "./core/writeback.v:121.25-121.41" *)
  reg [1:0] addr_alignment_r;
  (* src = "./core/writeback.v:123.25-123.37" *)
  wire [31:0] aligned_data;
  (* src = "./core/writeback.v:60.25-60.30" *)
  input clk_i;
  wire clk_i;
  (* src = "./core/writeback.v:78.25-78.38" *)
  input [11:0] csr_we_addr_i;
  wire [11:0] csr_we_addr_i;
  (* src = "./core/writeback.v:105.25-105.38" *)
  output [11:0] csr_we_addr_o;
  wire [11:0] csr_we_addr_o;
  (* src = "./core/writeback.v:133.25-133.38" *)
  (* unused_bits = "12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  reg [31:0] csr_we_addr_r;
  (* src = "./core/writeback.v:79.25-79.38" *)
  input [31:0] csr_we_data_i;
  wire [31:0] csr_we_data_i;
  (* src = "./core/writeback.v:106.25-106.38" *)
  output [31:0] csr_we_data_o;
  reg [31:0] csr_we_data_o;
  (* src = "./core/writeback.v:77.25-77.33" *)
  input csr_we_i;
  wire csr_we_i;
  (* src = "./core/writeback.v:104.25-104.33" *)
  output csr_we_o;
  reg csr_we_o;
  (* src = "./core/writeback.v:100.25-100.38" *)
  input fetch_valid_i;
  wire fetch_valid_i;
  (* src = "./core/writeback.v:101.25-101.38" *)
  output fetch_valid_o;
  reg fetch_valid_o;
  (* src = "./core/writeback.v:67.25-67.32" *)
  input flush_i;
  wire flush_i;
  (* src = "./core/writeback.v:82.25-82.33" *)
  input [31:0] m_data_i;
  wire [31:0] m_data_i;
  (* src = "./core/writeback.v:122.35-122.43" *)
  reg [31:0] m_data_r;
  (* meta_reset = 32'd1 *)
  input metaReset_writeback;
  wire metaReset_writeback;
  (* src = "./core/writeback.v:75.25-75.33" *)
  input [31:0] p_data_i;
  wire [31:0] p_data_i;
  (* src = "./core/writeback.v:122.25-122.33" *)
  reg [31:0] p_data_r;
  (* src = "./core/writeback.v:90.25-90.29" *)
  input [31:0] pc_i;
  wire [31:0] pc_i;
  (* src = "./core/writeback.v:91.25-91.29" *)
  output [31:0] pc_o;
  reg [31:0] pc_o;
  (* src = "./core/writeback.v:71.25-71.34" *)
  input [4:0] rd_addr_i;
  wire [4:0] rd_addr_i;
  (* src = "./core/writeback.v:86.25-86.34" *)
  output [4:0] rd_addr_o;
  reg [4:0] rd_addr_o;
  (* src = "./core/writeback.v:87.25-87.34" *)
  output [31:0] rd_data_o;
  wire [31:0] rd_data_o;
  (* src = "./core/writeback.v:85.25-85.32" *)
  output rd_we_o;
  reg rd_we_o;
  (* src = "./core/writeback.v:72.25-72.44" *)
  input [2:0] regfile_input_sel_i;
  wire [2:0] regfile_input_sel_i;
  (* src = "./core/writeback.v:117.25-117.44" *)
  reg [2:0] regfile_input_sel_r;
  (* src = "./core/writeback.v:70.25-70.37" *)
  input regfile_we_i;
  wire regfile_we_i;
  (* src = "./core/writeback.v:61.25-61.30" *)
  input rst_i;
  wire rst_i;
  (* src = "./core/writeback.v:73.25-73.37" *)
  input signex_sel_i;
  wire signex_sel_i;
  (* src = "./core/writeback.v:120.25-120.37" *)
  reg signex_sel_r;
  (* src = "./core/writeback.v:64.25-64.32" *)
  input stall_i;
  wire stall_i;
  (* src = "./core/writeback.v:95.25-95.44" *)
  input [1:0] sys_jump_csr_addr_i;
  wire [1:0] sys_jump_csr_addr_i;
  (* src = "./core/writeback.v:97.25-97.44" *)
  output [1:0] sys_jump_csr_addr_o;
  reg [1:0] sys_jump_csr_addr_o;
  (* src = "./core/writeback.v:94.25-94.35" *)
  input sys_jump_i;
  wire sys_jump_i;
  (* src = "./core/writeback.v:96.25-96.35" *)
  output sys_jump_o;
  reg sys_jump_o;
  (* src = "./core/writeback.v:110.25-110.37" *)
  input [3:0] xcpt_cause_i;
  wire [3:0] xcpt_cause_i;
  (* src = "./core/writeback.v:113.25-113.37" *)
  output [3:0] xcpt_cause_o;
  reg [3:0] xcpt_cause_o;
  (* src = "./core/writeback.v:111.25-111.36" *)
  input [31:0] xcpt_tval_i;
  wire [31:0] xcpt_tval_i;
  (* src = "./core/writeback.v:114.25-114.36" *)
  output [31:0] xcpt_tval_o;
  reg [31:0] xcpt_tval_o;
  (* src = "./core/writeback.v:109.25-109.37" *)
  input xcpt_valid_i;
  wire xcpt_valid_i;
  (* src = "./core/writeback.v:112.25-112.37" *)
  output xcpt_valid_o;
  reg xcpt_valid_o;
  (* src = "./core/writeback.v:220.1-230.4" *)
  always_ff @(posedge clk_i)
    if (rst_i) m_data_r <= 32'd0;
    else if (!stall_i) m_data_r <= _09_;
  (* src = "./core/writeback.v:136.1-218.4" *)
  always_ff @(posedge clk_i)
    if (_06_) regfile_input_sel_r <= 3'h4;
    else if (!stall_i) regfile_input_sel_r <= _19_;
  (* src = "./core/writeback.v:136.1-218.4" *)
  always_ff @(posedge clk_i)
    if (_06_) rd_we_o <= 1'h0;
    else if (!stall_i) rd_we_o <= _21_;
  (* src = "./core/writeback.v:136.1-218.4" *)
  always_ff @(posedge clk_i)
    if (_06_) rd_addr_o <= 5'h00;
    else if (!stall_i) rd_addr_o <= _20_;
  (* src = "./core/writeback.v:136.1-218.4" *)
  always_ff @(posedge clk_i)
    if (_06_) signex_sel_r <= 1'h0;
    else if (!stall_i) signex_sel_r <= _18_;
  (* src = "./core/writeback.v:136.1-218.4" *)
  always_ff @(posedge clk_i)
    if (_06_) addr_alignment_r <= 2'h0;
    else if (!stall_i) addr_alignment_r <= _17_;
  (* src = "./core/writeback.v:136.1-218.4" *)
  always_ff @(posedge clk_i)
    if (_06_) p_data_r <= 32'd0;
    else if (!stall_i) p_data_r <= _16_;
  (* src = "./core/writeback.v:136.1-218.4" *)
  always_ff @(posedge clk_i)
    if (_06_) xcpt_valid_o <= 1'h0;
    else if (!stall_i) xcpt_valid_o <= xcpt_valid_i;
  (* src = "./core/writeback.v:136.1-218.4" *)
  always_ff @(posedge clk_i)
    if (_06_) xcpt_cause_o <= 4'h0;
    else if (!stall_i) xcpt_cause_o <= xcpt_cause_i;
  (* src = "./core/writeback.v:136.1-218.4" *)
  always_ff @(posedge clk_i)
    if (_06_) xcpt_tval_o <= 32'd0;
    else if (!stall_i) xcpt_tval_o <= xcpt_tval_i;
  (* src = "./core/writeback.v:136.1-218.4" *)
  always_ff @(posedge clk_i)
    if (_06_) sys_jump_o <= 1'h0;
    else if (!stall_i) sys_jump_o <= _12_;
  (* src = "./core/writeback.v:136.1-218.4" *)
  always_ff @(posedge clk_i)
    if (_06_) sys_jump_csr_addr_o <= 2'h0;
    else if (!stall_i) sys_jump_csr_addr_o <= _11_;
  (* src = "./core/writeback.v:136.1-218.4" *)
  always_ff @(posedge clk_i)
    if (_06_) pc_o <= 32'd0;
    else if (!stall_i) pc_o <= pc_i;
  (* src = "./core/writeback.v:136.1-218.4" *)
  always_ff @(posedge clk_i)
    if (_06_) fetch_valid_o <= 1'h0;
    else if (!stall_i) fetch_valid_o <= _10_;
  (* src = "./core/writeback.v:136.1-218.4" *)
  always_ff @(posedge clk_i)
    if (_06_) csr_we_o <= 1'h0;
    else if (!stall_i) csr_we_o <= _15_;
  (* src = "./core/writeback.v:136.1-218.4" *)
  always_ff @(posedge clk_i)
    if (_06_) csr_we_addr_r <= 32'd0;
    else if (!stall_i) csr_we_addr_r <= _14_;
  (* src = "./core/writeback.v:136.1-218.4" *)
  always_ff @(posedge clk_i)
    if (_06_) csr_we_data_o <= 32'd0;
    else if (!stall_i) csr_we_data_o <= _13_;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9977__WIRE_autortlilcc2430Or9976 = _08_ | __MUX_autopmuxtreecc65recursive_mux_generator9971__WIRE_procmux7796_CMP;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9989__WIRE_autortlilcc2430Or9988 = _07_ | __MUX_autopmuxtreecc65recursive_mux_generator9983__WIRE_procmux7792_CMP;
  assign _00_ = __MUX_autopmuxtreecc65recursive_mux_generator9971__WIRE_procmux7796_CMP ? { m_data_r[23:0], m_data_r[31:24] } : { m_data_r[15:0], m_data_r[31:16] };
  assign _01_ = __MUX_autopmuxtreecc65recursive_mux_generator9973__WIRE_procmux7798_CMP ? { m_data_r[7:0], m_data_r[31:8] } : m_data_r;
  assign aligned_data = __MUX_autopmuxtreecc65recursive_mux_generator9977__WIRE_autortlilcc2430Or9976 ? _00_ : _01_;
  assign _02_ = __MUX_autopmuxtreecc65recursive_mux_generator9983__WIRE_procmux7792_CMP ? aligned_data : _23_;
  assign _03_ = __MUX_autopmuxtreecc65recursive_mux_generator9985__WIRE_procmux7794_CMP ? _22_ : p_data_r;
  assign rd_data_o = __MUX_autopmuxtreecc65recursive_mux_generator9989__WIRE_autortlilcc2430Or9988 ? _02_ : _03_;
  assign _04_ = flush_i && (* src = "./core/writeback.v:138.19-138.38" *) _05_;
  assign _05_ = ! (* src = "./core/writeback.v:138.30-138.38" *) stall_i;
  assign _06_ = rst_i || (* src = "./core/writeback.v:138.9-138.39" *) _04_;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9983__WIRE_procmux7792_CMP = regfile_input_sel_r == (* full_case = 32'd1 *) (* src = "./core/writeback.v:0.0-0.0|./core/writeback.v:244.5-253.12" *) 3'h2;
  assign _07_ = regfile_input_sel_r == (* full_case = 32'd1 *) (* src = "./core/writeback.v:0.0-0.0|./core/writeback.v:244.5-253.12" *) 3'h1;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9985__WIRE_procmux7794_CMP = ! (* full_case = 32'd1 *) (* src = "./core/writeback.v:0.0-0.0|./core/writeback.v:244.5-253.12" *) regfile_input_sel_r;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9971__WIRE_procmux7796_CMP = addr_alignment_r == (* full_case = 32'd1 *) (* src = "./core/writeback.v:0.0-0.0|./core/writeback.v:234.5-239.12" *) 2'h3;
  assign _08_ = addr_alignment_r == (* full_case = 32'd1 *) (* src = "./core/writeback.v:0.0-0.0|./core/writeback.v:234.5-239.12" *) 2'h2;
  assign __MUX_autopmuxtreecc65recursive_mux_generator9973__WIRE_procmux7798_CMP = addr_alignment_r == (* full_case = 32'd1 *) (* src = "./core/writeback.v:0.0-0.0|./core/writeback.v:234.5-239.12" *) 2'h1;
  assign _09_ = xcpt_valid_i ? (* full_case = 32'd1 *) (* src = "./core/writeback.v:226.14-226.26|./core/writeback.v:226.10-229.30" *) 32'd0 : m_data_i;
  assign _10_ = xcpt_valid_i ? (* full_case = 32'd1 *) (* src = "./core/writeback.v:178.14-178.26|./core/writeback.v:178.10-217.8" *) 1'h1 : fetch_valid_i;
  assign _11_ = xcpt_valid_i ? (* full_case = 32'd1 *) (* src = "./core/writeback.v:178.14-178.26|./core/writeback.v:178.10-217.8" *) 2'h0 : sys_jump_csr_addr_i;
  assign _12_ = xcpt_valid_i ? (* full_case = 32'd1 *) (* src = "./core/writeback.v:178.14-178.26|./core/writeback.v:178.10-217.8" *) 1'h0 : sys_jump_i;
  assign _13_ = xcpt_valid_i ? (* full_case = 32'd1 *) (* src = "./core/writeback.v:178.14-178.26|./core/writeback.v:178.10-217.8" *) 32'd0 : csr_we_data_i;
  assign _14_ = xcpt_valid_i ? (* full_case = 32'd1 *) (* src = "./core/writeback.v:178.14-178.26|./core/writeback.v:178.10-217.8" *) 32'd0 : { 20'h00000, csr_we_addr_i };
  assign _15_ = xcpt_valid_i ? (* full_case = 32'd1 *) (* src = "./core/writeback.v:178.14-178.26|./core/writeback.v:178.10-217.8" *) 1'h0 : csr_we_i;
  assign _16_ = xcpt_valid_i ? (* full_case = 32'd1 *) (* src = "./core/writeback.v:178.14-178.26|./core/writeback.v:178.10-217.8" *) 32'd0 : p_data_i;
  assign _17_ = xcpt_valid_i ? (* full_case = 32'd1 *) (* src = "./core/writeback.v:178.14-178.26|./core/writeback.v:178.10-217.8" *) 2'h0 : addr_alignment_i;
  assign _18_ = xcpt_valid_i ? (* full_case = 32'd1 *) (* src = "./core/writeback.v:178.14-178.26|./core/writeback.v:178.10-217.8" *) 1'h0 : signex_sel_i;
  assign _19_ = xcpt_valid_i ? (* full_case = 32'd1 *) (* src = "./core/writeback.v:178.14-178.26|./core/writeback.v:178.10-217.8" *) 3'h4 : regfile_input_sel_i;
  assign _20_ = xcpt_valid_i ? (* full_case = 32'd1 *) (* src = "./core/writeback.v:178.14-178.26|./core/writeback.v:178.10-217.8" *) 5'h00 : rd_addr_i;
  assign _21_ = xcpt_valid_i ? (* full_case = 32'd1 *) (* src = "./core/writeback.v:178.14-178.26|./core/writeback.v:178.10-217.8" *) 1'h0 : regfile_we_i;
  assign _22_ = signex_sel_r ? (* src = "./core/writeback.v:245.27-247.71" *) { 24'h000000, aligned_data[7:0] } : { aligned_data[7], aligned_data[7], aligned_data[7], aligned_data[7], aligned_data[7], aligned_data[7], aligned_data[7], aligned_data[7], aligned_data[7], aligned_data[7], aligned_data[7], aligned_data[7], aligned_data[7], aligned_data[7], aligned_data[7], aligned_data[7], aligned_data[7], aligned_data[7], aligned_data[7], aligned_data[7], aligned_data[7], aligned_data[7], aligned_data[7], aligned_data[7], aligned_data[7:0] };
  assign _23_ = signex_sel_r ? (* src = "./core/writeback.v:248.27-250.73" *) { 16'h0000, aligned_data[15:0] } : { aligned_data[15], aligned_data[15], aligned_data[15], aligned_data[15], aligned_data[15], aligned_data[15], aligned_data[15], aligned_data[15], aligned_data[15], aligned_data[15], aligned_data[15], aligned_data[15], aligned_data[15], aligned_data[15], aligned_data[15], aligned_data[15], aligned_data[15:0] };
  assign __MUX_procmux7801__WIRE_xcpt_valid_i = xcpt_valid_i;
  assign \__MUX_ternary/core/writebackv245180__WIRE_signex_sel_r  = signex_sel_r;
  assign csr_we_addr_o = csr_we_addr_r[11:0];
endmodule
